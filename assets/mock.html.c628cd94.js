import{_ as t,r as p,o,c,b as n,d as e,e as s,f as u}from"./app.2ddb10a7.js";const i={},l=n("h1",{id:"mock",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mock","aria-hidden":"true"},"#"),s(" Mock")],-1),k=n("h2",{id:"description",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),s(" Description")],-1),r=s("All functions of Goravel are implemented using "),d=n("code",null,"facades",-1),m=s(", and all "),v=n("code",null,"facades",-1),f=s(" are made up of interfaces. So with the mock fucntion of "),b={href:"http://github.com/stretchr/testify",target:"_blank",rel:"noopener noreferrer"},g=s("stretchr/testify"),q=s(", Goravel can provide an excellent testing experience."),h=u(`<h2 id="mock-facades-cache" tabindex="-1"><a class="header-anchor" href="#mock-facades-cache" aria-hidden="true">#</a> Mock facades.Cache</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>

<span class="token keyword">func</span> <span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;cache.put.error&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestCache</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockCache <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockCache<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Put&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockCache<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Get&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	res <span class="token operator">:=</span> <span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-config" tabindex="-1"><a class="header-anchor" href="#mock-facades-config" aria-hidden="true">#</a> Mock facades.Config</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Config<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;app.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestConfig</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockConfig <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockConfig<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;GetString&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;app.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	res <span class="token operator">:=</span> <span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-artisan" tabindex="-1"><a class="header-anchor" href="#mock-facades-artisan" aria-hidden="true">#</a> Mock facades.Artisan</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">ArtisanCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	facades<span class="token punctuation">.</span>Artisan<span class="token punctuation">.</span><span class="token function">Call</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestArtisan</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockArticle <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Artisan</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockArticle<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Call&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">NotPanics</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">ArtisanCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-orm" tabindex="-1"><a class="header-anchor" href="#mock-facades-orm" aria-hidden="true">#</a> Mock facades.Orm</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">Orm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Orm<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Test<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> test Test
	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Orm<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;id = ?&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>test<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestOrm</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockOrm<span class="token punctuation">,</span> mockOrmDB<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Orm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockOrm<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockOrmDB<span class="token punctuation">)</span>

	mockOrmDB<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Create&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockOrmDB<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Where&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id = ?&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockOrmDB<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockOrmDB<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Find&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Nil</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token function">Orm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Orm<span class="token punctuation">.</span><span class="token function">Transaction</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>tx contractorm<span class="token punctuation">.</span>Transaction<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> test Test
		<span class="token keyword">if</span> err <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>

		<span class="token keyword">var</span> test1 Test
		<span class="token keyword">return</span> tx<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;id = ?&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>test1<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestTransaction</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockOrm<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> mockOrmTransaction <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Orm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockOrm<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Transaction&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>txFunc <span class="token keyword">func</span><span class="token punctuation">(</span>tx orm<span class="token punctuation">.</span>Transaction<span class="token punctuation">)</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">txFunc</span><span class="token punctuation">(</span>mockOrmTransaction<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> test Test
	mockOrmTransaction<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Create&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>test<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>test2 <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		test2<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>Test<span class="token punctuation">)</span><span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">1</span>

		<span class="token keyword">return</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockOrmTransaction<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Where&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id = ?&quot;</span><span class="token punctuation">,</span> <span class="token function">uint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockOrmTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockOrmTransaction<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Find&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Nil</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token function">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	tx<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Orm<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	user <span class="token operator">:=</span> models<span class="token punctuation">.</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> tx<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> tx<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-event" tabindex="-1"><a class="header-anchor" href="#mock-facades-event" aria-hidden="true">#</a> Mock facades.Event</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">Event</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Event<span class="token punctuation">.</span><span class="token function">Job</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>events<span class="token punctuation">.</span>TestEvent<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>contractevent<span class="token punctuation">.</span>Arg<span class="token punctuation">{</span>
		<span class="token punctuation">{</span>Type<span class="token punctuation">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> Value<span class="token punctuation">:</span> <span class="token string">&quot;abcc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>Type<span class="token punctuation">:</span> <span class="token string">&quot;int&quot;</span><span class="token punctuation">,</span> Value<span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestEvent</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockEvent<span class="token punctuation">,</span> mockTask <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Event</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockEvent<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Job&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockTask<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Dispatch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Nil</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token function">Event</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-log" tabindex="-1"><a class="header-anchor" href="#mock-facades-log" aria-hidden="true">#</a> Mock facades.Log</h2><p><code>facades.Log</code> doesn&#39;t implement mock, use <code>fmt</code> instead of the actual log output, easy to debug during testing.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	facades<span class="token punctuation">.</span>Log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestLog</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mock<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-mail" tabindex="-1"><a class="header-anchor" href="#mock-facades-mail" aria-hidden="true">#</a> Mock facades.Mail</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">Mail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Mail<span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span>mail<span class="token punctuation">.</span>From<span class="token punctuation">{</span>Address<span class="token punctuation">:</span> <span class="token string">&quot;example@example.com&quot;</span><span class="token punctuation">,</span> Name<span class="token punctuation">:</span> <span class="token string">&quot;example&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">To</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;example@example.com&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Content</span><span class="token punctuation">(</span>mail<span class="token punctuation">.</span>Content<span class="token punctuation">{</span>Subject<span class="token punctuation">:</span> <span class="token string">&quot;Subject&quot;</span><span class="token punctuation">,</span> Html<span class="token punctuation">:</span> <span class="token string">&quot;&lt;h1&gt;Hello Goravel&lt;/h1&gt;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestMail</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockMail <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Mail</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockMail<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;From&quot;</span><span class="token punctuation">,</span> mail<span class="token punctuation">.</span>From<span class="token punctuation">{</span>Address<span class="token punctuation">:</span> <span class="token string">&quot;example@example.com&quot;</span><span class="token punctuation">,</span> Name<span class="token punctuation">:</span> <span class="token string">&quot;example&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockMail<span class="token punctuation">)</span>
	mockMail<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;To&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;example@example.com&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockMail<span class="token punctuation">)</span>
	mockMail<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Content&quot;</span><span class="token punctuation">,</span> mail<span class="token punctuation">.</span>Content<span class="token punctuation">{</span>Subject<span class="token punctuation">:</span> <span class="token string">&quot;Subject&quot;</span><span class="token punctuation">,</span> Html<span class="token punctuation">:</span> <span class="token string">&quot;&lt;h1&gt;Hello Goravel&lt;/h1&gt;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockMail<span class="token punctuation">)</span>
	mockMail<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Send&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Nil</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token function">Mail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mock-facades-queue" tabindex="-1"><a class="header-anchor" href="#mock-facades-queue" aria-hidden="true">#</a> Mock facades.Queue</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/testing/mock&quot;</span>
<span class="token keyword">func</span> <span class="token function">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> facades<span class="token punctuation">.</span>Queue<span class="token punctuation">.</span><span class="token function">Job</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>jobs<span class="token punctuation">.</span>TestSyncJob<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>queue<span class="token punctuation">.</span>Arg<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestQueue</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mockQueue<span class="token punctuation">,</span> mockTask <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockQueue<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Job&quot;</span><span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">,</span> mock<span class="token punctuation">.</span>Anything<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span>mockTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	mockTask<span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;Dispatch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Nil</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token function">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function y(w,O){const a=p("ExternalLinkIcon");return o(),c("div",null,[l,k,n("p",null,[r,d,m,v,f,n("a",b,[g,e(a)]),q]),h])}const x=t(i,[["render",y],["__file","mock.html.vue"]]);export{x as default};
