import{_ as i,c,b as s,e as a,f as e,a as u,r as o,o as r,d as p}from"./app-B8SkG--w.js";const d={},k={class:"table-of-contents"};function g(v,n){const t=o("router-link"),l=o("CommentService");return r(),c("div",null,[n[23]||(n[23]=s("h1",{id:"文件存储",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#文件存储"},[s("span",null,"文件存储")])],-1)),s("nav",k,[s("ul",null,[s("li",null,[a(t,{to:"#简介"},{default:e(()=>n[0]||(n[0]=[p("简介")])),_:1})]),s("li",null,[a(t,{to:"#配置"},{default:e(()=>n[1]||(n[1]=[p("配置")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#本地驱动"},{default:e(()=>n[2]||(n[2]=[p("本地驱动")])),_:1})]),s("li",null,[a(t,{to:"#公共磁盘"},{default:e(()=>n[3]||(n[3]=[p("公共磁盘")])),_:1})])])]),s("li",null,[a(t,{to:"#获取磁盘实例"},{default:e(()=>n[4]||(n[4]=[p("获取磁盘实例")])),_:1})]),s("li",null,[a(t,{to:"#注入-context"},{default:e(()=>n[5]||(n[5]=[p("注入 Context")])),_:1})]),s("li",null,[a(t,{to:"#检索文件"},{default:e(()=>n[6]||(n[6]=[p("检索文件")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#文件地址"},{default:e(()=>n[7]||(n[7]=[p("文件地址")])),_:1})]),s("li",null,[a(t,{to:"#文件-metadata-信息"},{default:e(()=>n[8]||(n[8]=[p("文件 Metadata 信息")])),_:1})]),s("li",null,[a(t,{to:"#文件路径"},{default:e(()=>n[9]||(n[9]=[p("文件路径")])),_:1})])])]),s("li",null,[a(t,{to:"#储存文件"},{default:e(()=>n[10]||(n[10]=[p("储存文件")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#复制-移动文件"},{default:e(()=>n[11]||(n[11]=[p("复制 / 移动文件")])),_:1})]),s("li",null,[a(t,{to:"#文件上传"},{default:e(()=>n[12]||(n[12]=[p("文件上传")])),_:1})]),s("li",null,[a(t,{to:"#指定一个文件名"},{default:e(()=>n[13]||(n[13]=[p("指定一个文件名")])),_:1})]),s("li",null,[a(t,{to:"#指定一个磁盘"},{default:e(()=>n[14]||(n[14]=[p("指定一个磁盘")])),_:1})]),s("li",null,[a(t,{to:"#其他上传文件信息"},{default:e(()=>n[15]||(n[15]=[p("其他上传文件信息")])),_:1})])])]),s("li",null,[a(t,{to:"#删除文件"},{default:e(()=>n[16]||(n[16]=[p("删除文件")])),_:1})]),s("li",null,[a(t,{to:"#目录"},{default:e(()=>n[17]||(n[17]=[p("目录")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#获取目录下所有的文件"},{default:e(()=>n[18]||(n[18]=[p("获取目录下所有的文件")])),_:1})]),s("li",null,[a(t,{to:"#获取特定目录下的子目录"},{default:e(()=>n[19]||(n[19]=[p("获取特定目录下的子目录")])),_:1})]),s("li",null,[a(t,{to:"#创建一个目录"},{default:e(()=>n[20]||(n[20]=[p("创建一个目录")])),_:1})]),s("li",null,[a(t,{to:"#删除一个目录"},{default:e(()=>n[21]||(n[21]=[p("删除一个目录")])),_:1})])])]),s("li",null,[a(t,{to:"#自定义文件系统"},{default:e(()=>n[22]||(n[22]=[p("自定义文件系统")])),_:1})])])]),n[24]||(n[24]=u(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Goravel 为使用本地文件系统、Amazon S3、Aliyun OSS、Tencent COS、Minio 和 Cloudinary 提供了简单易用的驱动程序。 更棒的是，由于每个系统的 API 保持不变，所以在这些存储选项之间切换是非常简单的。框架自带 <code>local</code> 驱动，如需其他驱动，请查看对应的独立扩展包：</p><table><thead><tr><th>驱动</th><th>地址</th></tr></thead><tbody><tr><td>S3</td><td><a href="https://github.com/goravel/s3" target="_blank" rel="noopener noreferrer">https://github.com/goravel/s3</a></td></tr><tr><td>OSS</td><td><a href="https://github.com/goravel/oss" target="_blank" rel="noopener noreferrer">https://github.com/goravel/oss</a></td></tr><tr><td>COS</td><td><a href="https://github.com/goravel/cos" target="_blank" rel="noopener noreferrer">https://github.com/goravel/cos</a></td></tr><tr><td>Minio</td><td><a href="https://github.com/goravel/minio" target="_blank" rel="noopener noreferrer">https://github.com/goravel/minio</a></td></tr><tr><td>Cloudinary</td><td><a href="https://github.com/goravel/cloudinary" target="_blank" rel="noopener noreferrer">https://github.com/goravel/cloudinary</a></td></tr></tbody></table><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p>配置文件位于 <code>config/filesystems.go</code>。在这个文件中你可以配置所有的「磁盘」，每个磁盘代表特定的存储驱动及存储位置。</p><blockquote><p>技巧：你可以配置任意数量的磁盘，甚至可以添加多个使用相同驱动的磁盘。</p></blockquote><h3 id="本地驱动" tabindex="-1"><a class="header-anchor" href="#本地驱动"><span>本地驱动</span></a></h3><p>使用 <code>local</code> 驱动时，所有文件操作都与 <code>filesystems</code> 配置文件中定义的 <code>root</code> 目录相关。 默认情况下，此值设置为 <code>storage/app</code> 目录。因此，以下方法会把文件存储在 <code>storage/app/example.txt</code> 中：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Contents&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="公共磁盘" tabindex="-1"><a class="header-anchor" href="#公共磁盘"><span>公共磁盘</span></a></h3><p>在 <code>filesystems</code> 配置文件中定义的 <code>public</code> 磁盘适用于要公开访问的文件。默认情况下，<code>public</code> 磁盘使用 <code>local</code> 驱动，并且将这些文件存储在 <code>storage/app/public</code> 目录下。要使这些文件可从 web 访问，可以创建一个文件路由：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">&quot;storage&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./storage/app/public&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="获取磁盘实例" tabindex="-1"><a class="header-anchor" href="#获取磁盘实例"><span>获取磁盘实例</span></a></h2><p><code>Storage</code> Facade 可用于与所有已配置的磁盘进行交互。例如，你可以使用 Facade 中的 <code>Put</code> 方法将头像存储到默认磁盘。如果你使用 <code>Storage</code> Facade 时并没有使用 <code>Disk</code> 方法，那么所有的方法调用将会自动传递给默认的磁盘：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;avatars/1.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Contents&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果应用要与多个磁盘进行交互，可使用 <code>Storage</code> Facade 中的 <code>Disk</code> 方法对特定磁盘上的文件进行操作：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;avatars/1.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Contents&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="注入-context" tabindex="-1"><a class="header-anchor" href="#注入-context"><span>注入 Context</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;avatars/1.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Contents&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="检索文件" tabindex="-1"><a class="header-anchor" href="#检索文件"><span>检索文件</span></a></h2><p><code>Get</code> 方法可以用于获取文件的内容，此方法返回该文件的原始字符串内容。切记，所有文件路径的指定都应该相对于该磁盘所配置的 <code>root</code> 目录：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">contents <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>Exists</code> 方法可以用来判断磁盘上是否存在指定的文件：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Missing</code> 方法可以用来判断磁盘上是否缺少指定的文件：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Missing</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件地址" tabindex="-1"><a class="header-anchor" href="#文件地址"><span>文件地址</span></a></h3><p>你可以使用 <code>Url</code> 方法来获取给定文件的 url。如果你使用的是 <code>local</code> 驱动程序，这通常会将 <code>/storage</code> 添加到给定的路径，并返回文件的相对 URL。如果你使用的是 <code>s3</code> 驱动程序，则会返回完整路径的远程 URL：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">url <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Url</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>注意：当使用 <code>local</code> 驱动时， <code>Url</code> 的返回值不是 url 编码的。因此，我们建议总是使用可以创建有效 url 的名称来存储文件。</p></blockquote><h4 id="临时地址" tabindex="-1"><a class="header-anchor" href="#临时地址"><span>临时地址</span></a></h4><p>使用 <code>TemporaryUrl</code> 方法，你可以为使用非本地驱动程序存储的文件创建临时 URL。此方法接受一个路径和一个 <code>time</code> 实例，指定 URL 何时过期：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">url<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TemporaryUrl</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件-metadata-信息" tabindex="-1"><a class="header-anchor" href="#文件-metadata-信息"><span>文件 Metadata 信息</span></a></h3><p>除了读写文件，Goravel 还可以提供有关文件自身的信息：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">size <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>LastModified</code> 方法返回上次修改文件时的时间：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">time<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LastModified</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>MimeType</code> 方法返回文件的 MINE 类型：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mime<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">MimeType</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以使用 <code>NewFile</code> 方法获取：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/filesystem&quot;</span></span>
<span class="line"></span>
<span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> filesystem<span class="token punctuation">.</span><span class="token function">NewFile</span><span class="token punctuation">(</span><span class="token string">&quot;./logo.png&quot;</span><span class="token punctuation">)</span></span>
<span class="line">size<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">lastModified<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">LastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">mime<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">MimeType</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件路径" tabindex="-1"><a class="header-anchor" href="#文件路径"><span>文件路径</span></a></h3><p>可以使用 <code>Path</code> 方法获取给定文件的路径。如果你使用的是 <code>local</code> 驱动程序，这将返回文件的相对路径。如果你使用的是 <code>s3</code> 等驱动程序，此方法将返回 bucket 中文件的相对路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Path</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="储存文件" tabindex="-1"><a class="header-anchor" href="#储存文件"><span>储存文件</span></a></h2><p>可以使用 <code>Put</code> 方法将文件内容存储在磁盘上。请记住，应相对于为磁盘配置的根目录指定所有文件路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">,</span> contents<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以使用 <code>PutFile</code> 和 <code>PutFileAs</code> 直接将文件保存在磁盘上：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/filesystem&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 自动生成一个唯一文件名 ...</span></span>
<span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> filesystem<span class="token punctuation">.</span><span class="token function">NewFile</span><span class="token punctuation">(</span><span class="token string">&quot;./logo.png&quot;</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PutFile</span><span class="token punctuation">(</span><span class="token string">&quot;photos&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 手动指定文件名 ...</span></span>
<span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> filesystem<span class="token punctuation">.</span><span class="token function">NewFile</span><span class="token punctuation">(</span><span class="token string">&quot;./logo.png&quot;</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PutFileAs</span><span class="token punctuation">(</span><span class="token string">&quot;photos&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> <span class="token string">&quot;photo.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于 <code>PutFile</code> 和 <code>PutFileAs</code> 方法，有一些重要的事情需要注意。那就是，我们只指定了一个目录名，而没有指定文件名。默认情况下，<code>PutFile</code> 方法将生成一个唯一的 ID 作为文件名。文件的扩展名将通过检查文件的 MIME 类型来确定。这两个方法将返回文件的路径，以便你可以将路径（包括生成的文件名）存储在数据库中。</p><h3 id="复制-移动文件" tabindex="-1"><a class="header-anchor" href="#复制-移动文件"><span>复制 / 移动文件</span></a></h3><p><code>Copy</code> 方法可用于将现有文件复制到磁盘上的新位置，而 <code>Move</code> 方法可用于重命名现有文件或将其移动到新位置：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span><span class="token string">&quot;old/file.jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;new/file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Move</span><span class="token punctuation">(</span><span class="token string">&quot;old/file.jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;new/file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件上传" tabindex="-1"><a class="header-anchor" href="#文件上传"><span>文件上传</span></a></h3><p>在 web 应用程序中，存储文件最常见的用例之一是存储用户上传的文件，如照片和文档。Goravel 使得在上传的文件实例上使用 <code>Store</code> 方法存储上传的文件变得非常容易。可以在要存储的上传文件上调用 <code>Store</code> 方法：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>UserController<span class="token punctuation">)</span> <span class="token function">Show</span><span class="token punctuation">(</span>ctx http<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">&quot;avatar&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  path<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span><span class="token string">&quot;avatars&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于这个例子，有一些重要的事情需要注意。那就是，我们只指定了一个目录名，而不是文件名。默认情况下，<code>Store</code> 方法将生成一个唯一的 ID 作为文件名。文件的扩展名将通过检查文件的 MIME 类型来确定。文件的路径将由 <code>Store</code> 方法返回，因此你可以将路径（包括生成的文件名）存储在数据库中。</p><p>你还可以调用 <code>Storage</code> facade 上的 <code>PutFile</code> 方法来执行与上述示例相同的文件存储操作：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/filesystem&quot;</span></span>
<span class="line"></span>
<span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> filesystem<span class="token punctuation">.</span><span class="token function">NewFile</span><span class="token punctuation">(</span><span class="token string">&quot;./logo.png&quot;</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PutFile</span><span class="token punctuation">(</span><span class="token string">&quot;photos&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指定一个文件名" tabindex="-1"><a class="header-anchor" href="#指定一个文件名"><span>指定一个文件名</span></a></h3><p>如果不希望文件名自动分配给存储的文件，可以使用 <code>StoreAs</code> 方法，该方法接收路径、文件名作为参数：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">&quot;avatar&quot;</span><span class="token punctuation">)</span></span>
<span class="line">path<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">StoreAs</span><span class="token punctuation">(</span><span class="token string">&quot;avatars&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>你还可以在 <code>Storage</code> facade 上使用 <code>PutFileAs</code> 方法，该方法将执行与上述示例相同的文件存储操作：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/filesystem&quot;</span></span>
<span class="line"></span>
<span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> filesystem<span class="token punctuation">.</span><span class="token function">NewFile</span><span class="token punctuation">(</span><span class="token string">&quot;./logo.png&quot;</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">PutFileAs</span><span class="token punctuation">(</span><span class="token string">&quot;photos&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>StoreAs</code> 与 <code>PutFileAs</code> 指定的文件名如果不带后缀，将根据文件的 MIME 自动添加后缀；否则，直接使用指定的文件名。</p></blockquote><h3 id="指定一个磁盘" tabindex="-1"><a class="header-anchor" href="#指定一个磁盘"><span>指定一个磁盘</span></a></h3><p>默认情况下，<code>Store</code> 等方法将使用默认磁盘。如果要指定另一个磁盘，请使用 <code>Disk</code> 方法：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>UserController<span class="token punctuation">)</span> <span class="token function">Show</span><span class="token punctuation">(</span>ctx http<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">&quot;avatar&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  path<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span><span class="token string">&quot;avatars&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他上传文件信息" tabindex="-1"><a class="header-anchor" href="#其他上传文件信息"><span>其他上传文件信息</span></a></h3><p>如果你想获取上传文件的原始名称和扩展名，可以使用 <code>GetClientOriginalName</code> 和 <code>GetClientOriginalExtension</code> 方法：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">&quot;avatar&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">name <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">GetClientOriginalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">extension <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">GetClientOriginalExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是，请记住，<code>GetClientOriginalName</code> 和 <code>GetClientOriginalExtension</code> 方法被认为是不安全的，因为文件名和扩展名可能被恶意用户篡改。出于这个原因，你应该更喜欢 <code>HashName</code> 和 <code>Extension</code> 方法来获取给定文件上传的名称和扩展名：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">&quot;avatar&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">name <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">HashName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 生成一个唯一的随机名称...</span></span>
<span class="line">extension<span class="token punctuation">,</span> err <span class="token operator">:=</span> file<span class="token punctuation">.</span><span class="token function">Extension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 根据文件的 MIME 类型确定文件的扩展名...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除文件" tabindex="-1"><a class="header-anchor" href="#删除文件"><span>删除文件</span></a></h2><p><code>Delete</code> 方法接收一个文件名或一个文件名数组来将其从磁盘中删除：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;file2.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有必要，你可以指定删除的文件的磁盘：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token string">&quot;file.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><h3 id="获取目录下所有的文件" tabindex="-1"><a class="header-anchor" href="#获取目录下所有的文件"><span>获取目录下所有的文件</span></a></h3><p><code>Files</code> 将以数组的形式返回给定目录下所有的文件。如果你想要检索给定目录的所有文件及其子目录的所有文件，你可以使用 <code>AllFiles</code> 方法：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">files<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Files</span><span class="token punctuation">(</span><span class="token string">&quot;directory&quot;</span><span class="token punctuation">)</span></span>
<span class="line">files<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AllFiles</span><span class="token punctuation">(</span><span class="token string">&quot;directory&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取特定目录下的子目录" tabindex="-1"><a class="header-anchor" href="#获取特定目录下的子目录"><span>获取特定目录下的子目录</span></a></h3><p><code>Directories</code> 方法以数组的形式返回给定目录中的所有目录。此外，你还可以使用 <code>AllDirectories</code> 方法递归地获取给定目录中的所有目录及其子目录中的目录：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">directories<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Directories</span><span class="token punctuation">(</span><span class="token string">&quot;directory&quot;</span><span class="token punctuation">)</span></span>
<span class="line">directories<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Disk</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AllDirectories</span><span class="token punctuation">(</span><span class="token string">&quot;directory&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建一个目录" tabindex="-1"><a class="header-anchor" href="#创建一个目录"><span>创建一个目录</span></a></h3><p><code>MakeDirectory</code> 方法可递归的创建指定的目录：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">MakeDirectory</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="删除一个目录" tabindex="-1"><a class="header-anchor" href="#删除一个目录"><span>删除一个目录</span></a></h3><p>最后，<code>DeleteDirectory</code> 方法可用于删除一个目录及其下所有的文件：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DeleteDirectory</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="自定义文件系统" tabindex="-1"><a class="header-anchor" href="#自定义文件系统"><span>自定义文件系统</span></a></h2><p>在 <code>config/filesystems.go</code> 文件中设置自定义驱动：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token string">&quot;custom&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;driver&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;via&quot;</span><span class="token punctuation">:</span>    filesystems<span class="token punctuation">.</span><span class="token function">NewLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>via</code> 配置项实现 <code>github.com/goravel/framework/contracts/filesystem/Driver</code> 接口：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">type</span> Driver <span class="token keyword">interface</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">AllDirectories</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">AllFiles</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">Copy</span><span class="token punctuation">(</span>oldFile<span class="token punctuation">,</span> newFile <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token function">Delete</span><span class="token punctuation">(</span>file <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token function">DeleteDirectory</span><span class="token punctuation">(</span>directory <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token function">Directories</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">Exists</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span></span>
<span class="line">  <span class="token function">Files</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">Get</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">GetBytes</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">LastModified</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>Time<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">MakeDirectory</span><span class="token punctuation">(</span>directory <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token function">MimeType</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">Missing</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span></span>
<span class="line">  <span class="token function">Move</span><span class="token punctuation">(</span>oldFile<span class="token punctuation">,</span> newFile <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token function">Path</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span></span>
<span class="line">  <span class="token function">Put</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> content <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token function">PutFile</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">,</span> source File<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">PutFileAs</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">,</span> source File<span class="token punctuation">,</span> name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">Size</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int64</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">TemporaryUrl</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">,</span> time time<span class="token punctuation">.</span>Time<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">WithContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> Driver</span>
<span class="line">  <span class="token function">Url</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：由于注册驱动时配置信息尚未加载完毕，所以在自定义驱动中，请使用 <code>facades.Config().Env</code> 获取配置信息。</p></blockquote>`,98)),a(l)])}const b=i(d,[["render",g],["__file","filesystem.html.vue"]]),f=JSON.parse('{"path":"/zh/digging-deeper/filesystem.html","title":"文件存储","lang":"zh-CN","frontmatter":{"description":"文件存储 简介 Goravel 为使用本地文件系统、Amazon S3、Aliyun OSS、Tencent COS、Minio 和 Cloudinary 提供了简单易用的驱动程序。 更棒的是，由于每个系统的 API 保持不变，所以在这些存储选项之间切换是非常简单的。框架自带 local 驱动，如需其他驱动，请查看对应的独立扩展包： 配置 配置文件位于...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/digging-deeper/filesystem.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/digging-deeper/filesystem.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/digging-deeper/filesystem.html"}],["meta",{"property":"og:description","content":"文件存储 简介 Goravel 为使用本地文件系统、Amazon S3、Aliyun OSS、Tencent COS、Minio 和 Cloudinary 提供了简单易用的驱动程序。 更棒的是，由于每个系统的 API 保持不变，所以在这些存储选项之间切换是非常简单的。框架自带 local 驱动，如需其他驱动，请查看对应的独立扩展包： 配置 配置文件位于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件存储\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[{"level":3,"title":"本地驱动","slug":"本地驱动","link":"#本地驱动","children":[]},{"level":3,"title":"公共磁盘","slug":"公共磁盘","link":"#公共磁盘","children":[]}]},{"level":2,"title":"获取磁盘实例","slug":"获取磁盘实例","link":"#获取磁盘实例","children":[]},{"level":2,"title":"注入 Context","slug":"注入-context","link":"#注入-context","children":[]},{"level":2,"title":"检索文件","slug":"检索文件","link":"#检索文件","children":[{"level":3,"title":"文件地址","slug":"文件地址","link":"#文件地址","children":[]},{"level":3,"title":"文件 Metadata 信息","slug":"文件-metadata-信息","link":"#文件-metadata-信息","children":[]},{"level":3,"title":"文件路径","slug":"文件路径","link":"#文件路径","children":[]}]},{"level":2,"title":"储存文件","slug":"储存文件","link":"#储存文件","children":[{"level":3,"title":"复制 / 移动文件","slug":"复制-移动文件","link":"#复制-移动文件","children":[]},{"level":3,"title":"文件上传","slug":"文件上传","link":"#文件上传","children":[]},{"level":3,"title":"指定一个文件名","slug":"指定一个文件名","link":"#指定一个文件名","children":[]},{"level":3,"title":"指定一个磁盘","slug":"指定一个磁盘","link":"#指定一个磁盘","children":[]},{"level":3,"title":"其他上传文件信息","slug":"其他上传文件信息","link":"#其他上传文件信息","children":[]}]},{"level":2,"title":"删除文件","slug":"删除文件","link":"#删除文件","children":[]},{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[{"level":3,"title":"获取目录下所有的文件","slug":"获取目录下所有的文件","link":"#获取目录下所有的文件","children":[]},{"level":3,"title":"获取特定目录下的子目录","slug":"获取特定目录下的子目录","link":"#获取特定目录下的子目录","children":[]},{"level":3,"title":"创建一个目录","slug":"创建一个目录","link":"#创建一个目录","children":[]},{"level":3,"title":"删除一个目录","slug":"删除一个目录","link":"#删除一个目录","children":[]}]},{"level":2,"title":"自定义文件系统","slug":"自定义文件系统","link":"#自定义文件系统","children":[]}],"git":{},"filePathRelative":"zh/digging-deeper/filesystem.md","autoDesc":true}');export{b as comp,f as data};
