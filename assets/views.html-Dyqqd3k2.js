import{_ as i,c,b as s,e as a,f as e,a as u,r as o,o as r,d as p}from"./app-Ci8pqpHY.js";const d={},k={class:"table-of-contents"};function v(m,n){const t=o("router-link"),l=o("CommentService");return r(),c("div",null,[n[7]||(n[7]=s("h1",{id:"视图",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#视图"},[s("span",null,"视图")])],-1)),s("nav",k,[s("ul",null,[s("li",null,[a(t,{to:"#简介"},{default:e(()=>n[0]||(n[0]=[p("简介")])),_:1})]),s("li",null,[a(t,{to:"#创建和渲染视图"},{default:e(()=>n[1]||(n[1]=[p("创建和渲染视图")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#嵌套视图目录"},{default:e(()=>n[2]||(n[2]=[p("嵌套视图目录")])),_:1})]),s("li",null,[a(t,{to:"#使用第一个可用视图"},{default:e(()=>n[3]||(n[3]=[p("使用第一个可用视图")])),_:1})]),s("li",null,[a(t,{to:"#判断视图文件是否存在"},{default:e(()=>n[4]||(n[4]=[p("判断视图文件是否存在")])),_:1})])])]),s("li",null,[a(t,{to:"#向视图传递数据"},{default:e(()=>n[5]||(n[5]=[p("向视图传递数据")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#与所有视图共享数据"},{default:e(()=>n[6]||(n[6]=[p("与所有视图共享数据")])),_:1})])])])])]),n[8]||(n[8]=u(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>当然，直接从路由和控制器返回整个 HTML 文档字符串是不切实际的。值得庆幸的是，视图提供了一种方便的方式来将我们所有的 HTML 放在单独的文件中。视图将你的控制器 / 应用程序逻辑与你的表现逻辑分开并存储在 <code>resources/views</code> 目录中。</p><h2 id="创建和渲染视图" tabindex="-1"><a class="header-anchor" href="#创建和渲染视图"><span>创建和渲染视图</span></a></h2><p>使用框架默认模版 <code>html/template</code> 时，可以通过在应用程序 <code>resources/views</code> 目录中放置具有 <code>.tmpl</code> 扩展名的文件来创建视图。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// resources/views/welcome.tmpl</span>
<span class="line">{{ define &quot;welcome.tmpl&quot; }}</span>
<span class="line">&lt;html&gt;</span>
<span class="line">  &lt;body&gt;</span>
<span class="line">  &lt;h1&gt;Hello, {{ .name }}&lt;/h1&gt;</span>
<span class="line">  &lt;/body&gt;</span>
<span class="line">&lt;/html&gt;</span>
<span class="line">{{ end }}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建视图后，可以使用 <code>View</code> 方法从应用程序的某个路由或控制器返回视图：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx http<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> http<span class="token punctuation">.</span>Response <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Make</span><span class="token punctuation">(</span><span class="token string">&quot;welcome.tmpl&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌套视图目录" tabindex="-1"><a class="header-anchor" href="#嵌套视图目录"><span>嵌套视图目录</span></a></h3><p>视图也可以嵌套在目录 <code>resources/views</code> 的子目录中。例如，如果视图存储在 <code>resources/views/admin/profile.tmpl</code>，您可以从应用程序的路由或控制器中返回它，注意视图需要定义为 <code>define &quot;admin/profile.tmpl&quot;</code>，如下所示：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// resources/views/admin/profile.tmpl</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> define <span class="token string">&quot;admin/profile.tmpl&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Welcome to the Admin Panel<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> end <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">ctx<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Make</span><span class="token punctuation">(</span><span class="token string">&quot;admin/profile.tmpl&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用第一个可用视图" tabindex="-1"><a class="header-anchor" href="#使用第一个可用视图"><span>使用第一个可用视图</span></a></h3><p>使用 <code>View</code> 的 <code>First</code> 方法，您可以使用给定数组视图中第一个存在的视图。如果您的应用程序或开发的第三方包允许定制或覆盖视图，这会非常有用：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;custom/admin.tmpl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin.tmpl&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断视图文件是否存在" tabindex="-1"><a class="header-anchor" href="#判断视图文件是否存在"><span>判断视图文件是否存在</span></a></h3><p>如果需要判断视图文件是否存在，可以使用 <code>facades.View()</code>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exist</span><span class="token punctuation">(</span><span class="token string">&quot;welcome.tmpl&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="向视图传递数据" tabindex="-1"><a class="header-anchor" href="#向视图传递数据"><span>向视图传递数据</span></a></h2><p>正如您在前面的示例中看到的，您可以将数据数组传递给视图，以使该数据可用于视图。请注意，传递的数据格式需要根据所使用的模版驱动而变化，在下面例子中，使用默认的 <code>html/template</code> 驱动：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx http<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> http<span class="token punctuation">.</span>Response <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Make</span><span class="token punctuation">(</span><span class="token string">&quot;welcome.tmpl&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="与所有视图共享数据" tabindex="-1"><a class="header-anchor" href="#与所有视图共享数据"><span>与所有视图共享数据</span></a></h3><p>有时，您可能需要与应用程序呈现的所有视图共享数据，可以使用 <code>facades.View()</code> 的 <code>Share</code> 方法。您可以在服务提供器的 <code>Boot</code> 方法中调用视图 <code>Share</code> 方法。例如，可以将它们添加到 <code>app/providers/app_service_provider.go</code> 或者为它们生成一个单独的服务提供器：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> providers</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/goravel/framework/contracts/foundation&quot;</span></span>
<span class="line">    &quot;github<span class="token punctuation">.</span>com<span class="token operator">/</span>goravel<span class="token operator">/</span>framework<span class="token operator">/</span>facades</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> AppServiceProvider <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>AppServiceProvider<span class="token punctuation">)</span> <span class="token function">Register</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>AppServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    facades<span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Share</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22)),a(l)])}const h=i(d,[["render",v],["__file","views.html.vue"]]),b=JSON.parse('{"path":"/zh/the-basics/views.html","title":"视图","lang":"zh-CN","frontmatter":{"description":"视图 简介 当然，直接从路由和控制器返回整个 HTML 文档字符串是不切实际的。值得庆幸的是，视图提供了一种方便的方式来将我们所有的 HTML 放在单独的文件中。视图将你的控制器 / 应用程序逻辑与你的表现逻辑分开并存储在 resources/views 目录中。 创建和渲染视图 使用框架默认模版 html/template 时，可以通过在应用程序 r...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/the-basics/views.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/the-basics/views.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/the-basics/views.html"}],["meta",{"property":"og:description","content":"视图 简介 当然，直接从路由和控制器返回整个 HTML 文档字符串是不切实际的。值得庆幸的是，视图提供了一种方便的方式来将我们所有的 HTML 放在单独的文件中。视图将你的控制器 / 应用程序逻辑与你的表现逻辑分开并存储在 resources/views 目录中。 创建和渲染视图 使用框架默认模版 html/template 时，可以通过在应用程序 r..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"视图\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"创建和渲染视图","slug":"创建和渲染视图","link":"#创建和渲染视图","children":[{"level":3,"title":"嵌套视图目录","slug":"嵌套视图目录","link":"#嵌套视图目录","children":[]},{"level":3,"title":"使用第一个可用视图","slug":"使用第一个可用视图","link":"#使用第一个可用视图","children":[]},{"level":3,"title":"判断视图文件是否存在","slug":"判断视图文件是否存在","link":"#判断视图文件是否存在","children":[]}]},{"level":2,"title":"向视图传递数据","slug":"向视图传递数据","link":"#向视图传递数据","children":[{"level":3,"title":"与所有视图共享数据","slug":"与所有视图共享数据","link":"#与所有视图共享数据","children":[]}]}],"git":{},"filePathRelative":"zh/the-basics/views.md","autoDesc":true}');export{h as comp,b as data};
