import{_ as i,r as o,o as d,c as r,a,b as e,w as t,d as n,e as p}from"./app-C0nxWfeE.js";const u={},h=a("h1",{id:"辅助函数",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#辅助函数"},[a("span",null,"辅助函数")])],-1),b={class:"table-of-contents"},g=p(`<h2 id="可用方法" tabindex="-1"><a class="header-anchor" href="#可用方法"><span>可用方法</span></a></h2><h3 id="路径" tabindex="-1"><a class="header-anchor" href="#路径"><span>路径</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#path-app">path.App()</a></td><td><a href="#path-base">path.Base()</a></td><td><a href="#path-config">path.Config()</a></td></tr><tr><td><a href="#path-database">path.Database()</a></td><td><a href="#path-storage">path.Storage()</a></td><td><a href="#path-public">path.Public()</a></td></tr></tbody></table><h3 id="时间" tabindex="-1"><a class="header-anchor" href="#时间"><span>时间</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#carbon-now">carbon.Now()</a></td><td><a href="#carbon-settimezone">carbon.SetTimezone()</a></td><td><a href="#carbon-parse">carbon.Parse()</a></td></tr><tr><td><a href="#carbon-fromtimestamp">carbon.FromTimestamp()</a></td><td><a href="#carbon-fromdatetime">carbon.FromDateTime()</a></td><td><a href="#carbon-fromdate">carbon.FromDate()</a></td></tr><tr><td><a href="#carbon-fromtime">carbon.FromTime()</a></td><td><a href="#carbon-fromstdtime">carbon.FromStdTime()</a></td><td><a href="#istestnow-fromdate">carbon.IsTestNow()</a></td></tr><tr><td><a href="#carbon-settestnow">carbon.SetTestNow()</a></td><td><a href="#carbon-unsettestnow">carbon.UnsetTestNow()</a></td><td></td></tr></tbody></table><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#debug-dump">debug.Dump()</a></td><td><a href="#debug-sdump">debug.SDump()</a></td><td><a href="#debug-fdump">debug.FDump()</a></td></tr></tbody></table><h2 id="路径-1" tabindex="-1"><a class="header-anchor" href="#路径-1"><span>路径</span></a></h2><h3 id="path-app" tabindex="-1"><a class="header-anchor" href="#path-app"><span><code>path.App()</code></span></a></h3><p><code>path.App()</code> 函数返回 app 目录的路径。您也可以用来生成应用目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/path&quot;</span>

path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token string">&quot;http/controllers/controller.go&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-base" tabindex="-1"><a class="header-anchor" href="#path-base"><span><code>path.Base()</code></span></a></h3><p><code>path.Base()</code> 函数返回项目根目录的路径。您也可以用来生成项目根目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Base</span><span class="token punctuation">(</span><span class="token string">&quot;vendor/bin&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-config" tabindex="-1"><a class="header-anchor" href="#path-config"><span><code>path.Config()</code></span></a></h3><p><code>path.Config()</code> 函数返回项目配置目录 (config) 的路径。您也可以用来生成应用配置目录中的特定文件的路径：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token string">&quot;app.go&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-database" tabindex="-1"><a class="header-anchor" href="#path-database"><span><code>path.Database()</code></span></a></h3><p><code>path.Database()</code> 函数返回 <code>database</code> 目录的路径。您也可以用来生成数据库目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Database</span><span class="token punctuation">(</span><span class="token string">&quot;factories/user_factory.go&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-storage" tabindex="-1"><a class="header-anchor" href="#path-storage"><span><code>path.Storage()</code></span></a></h3><p><code>path.Storage()</code> 函数返回 <code>storage</code> 目录的路径。您也可以用来生成位于资源路径中的特定路径：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token string">&quot;app/file.txt&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-public" tabindex="-1"><a class="header-anchor" href="#path-public"><span><code>path.Public()</code></span></a></h3><p><code>path.Public()</code> 函数返回 <code>public</code> 目录的路径。您也可以用来生成 <code>public</code> 目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Public</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Public</span><span class="token punctuation">(</span><span class="token string">&quot;css/app.css&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间-1" tabindex="-1"><a class="header-anchor" href="#时间-1"><span>时间</span></a></h2>`,27),m=a("code",null,"carbon",-1),k={href:"https://github.com/golang-module/carbon",target:"_blank",rel:"noopener noreferrer"},v=p(`<h3 id="carbon-now" tabindex="-1"><a class="header-anchor" href="#carbon-now"><span><code>carbon.Now()</code></span></a></h3><p>获取当前时间：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/carbon&quot;</span>

carbon<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carbon-settimezone" tabindex="-1"><a class="header-anchor" href="#carbon-settimezone"><span><code>carbon.SetTimezone()</code></span></a></h3><p>设置时区：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">SetTimezone</span><span class="token punctuation">(</span>carbon<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-parse" tabindex="-1"><a class="header-anchor" href="#carbon-parse"><span><code>carbon.Parse()</code></span></a></h3><p>字符串格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-08-05 13:14:15&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-fromtimestamp" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimestamp"><span><code>carbon.FromTimestamp()</code></span></a></h3><p>时间戳格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">FromTimestamp</span><span class="token punctuation">(</span><span class="token number">1577836800</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-fromdatetime" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatetime"><span><code>carbon.FromDateTime()</code></span></a></h3><p>时间格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">FromDateTime</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-fromdate" tabindex="-1"><a class="header-anchor" href="#carbon-fromdate"><span><code>carbon.FromDate()</code></span></a></h3><p>年月日格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">FromDate</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-fromtime" tabindex="-1"><a class="header-anchor" href="#carbon-fromtime"><span><code>carbon.FromTime()</code></span></a></h3><p>时分秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">FromTime</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-fromstdtime" tabindex="-1"><a class="header-anchor" href="#carbon-fromstdtime"><span><code>carbon.FromStdTime()</code></span></a></h3><p><code>time.Time</code> 格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">FromStdTime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-istestnow" tabindex="-1"><a class="header-anchor" href="#carbon-istestnow"><span><code>carbon.IsTestNow()</code></span></a></h3><p>判断系统时间是否为测试值：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">IsTestNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-settestnow" tabindex="-1"><a class="header-anchor" href="#carbon-settestnow"><span><code>carbon.SetTestNow()</code></span></a></h3><p>将系统时间设置为一个测试值：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">SetTestNow</span><span class="token punctuation">(</span>carbon<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="carbon-unsettestnow" tabindex="-1"><a class="header-anchor" href="#carbon-unsettestnow"><span><code>carbon.UnsetTestNow()</code></span></a></h3><p>恢复系统时间为正常值：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>carbon<span class="token punctuation">.</span><span class="token function">UnsetTestNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="debug-1" tabindex="-1"><a class="header-anchor" href="#debug-1"><span>Debug</span></a></h2><h3 id="debug-dump" tabindex="-1"><a class="header-anchor" href="#debug-dump"><span><code>debug.Dump()</code></span></a></h3><p><code>debug.Dump()</code> 可以打印任意对象：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/debug&quot;</span>

debug<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>myVar1<span class="token punctuation">,</span> myVar2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="debug-fdump" tabindex="-1"><a class="header-anchor" href="#debug-fdump"><span><code>debug.FDump()</code></span></a></h3><p><code>debug.FDump()</code> 可以打印任意对象输出到一个 <code>io.Writer</code>：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/debug&quot;</span>

debug<span class="token punctuation">.</span><span class="token function">FDump</span><span class="token punctuation">(</span>someWriter<span class="token punctuation">,</span> myVar1<span class="token punctuation">,</span> myVar2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="debug-sdump" tabindex="-1"><a class="header-anchor" href="#debug-sdump"><span><code>debug.SDump()</code></span></a></h3><p><code>debug.SDump()</code> 可以将打印输出至字符串：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/debug&quot;</span>

debug<span class="token punctuation">.</span><span class="token function">SDump</span><span class="token punctuation">(</span>myVar1<span class="token punctuation">,</span> myVar2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43);function f(_,w){const s=o("router-link"),c=o("ExternalLinkIcon"),l=o("CommentService");return d(),r("div",null,[h,a("nav",b,[a("ul",null,[a("li",null,[e(s,{to:"#可用方法"},{default:t(()=>[n("可用方法")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#路径"},{default:t(()=>[n("路径")]),_:1})]),a("li",null,[e(s,{to:"#时间"},{default:t(()=>[n("时间")]),_:1})]),a("li",null,[e(s,{to:"#debug"},{default:t(()=>[n("Debug")]),_:1})])])]),a("li",null,[e(s,{to:"#路径-1"},{default:t(()=>[n("路径")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#path-app"},{default:t(()=>[n("path.App()")]),_:1})]),a("li",null,[e(s,{to:"#path-base"},{default:t(()=>[n("path.Base()")]),_:1})]),a("li",null,[e(s,{to:"#path-config"},{default:t(()=>[n("path.Config()")]),_:1})]),a("li",null,[e(s,{to:"#path-database"},{default:t(()=>[n("path.Database()")]),_:1})]),a("li",null,[e(s,{to:"#path-storage"},{default:t(()=>[n("path.Storage()")]),_:1})]),a("li",null,[e(s,{to:"#path-public"},{default:t(()=>[n("path.Public()")]),_:1})])])]),a("li",null,[e(s,{to:"#时间-1"},{default:t(()=>[n("时间")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#carbon-now"},{default:t(()=>[n("carbon.Now()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-settimezone"},{default:t(()=>[n("carbon.SetTimezone()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-parse"},{default:t(()=>[n("carbon.Parse()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-fromtimestamp"},{default:t(()=>[n("carbon.FromTimestamp()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-fromdatetime"},{default:t(()=>[n("carbon.FromDateTime()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-fromdate"},{default:t(()=>[n("carbon.FromDate()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-fromtime"},{default:t(()=>[n("carbon.FromTime()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-fromstdtime"},{default:t(()=>[n("carbon.FromStdTime()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-istestnow"},{default:t(()=>[n("carbon.IsTestNow()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-settestnow"},{default:t(()=>[n("carbon.SetTestNow()")]),_:1})]),a("li",null,[e(s,{to:"#carbon-unsettestnow"},{default:t(()=>[n("carbon.UnsetTestNow()")]),_:1})])])]),a("li",null,[e(s,{to:"#debug-1"},{default:t(()=>[n("Debug")]),_:1}),a("ul",null,[a("li",null,[e(s,{to:"#debug-dump"},{default:t(()=>[n("debug.Dump()")]),_:1})]),a("li",null,[e(s,{to:"#debug-fdump"},{default:t(()=>[n("debug.FDump()")]),_:1})]),a("li",null,[e(s,{to:"#debug-sdump"},{default:t(()=>[n("debug.SDump()")]),_:1})])])])])]),g,a("p",null,[n("Goravel 的 "),m,n(" 是 "),a("a",k,[n("golang-module/carbon"),e(c)]),n(" 的一个扩展，主要实现了时间回溯功能，详细用法请参考其官方文档。")]),v,e(l)])}const D=i(u,[["render",f],["__file","helpers.html.vue"]]),T=JSON.parse('{"path":"/zh/digging-deeper/helpers.html","title":"辅助函数","lang":"zh-CN","frontmatter":{"description":"辅助函数 可用方法 路径 时间 Debug 路径 path.App() path.App() 函数返回 app 目录的路径。您也可以用来生成应用目录下特定文件的路径： path.Base() path.Base() 函数返回项目根目录的路径。您也可以用来生成项目根目录下特定文件的路径： path.Config() path.Config() 函数返回项...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/digging-deeper/helpers.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/digging-deeper/helpers.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/digging-deeper/helpers.html"}],["meta",{"property":"og:description","content":"辅助函数 可用方法 路径 时间 Debug 路径 path.App() path.App() 函数返回 app 目录的路径。您也可以用来生成应用目录下特定文件的路径： path.Base() path.Base() 函数返回项目根目录的路径。您也可以用来生成项目根目录下特定文件的路径： path.Config() path.Config() 函数返回项..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"辅助函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"可用方法","slug":"可用方法","link":"#可用方法","children":[{"level":3,"title":"路径","slug":"路径","link":"#路径","children":[]},{"level":3,"title":"时间","slug":"时间","link":"#时间","children":[]},{"level":3,"title":"Debug","slug":"debug","link":"#debug","children":[]}]},{"level":2,"title":"路径","slug":"路径-1","link":"#路径-1","children":[{"level":3,"title":"path.App()","slug":"path-app","link":"#path-app","children":[]},{"level":3,"title":"path.Base()","slug":"path-base","link":"#path-base","children":[]},{"level":3,"title":"path.Config()","slug":"path-config","link":"#path-config","children":[]},{"level":3,"title":"path.Database()","slug":"path-database","link":"#path-database","children":[]},{"level":3,"title":"path.Storage()","slug":"path-storage","link":"#path-storage","children":[]},{"level":3,"title":"path.Public()","slug":"path-public","link":"#path-public","children":[]}]},{"level":2,"title":"时间","slug":"时间-1","link":"#时间-1","children":[{"level":3,"title":"carbon.Now()","slug":"carbon-now","link":"#carbon-now","children":[]},{"level":3,"title":"carbon.SetTimezone()","slug":"carbon-settimezone","link":"#carbon-settimezone","children":[]},{"level":3,"title":"carbon.Parse()","slug":"carbon-parse","link":"#carbon-parse","children":[]},{"level":3,"title":"carbon.FromTimestamp()","slug":"carbon-fromtimestamp","link":"#carbon-fromtimestamp","children":[]},{"level":3,"title":"carbon.FromDateTime()","slug":"carbon-fromdatetime","link":"#carbon-fromdatetime","children":[]},{"level":3,"title":"carbon.FromDate()","slug":"carbon-fromdate","link":"#carbon-fromdate","children":[]},{"level":3,"title":"carbon.FromTime()","slug":"carbon-fromtime","link":"#carbon-fromtime","children":[]},{"level":3,"title":"carbon.FromStdTime()","slug":"carbon-fromstdtime","link":"#carbon-fromstdtime","children":[]},{"level":3,"title":"carbon.IsTestNow()","slug":"carbon-istestnow","link":"#carbon-istestnow","children":[]},{"level":3,"title":"carbon.SetTestNow()","slug":"carbon-settestnow","link":"#carbon-settestnow","children":[]},{"level":3,"title":"carbon.UnsetTestNow()","slug":"carbon-unsettestnow","link":"#carbon-unsettestnow","children":[]}]},{"level":2,"title":"Debug","slug":"debug-1","link":"#debug-1","children":[{"level":3,"title":"debug.Dump()","slug":"debug-dump","link":"#debug-dump","children":[]},{"level":3,"title":"debug.FDump()","slug":"debug-fdump","link":"#debug-fdump","children":[]},{"level":3,"title":"debug.SDump()","slug":"debug-sdump","link":"#debug-sdump","children":[]}]}],"git":{},"filePathRelative":"zh/digging-deeper/helpers.md","autoDesc":true}');export{D as comp,T as data};
