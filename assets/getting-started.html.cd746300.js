import{_ as s,r as o,o as r,c as l,b as e,d as a,w as d,e as t,f as c}from"./app.8de5b488.js";const u={},h=e("h1",{id:"getting-started",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),t(" Getting Started")],-1),m={class:"table-of-contents"},v=t("Introduction"),_=t("Model Definition"),f=t("Model Convention"),p=t("Query"),b=t("Create"),g=t("Update"),E=t("Delete"),x=t("More"),D=e("h2",{id:"introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),t(" Introduction")],-1),q=t("Goravel routing module can use "),B=e("code",null,"facades.DB",-1),w=t(" to operate, "),T=e("code",null,"facades.DB",-1),k=t(" is an instance of well-known ORM framework "),M={href:"https://github.com/go-gorm/gorm",target:"_blank",rel:"noopener noreferrer"},R=t("go-gorm/gorm"),S=t(", the usage method is exactly the same as that of "),U=e("code",null,"go-gorm/gorm",-1),y=t("."),C=c(`<p>Each data table corresponds to a &quot;model&quot; for interaction, and the model files are stored in the <code>app/models</code> folder.</p><p>Before starting, please configure the database link information in the <code>.env</code> file and confirm the default configuration of <code>config/database.go</code>.</p><h2 id="model-definition" tabindex="-1"><a class="header-anchor" href="#model-definition" aria-hidden="true">#</a> Model Definition</h2><p>You can create a custom model based on the model file <code>app/models/user.go</code> that comes with the framework. In the <code>app/models/user.go</code> file, <code>struct</code> has nested two frameworks, <code>orm.Model</code> and <code>orm.SoftDeletes</code>, which have their own structures. They respectively define <code>id, created_at // creation time, updated_at //update time</code> and <code>deleted_at //soft delete</code> can be used directly.</p><h2 id="model-convention" tabindex="-1"><a class="header-anchor" href="#model-convention" aria-hidden="true">#</a> Model Convention</h2><ol><li>The model is named with a big hump;</li><li>Use the plural form of the model &quot;snake naming&quot; as the table name;</li></ol><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query" aria-hidden="true">#</a> Query</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.DB.First(&amp;user, 10)
// SELECT * FROM users WHERE id = 10;

facades.DB.First(&amp;user, &quot;10&quot;)
// SELECT * FROM users WHERE id = 10;

facades.DB.Find(&amp;users, []int{1,2,3})
// SELECT * FROM users WHERE id IN (1,2,3);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> Create</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>user := User{Name: &quot;Jinzhu&quot;, Age: 18, Birthday: time.Now()}
result := facades.DB.Create(&amp;user)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> Update</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.DB.First(&amp;user)
user.Name = &quot;jinzhu 2&quot;
user.Age = 100
facades.DB.Save(&amp;user)
// UPDATE users SET name=&#39;jinzhu 2&#39;, age=100, birthday=&#39;2016-01-01&#39;, updated_at = &#39;2013-11-17 21:34:10&#39; WHERE id=111

facades.DB.Model(&amp;User{}).Where(&quot;active = ?&quot;, true).Update(&quot;name&quot;, &quot;hello&quot;)
// UPDATE users SET name=&#39;hello&#39;, updated_at=&#39;2013-11-17 21:34:10&#39; WHERE active=true;

facades.DB.Model(&amp;user).Updates(User{Name: &quot;hello&quot;, Age: 18, Active: false})
// UPDATE users SET name=&#39;hello&#39;, age=18, updated_at = &#39;2013-11-17 21:34:10&#39; WHERE id = 111;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> Delete</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.DB.Delete(&amp;email)
// DELETE from emails where id = 10;

facades.DB.Where(&quot;name = ?&quot;, &quot;jinzhu&quot;).Delete(&amp;email)
// DELETE from emails where id = 10 AND name = &quot;jinzhu&quot;;

facades.DB.Delete(&amp;User{}, 10)
// DELETE FROM users WHERE id = 10;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="more" tabindex="-1"><a class="header-anchor" href="#more" aria-hidden="true">#</a> More</h2>`,15),N=t("See "),W={href:"https://github.com/go-gorm/gorm",target:"_blank",rel:"noopener noreferrer"},A=t("go-gorm/gorm");function F(L,H){const n=o("router-link"),i=o("ExternalLinkIcon");return r(),l("div",null,[h,e("nav",m,[e("ul",null,[e("li",null,[a(n,{to:"#introduction"},{default:d(()=>[v]),_:1})]),e("li",null,[a(n,{to:"#model-definition"},{default:d(()=>[_]),_:1})]),e("li",null,[a(n,{to:"#model-convention"},{default:d(()=>[f]),_:1})]),e("li",null,[a(n,{to:"#query"},{default:d(()=>[p]),_:1})]),e("li",null,[a(n,{to:"#create"},{default:d(()=>[b]),_:1})]),e("li",null,[a(n,{to:"#update"},{default:d(()=>[g]),_:1})]),e("li",null,[a(n,{to:"#delete"},{default:d(()=>[E]),_:1})]),e("li",null,[a(n,{to:"#more"},{default:d(()=>[x]),_:1})])])]),D,e("p",null,[q,B,w,T,k,e("a",M,[R,a(i)]),S,U,y]),C,e("p",null,[N,e("a",W,[A,a(i)])])])}const z=s(u,[["render",F],["__file","getting-started.html.vue"]]);export{z as default};
