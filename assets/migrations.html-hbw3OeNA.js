import{_ as l,c,b as s,e as a,f as e,a as u,r as o,o as r,d as p}from"./app-DRzOcIqi.js";const d={},k={class:"table-of-contents"};function m(g,n){const t=o("router-link"),i=o("CommentService");return r(),c("div",null,[n[28]||(n[28]=s("h1",{id:"migrations",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#migrations"},[s("span",null,"Migrations")])],-1)),s("nav",k,[s("ul",null,[s("li",null,[a(t,{to:"#introduction"},{default:e(()=>n[0]||(n[0]=[p("Introduction")])),_:1})]),s("li",null,[a(t,{to:"#configuration"},{default:e(()=>n[1]||(n[1]=[p("Configuration")])),_:1})]),s("li",null,[a(t,{to:"#create-migrations"},{default:e(()=>n[2]||(n[2]=[p("Create Migrations")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#quickly-create"},{default:e(()=>n[3]||(n[3]=[p("Quickly Create")])),_:1})])])]),s("li",null,[a(t,{to:"#migration-structure"},{default:e(()=>n[4]||(n[4]=[p("Migration Structure")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#go-language-migration"},{default:e(()=>n[5]||(n[5]=[p("Go Language Migration")])),_:1})]),s("li",null,[a(t,{to:"#sql-migration"},{default:e(()=>n[6]||(n[6]=[p("SQL Migration")])),_:1})])])]),s("li",null,[a(t,{to:"#register-migrations"},{default:e(()=>n[7]||(n[7]=[p("Register Migrations")])),_:1})]),s("li",null,[a(t,{to:"#run-migrations"},{default:e(()=>n[8]||(n[8]=[p("Run Migrations")])),_:1})]),s("li",null,[a(t,{to:"#rolling-back-migrations"},{default:e(()=>n[9]||(n[9]=[p("Rolling Back Migrations")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#roll-back-migrate-using-a-single-command"},{default:e(()=>n[10]||(n[10]=[p("Roll Back & Migrate Using A Single Command")])),_:1})]),s("li",null,[a(t,{to:"#drop-all-tables-migrate"},{default:e(()=>n[11]||(n[11]=[p("Drop All Tables & Migrate")])),_:1})])])]),s("li",null,[a(t,{to:"#tables"},{default:e(()=>n[12]||(n[12]=[p("Tables")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#create-table"},{default:e(()=>n[13]||(n[13]=[p("Create Table")])),_:1})]),s("li",null,[a(t,{to:"#check-if-table-column-exists"},{default:e(()=>n[14]||(n[14]=[p("Check If Table / Column Exists")])),_:1})]),s("li",null,[a(t,{to:"#database-connection"},{default:e(()=>n[15]||(n[15]=[p("Database Connection")])),_:1})]),s("li",null,[a(t,{to:"#update-table"},{default:e(()=>n[16]||(n[16]=[p("Update Table")])),_:1})]),s("li",null,[a(t,{to:"#rename-drop-table"},{default:e(()=>n[17]||(n[17]=[p("Rename / Drop Table")])),_:1})])])]),s("li",null,[a(t,{to:"#columns"},{default:e(()=>n[18]||(n[18]=[p("Columns")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#available-column-types"},{default:e(()=>n[19]||(n[19]=[p("Available Column Types")])),_:1})]),s("li",null,[a(t,{to:"#column-modifiers"},{default:e(()=>n[20]||(n[20]=[p("Column Modifiers")])),_:1})]),s("li",null,[a(t,{to:"#drop-column"},{default:e(()=>n[21]||(n[21]=[p("Drop Column")])),_:1})])])]),s("li",null,[a(t,{to:"#indexes"},{default:e(()=>n[22]||(n[22]=[p("Indexes")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#create-index"},{default:e(()=>n[23]||(n[23]=[p("Create Index")])),_:1})]),s("li",null,[a(t,{to:"#rename-index"},{default:e(()=>n[24]||(n[24]=[p("Rename Index")])),_:1})]),s("li",null,[a(t,{to:"#drop-index"},{default:e(()=>n[25]||(n[25]=[p("Drop Index")])),_:1})]),s("li",null,[a(t,{to:"#create-foreign-key"},{default:e(()=>n[26]||(n[26]=[p("Create Foreign Key")])),_:1})]),s("li",null,[a(t,{to:"#drop-foreign-key"},{default:e(()=>n[27]||(n[27]=[p("Drop Foreign Key")])),_:1})])])])])]),n[29]||(n[29]=u(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>When multiple people collaborate to develop applications, it&#39;s crucial to have a standardized database structure for synchronization. Without this, there could be chaos as everyone&#39;s individual data won&#39;t match up. Database migration is the solution to this problem. The database structure is version-controlled to ensure its consistency within all developers.</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>The database migration files are stored in the <code>database/migrations</code> directory. You can configure the database connection information in the <code>config/database.go</code> file. Currently, there are two drivers available for migrations: Go language migration and SQL migration. However, the SQL migration will be removed in future versions.</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// Available Drivers: &quot;default&quot;, &quot;sql&quot;</span></span>
<span class="line"><span class="token string">&quot;migrations&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;driver&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// You can cumstomize the table name of migrations</span></span>
<span class="line">  <span class="token string">&quot;table&quot;</span><span class="token punctuation">:</span>  <span class="token string">&quot;migrations&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="create-migrations" tabindex="-1"><a class="header-anchor" href="#create-migrations"><span>Create Migrations</span></a></h2><p>Use the <code>make:migration</code> command to create the migration:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan make:migration create_users_table</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command will generate migration files in the <code>database/migrations</code> directory. Each migration file will begin with a timestamp, which Goravel will use to determine the execution order of the migration files.</p><h3 id="quickly-create" tabindex="-1"><a class="header-anchor" href="#quickly-create"><span>Quickly Create</span></a></h3><p>Use <code>create_users_table</code> to automatically generate a table containing the infrastructure of <code>users</code>:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">^create_(\\w+)_table$</span>
<span class="line">^create_(\\w+)$</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Use <code>add_avatar_to_users_table</code> to automatically generate a structure for adding fields to the <code>users</code> table:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">_(to|from|in)_(\\w+)_table$</span>
<span class="line">_(to|from|in)_(\\w+)$</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If the above conditions are not matched, the framework will generate an empty migration file.</p><h2 id="migration-structure" tabindex="-1"><a class="header-anchor" href="#migration-structure"><span>Migration Structure</span></a></h2><h3 id="go-language-migration" tabindex="-1"><a class="header-anchor" href="#go-language-migration"><span>Go Language Migration</span></a></h3><p>The migration struct contains two methods: <code>Up</code> and <code>Down</code>. The <code>Up</code> method is used to add new tables, columns, or indexes to the database, while the <code>Down</code> method is used to undo the operations performed by the <code>Up</code> method. In these two methods, you can use <code>facades.Schema()</code> to create and operate database tables. For available methods, see the <a href="#tables">documentation</a>. The following migration will create a <code>users</code> table:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> migrations</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/goravel/framework/contracts/database/schema&quot;</span></span>
<span class="line">	<span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> M20241207095921CreateUsersTable <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Signature The unique signature for the migration.</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Signature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token string">&quot;20241207095921_create_users_table&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Up Run the migrations.</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Up</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token operator">!</span>facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasTable</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">Timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Down Reverse the migrations.</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DropIfExists</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-migration-connection" tabindex="-1"><a class="header-anchor" href="#set-migration-connection"><span>Set Migration Connection</span></a></h4><p>If the migration will interact with a database connection other than the application&#39;s default database connection, you should use the migration&#39;s <code>Connection</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Connection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token string">&quot;connection-name&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sql-migration" tabindex="-1"><a class="header-anchor" href="#sql-migration"><span>SQL Migration</span></a></h3><p>The migration command will generate two migration files: <code>***.up.sql</code> and <code>***.down.sql</code>, corresponding to execution and rollback, respectively. You can write SQL statements directly in these two files.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment">-- ***.up.sql</span></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>users<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>created_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>updated_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_unicode_ci<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- ***.down.sql</span></span>
<span class="line"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>users<span class="token punctuation">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="register-migrations" tabindex="-1"><a class="header-anchor" href="#register-migrations"><span>Register Migrations</span></a></h2><p>When using Go language migrations, you need to register the migration files in the <code>database/kernel.go</code> file after the migration files are generated:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// database/kernel.go</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>kernel Kernel<span class="token punctuation">)</span> <span class="token function">Migrations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Migration <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Migration<span class="token punctuation">{</span></span>
<span class="line">		<span class="token operator">&amp;</span>migrations<span class="token punctuation">.</span>M20241207095921CreateUsersTable<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL migrations do not need to be registered, as the framework will automatically scan the SQL files in the <code>database/migrations</code> directory.</p><h2 id="run-migrations" tabindex="-1"><a class="header-anchor" href="#run-migrations"><span>Run Migrations</span></a></h2><p>To run all of your outstanding migrations, execute the <code>migrate</code> Artisan command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you would like to see which migrations have run thus far, you may use the <code>migrate:status</code> Artisan command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="rolling-back-migrations" tabindex="-1"><a class="header-anchor" href="#rolling-back-migrations"><span>Rolling Back Migrations</span></a></h2><p>To roll back the latest migration, use the <code>rollback</code> Artisan command. This command rolls back the last &quot;batch&quot; of migrations, which may include multiple migration files:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:rollback</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You may roll back a limited number of migrations by providing the <code>step</code> option to the <code>rollback</code> command. For example, the following command will roll back the last five migrations:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:rollback <span class="token parameter variable">--step</span><span class="token operator">=</span><span class="token number">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The <code>migrate:reset</code> command will roll back all of your application&#39;s migrations:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:reset</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="roll-back-migrate-using-a-single-command" tabindex="-1"><a class="header-anchor" href="#roll-back-migrate-using-a-single-command"><span>Roll Back &amp; Migrate Using A Single Command</span></a></h3><p>The <code>migrate:refresh</code> command will roll back all of your migrations and then execute the <code>migrate</code> command. This command effectively re-creates your entire database:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:refresh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You may roll back and re-migrate a limited number of migrations by providing the <code>step</code> option to the <code>refresh</code> command. For example, the following command will roll back and re-migrate the last five migrations:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:refresh <span class="token parameter variable">--step</span><span class="token operator">=</span><span class="token number">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="drop-all-tables-migrate" tabindex="-1"><a class="header-anchor" href="#drop-all-tables-migrate"><span>Drop All Tables &amp; Migrate</span></a></h3><p>The <code>migrate:fresh</code> command will drop all tables from the database and then execute the <code>migrate</code> command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:fresh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="tables" tabindex="-1"><a class="header-anchor" href="#tables"><span>Tables</span></a></h2><h3 id="create-table" tabindex="-1"><a class="header-anchor" href="#create-table"><span>Create Table</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="check-if-table-column-exists" tabindex="-1"><a class="header-anchor" href="#check-if-table-column-exists"><span>Check If Table / Column Exists</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasTable</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasColumn</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasColumns</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasIndex</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email_unique&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="database-connection" tabindex="-1"><a class="header-anchor" href="#database-connection"><span>Database Connection</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Connection</span><span class="token punctuation">(</span><span class="token string">&quot;sqlite&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="update-table" tabindex="-1"><a class="header-anchor" href="#update-table"><span>Update Table</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rename-drop-table" tabindex="-1"><a class="header-anchor" href="#rename-drop-table"><span>Rename / Drop Table</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Rename</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;new_users&quot;</span><span class="token punctuation">)</span></span>
<span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Drop</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DropIfExists</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="columns" tabindex="-1"><a class="header-anchor" href="#columns"><span>Columns</span></a></h2><h3 id="available-column-types" tabindex="-1"><a class="header-anchor" href="#available-column-types"><span>Available Column Types</span></a></h3><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>BigIncrements</td><td>BigInteger</td><td>Boolean</td><td>Char</td></tr><tr><td>Date</td><td>DateTime</td><td>DateTimeTz</td><td>Decimal</td></tr><tr><td>Double</td><td><a href="#enum">Enum</a></td><td>Float</td><td><a href="#id">ID</a></td></tr><tr><td>Increments</td><td>Integer</td><td>IntegerIncrements</td><td>Json</td></tr><tr><td>Increments</td><td>LongText</td><td>MediumIncrements</td><td>MediumInteger</td></tr><tr><td>MediumText</td><td>SmallIncrements</td><td>SmallInteger</td><td><a href="#softdeletes">SoftDeletes</a></td></tr><tr><td>SoftDeletesTz</td><td>String</td><td>Text</td><td>Time</td></tr><tr><td>TimeTz</td><td>Timestamp</td><td>Timestamps</td><td>TimestampsTz</td></tr><tr><td>TimestampTz</td><td>UnsignedBigInteger</td><td>TinyIncrements</td><td>TinyInteger</td></tr><tr><td>TinyText</td><td>UnsignedInteger</td><td>UnsignedMediumInteger</td><td>UnsignedSmallInteger</td></tr><tr><td>UnsignedTinyInteger</td><td></td><td></td><td></td></tr></tbody></table><h4 id="enum" tabindex="-1"><a class="header-anchor" href="#enum"><span>Enum</span></a></h4><p>Create an <code>Enum</code> field that can be stored in <code>Mysql</code> according to the type in <code>[]any</code>, but in <code>Postgres</code>, <code>Sqlite</code>, and <code>Sqlserver</code> databases, it is a <code>String</code> type.</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">Enum</span><span class="token punctuation">(</span><span class="token string">&quot;difficulty&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;easy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hard&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">table<span class="token punctuation">.</span><span class="token function">Enum</span><span class="token punctuation">(</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>ID</span></a></h4><p>The <code>ID</code> method is an alias for the <code>BigIncrements</code> method. By default, this method will create an <code>id</code> column; however, if you would like to assign a different name to the column, you may pass the column name:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="softdeletes" tabindex="-1"><a class="header-anchor" href="#softdeletes"><span>SoftDeletes</span></a></h4><p>The <code>SoftDeletes</code> method adds a nullable <code>deleted_at</code> <code>TIMESTAMP</code> column. This column is intended to store the <code>deleted_at</code> timestamp required for the Orm &quot;soft delete&quot; feature:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">SoftDeletes</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="custom-column" tabindex="-1"><a class="header-anchor" href="#custom-column"><span>Custom column</span></a></h4><p>If you are using column types that framework does not support yet, you can use the <code>Column</code> method to customize the field type:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">Column</span><span class="token punctuation">(</span><span class="token string">&quot;geometry&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;geometry&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="column-modifiers" tabindex="-1"><a class="header-anchor" href="#column-modifiers"><span>Column Modifiers</span></a></h3><p>In addition to the column types listed above, when adding a column to a database table, you can also add &quot;modifiers&quot; to the column. For example, to allow a column to be &quot;nullable,&quot; you can use the <code>Nullable</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The following table contains all available column modifiers:</p><table><thead><tr><th>Modified</th><th>Description</th></tr></thead><tbody><tr><td><code>.AutoIncrement()</code></td><td>Sets an integer column as auto-incrementing (primary key)</td></tr><tr><td><code>.Comment(&quot;my comment&quot;)</code></td><td>Adds a comment to the column (MySQL / PostgreSQL)</td></tr><tr><td><code>.Default(value)</code></td><td>Sets the default value for the column</td></tr><tr><td><code>.Nullable()</code></td><td>Allows NULL values to be inserted into the column</td></tr><tr><td><code>.Unsigned()</code></td><td>Sets an integer column as UNSIGNED (MySQL only)</td></tr><tr><td><code>.UseCurrent()</code></td><td>Sets a timestamp column to use CURRENT_TIMESTAMP as the default value</td></tr><tr><td><code>.UseCurrentOnUpdate()</code></td><td>Sets a timestamp column to use CURRENT_TIMESTAMP when the record is updated (MySQL only)</td></tr></tbody></table><h3 id="drop-column" tabindex="-1"><a class="header-anchor" href="#drop-column"><span>Drop Column</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropColumn</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropColumn</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indexes" tabindex="-1"><a class="header-anchor" href="#indexes"><span>Indexes</span></a></h2><h3 id="create-index" tabindex="-1"><a class="header-anchor" href="#create-index"><span>Create Index</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Add primary key</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Primary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// Add composite primary key</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Primary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Add unique index</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Add normal index</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Add fulltext index</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">FullText</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">FullText</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rename-index" tabindex="-1"><a class="header-anchor" href="#rename-index"><span>Rename Index</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">RenameIndex</span><span class="token punctuation">(</span><span class="token string">&quot;users_name_index&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;users_name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="drop-index" tabindex="-1"><a class="header-anchor" href="#drop-index"><span>Drop Index</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropPrimary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropUnique</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropUniqueByName</span><span class="token punctuation">(</span><span class="token string">&quot;name_unique&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropIndex</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropIndexByName</span><span class="token punctuation">(</span><span class="token string">&quot;name_index&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropFullText</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropFullTextByName</span><span class="token punctuation">(</span><span class="token string">&quot;name_fulltext&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-foreign-key" tabindex="-1"><a class="header-anchor" href="#create-foreign-key"><span>Create Foreign Key</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;posts&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">UnsignedBigInteger</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Foreign</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">References</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="drop-foreign-key" tabindex="-1"><a class="header-anchor" href="#drop-foreign-key"><span>Drop Foreign Key</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropForeign</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropForeignByName</span><span class="token punctuation">(</span><span class="token string">&quot;user_id_foreign&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,93)),a(i)])}const h=l(d,[["render",m],["__file","migrations.html.vue"]]),v=JSON.parse(`{"path":"/orm/migrations.html","title":"Migrations","lang":"en-US","frontmatter":{"description":"Migrations Introduction When multiple people collaborate to develop applications, it's crucial to have a standardized database structure for synchronization. Without this, there...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/orm/migrations.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/orm/migrations.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/orm/migrations.html"}],["meta",{"property":"og:description","content":"Migrations Introduction When multiple people collaborate to develop applications, it's crucial to have a standardized database structure for synchronization. Without this, there..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Migrations\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Create Migrations","slug":"create-migrations","link":"#create-migrations","children":[{"level":3,"title":"Quickly Create","slug":"quickly-create","link":"#quickly-create","children":[]}]},{"level":2,"title":"Migration Structure","slug":"migration-structure","link":"#migration-structure","children":[{"level":3,"title":"Go Language Migration","slug":"go-language-migration","link":"#go-language-migration","children":[]},{"level":3,"title":"SQL Migration","slug":"sql-migration","link":"#sql-migration","children":[]}]},{"level":2,"title":"Register Migrations","slug":"register-migrations","link":"#register-migrations","children":[]},{"level":2,"title":"Run Migrations","slug":"run-migrations","link":"#run-migrations","children":[]},{"level":2,"title":"Rolling Back Migrations","slug":"rolling-back-migrations","link":"#rolling-back-migrations","children":[{"level":3,"title":"Roll Back & Migrate Using A Single Command","slug":"roll-back-migrate-using-a-single-command","link":"#roll-back-migrate-using-a-single-command","children":[]},{"level":3,"title":"Drop All Tables & Migrate","slug":"drop-all-tables-migrate","link":"#drop-all-tables-migrate","children":[]}]},{"level":2,"title":"Tables","slug":"tables","link":"#tables","children":[{"level":3,"title":"Create Table","slug":"create-table","link":"#create-table","children":[]},{"level":3,"title":"Check If Table / Column Exists","slug":"check-if-table-column-exists","link":"#check-if-table-column-exists","children":[]},{"level":3,"title":"Database Connection","slug":"database-connection","link":"#database-connection","children":[]},{"level":3,"title":"Update Table","slug":"update-table","link":"#update-table","children":[]},{"level":3,"title":"Rename / Drop Table","slug":"rename-drop-table","link":"#rename-drop-table","children":[]}]},{"level":2,"title":"Columns","slug":"columns","link":"#columns","children":[{"level":3,"title":"Available Column Types","slug":"available-column-types","link":"#available-column-types","children":[]},{"level":3,"title":"Column Modifiers","slug":"column-modifiers","link":"#column-modifiers","children":[]},{"level":3,"title":"Drop Column","slug":"drop-column","link":"#drop-column","children":[]}]},{"level":2,"title":"Indexes","slug":"indexes","link":"#indexes","children":[{"level":3,"title":"Create Index","slug":"create-index","link":"#create-index","children":[]},{"level":3,"title":"Rename Index","slug":"rename-index","link":"#rename-index","children":[]},{"level":3,"title":"Drop Index","slug":"drop-index","link":"#drop-index","children":[]},{"level":3,"title":"Create Foreign Key","slug":"create-foreign-key","link":"#create-foreign-key","children":[]},{"level":3,"title":"Drop Foreign Key","slug":"drop-foreign-key","link":"#drop-foreign-key","children":[]}]}],"git":{},"filePathRelative":"orm/migrations.md","autoDesc":true}`);export{h as comp,v as data};
