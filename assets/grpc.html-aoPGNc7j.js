import{_ as o,c as i,b as s,e as a,f as e,a as u,r as c,o as r,d as t}from"./app-DRzOcIqi.js";const d={},k={class:"table-of-contents"};function v(g,n){const p=c("router-link"),l=c("CommentService");return r(),i("div",null,[n[7]||(n[7]=s("h1",{id:"grpc",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#grpc"},[s("span",null,"Grpc")])],-1)),s("nav",k,[s("ul",null,[s("li",null,[a(p,{to:"#简介"},{default:e(()=>n[0]||(n[0]=[t("简介")])),_:1})]),s("li",null,[a(p,{to:"#配置"},{default:e(()=>n[1]||(n[1]=[t("配置")])),_:1})]),s("li",null,[a(p,{to:"#控制器"},{default:e(()=>n[2]||(n[2]=[t("控制器")])),_:1})]),s("li",null,[a(p,{to:"#定义路由"},{default:e(()=>n[3]||(n[3]=[t("定义路由")])),_:1}),s("ul",null,[s("li",null,[a(p,{to:"#注册路由"},{default:e(()=>n[4]||(n[4]=[t("注册路由")])),_:1})])])]),s("li",null,[a(p,{to:"#启动-grpc-服务器"},{default:e(()=>n[5]||(n[5]=[t("启动 Grpc 服务器")])),_:1})]),s("li",null,[a(p,{to:"#拦截器"},{default:e(()=>n[6]||(n[6]=[t("拦截器")])),_:1})])])]),n[8]||(n[8]=u(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Grpc 模块可以使用 <code>facades.Grpc()</code> 进行操作。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p>在 <code>config/grpc.go</code> 中进行 Grpc 模块的配置，其中 <code>grpc.host</code> 配置 server 的域名，<code>grpc.clients</code> 配置 client 的相关信息。</p><h2 id="控制器" tabindex="-1"><a class="header-anchor" href="#控制器"><span>控制器</span></a></h2><p>控制器文件可以定义在 <code>/app/grpc/controllers</code> 目录中。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// app/grpc/controllers</span></span>
<span class="line"><span class="token keyword">package</span> controllers</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;context&quot;</span></span>
<span class="line">  <span class="token string">&quot;net/http&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/grpc/protos&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> UserController <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">NewUserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>UserController <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token operator">&amp;</span>UserController<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>UserController<span class="token punctuation">)</span> <span class="token function">Show</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>protos<span class="token punctuation">.</span>UserRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span>protoBook <span class="token operator">*</span>protos<span class="token punctuation">.</span>UserResponse<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token operator">&amp;</span>protos<span class="token punctuation">.</span>UserResponse<span class="token punctuation">{</span></span>
<span class="line">    Code<span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定义路由" tabindex="-1"><a class="header-anchor" href="#定义路由"><span>定义路由</span></a></h2><p>所有路由文件可以定义在 <code>/routes</code> 目录中，例如 <code>/routes/grpc.go</code>。然后注册到 <code>app/providers/grpc_service_provider.go</code> 文件中，以实现路由的绑定。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// routes/grpc.go</span></span>
<span class="line"><span class="token keyword">package</span> routes</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/grpc/protos&quot;</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token string">&quot;goravel/app/grpc/controllers&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">Grpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  protos<span class="token punctuation">.</span><span class="token function">RegisterUserServer</span><span class="token punctuation">(</span>facades<span class="token punctuation">.</span><span class="token function">Grpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Server</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span><span class="token function">NewUserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册路由" tabindex="-1"><a class="header-anchor" href="#注册路由"><span>注册路由</span></a></h3><p>路由定义好后，在 <code>app/providers/grpc_service_provider.go</code> 文件中注册路由。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// app/providers/grpc_service_provider.go</span></span>
<span class="line"><span class="token keyword">package</span> providers</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;goravel/routes&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> GrpcServiceProvider <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>router <span class="token operator">*</span>GrpcServiceProvider<span class="token punctuation">)</span> <span class="token function">Register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>router <span class="token operator">*</span>GrpcServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  routes<span class="token punctuation">.</span><span class="token function">Grpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动-grpc-服务器" tabindex="-1"><a class="header-anchor" href="#启动-grpc-服务器"><span>启动 Grpc 服务器</span></a></h2><p>在 <code>main.go</code> 中启动 Grpc.</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Grpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;grpc.host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">    facades<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;Grpc run error: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拦截器" tabindex="-1"><a class="header-anchor" href="#拦截器"><span>拦截器</span></a></h2><p>拦截器可以定义在 <code>app/grpc/inteceptors</code> 文件夹中，然后注册到 <code>app/grpc/kernel.go</code>。</p><p><strong>服务端拦截器</strong></p><p>在 <code>app/grpc/kernel.go:UnaryServerInterceptors</code> 方法中设置服务端拦截器。例如：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// app/grpc/kernel.go</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;goravel/app/grpc/interceptors&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token string">&quot;google.golang.org/grpc&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>kernel <span class="token operator">*</span>Kernel<span class="token punctuation">)</span> <span class="token function">UnaryServerInterceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>grpc<span class="token punctuation">.</span>UnaryServerInterceptor <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>grpc<span class="token punctuation">.</span>UnaryServerInterceptor<span class="token punctuation">{</span></span>
<span class="line">    interceptors<span class="token punctuation">.</span>Server<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>客户端拦截器</strong></p><p>在 <code>app/grpc/kernel.go:UnaryClientInterceptorGroups</code> 方法中设置客户端拦截器，该方法可以对拦截器进行分组。例如设置 <code>trace</code> 分组下包含 <code>interceptors.Client</code>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// app/grpc/kernel.go</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;goravel/app/grpc/interceptors&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token string">&quot;google.golang.org/grpc&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>kernel <span class="token operator">*</span>Kernel<span class="token punctuation">)</span> <span class="token function">UnaryClientInterceptorGroups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>grpc<span class="token punctuation">.</span>UnaryClientInterceptor <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>grpc<span class="token punctuation">.</span>UnaryClientInterceptor<span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;trace&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">      interceptors<span class="token punctuation">.</span>Client<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分组名 <code>trace</code> 可以被应用到配置项 <code>grpc.clients.interceptors</code> 上，这样该 <code>Client</code> 就会被应用该分组下的所有拦截器。例如：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> config</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  config <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Config</span>
<span class="line">  config<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;grpc&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Grpc Configuration</span></span>
<span class="line">    <span class="token comment">//</span></span>
<span class="line">    <span class="token comment">// Configure your server host</span></span>
<span class="line">    <span class="token string">&quot;host&quot;</span><span class="token punctuation">:</span> config<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token string">&quot;GRPC_HOST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Configure your client host and interceptors.</span></span>
<span class="line">    <span class="token comment">// Interceptors can be the group name of UnaryClientInterceptorGroups in app/grpc/kernel.go.</span></span>
<span class="line">    <span class="token string">&quot;clients&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">      <span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;host&quot;</span><span class="token punctuation">:</span>         config<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token string">&quot;GRPC_USER_HOST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;port&quot;</span><span class="token punctuation">:</span>         config<span class="token punctuation">.</span><span class="token function">Env</span><span class="token punctuation">(</span><span class="token string">&quot;GRPC_USER_PORT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;interceptors&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;trace&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26)),a(l)])}const b=o(d,[["render",v],["__file","grpc.html.vue"]]),h=JSON.parse('{"path":"/zh/the-basics/grpc.html","title":"Grpc","lang":"zh-CN","frontmatter":{"description":"Grpc 简介 Grpc 模块可以使用 facades.Grpc() 进行操作。 配置 在 config/grpc.go 中进行 Grpc 模块的配置，其中 grpc.host 配置 server 的域名，grpc.clients 配置 client 的相关信息。 控制器 控制器文件可以定义在 /app/grpc/controllers 目录中。 定义...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/the-basics/grpc.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/the-basics/grpc.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/the-basics/grpc.html"}],["meta",{"property":"og:description","content":"Grpc 简介 Grpc 模块可以使用 facades.Grpc() 进行操作。 配置 在 config/grpc.go 中进行 Grpc 模块的配置，其中 grpc.host 配置 server 的域名，grpc.clients 配置 client 的相关信息。 控制器 控制器文件可以定义在 /app/grpc/controllers 目录中。 定义..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Grpc\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"控制器","slug":"控制器","link":"#控制器","children":[]},{"level":2,"title":"定义路由","slug":"定义路由","link":"#定义路由","children":[{"level":3,"title":"注册路由","slug":"注册路由","link":"#注册路由","children":[]}]},{"level":2,"title":"启动 Grpc 服务器","slug":"启动-grpc-服务器","link":"#启动-grpc-服务器","children":[]},{"level":2,"title":"拦截器","slug":"拦截器","link":"#拦截器","children":[]}],"git":{},"filePathRelative":"zh/the-basics/grpc.md","autoDesc":true}');export{b as comp,h as data};
