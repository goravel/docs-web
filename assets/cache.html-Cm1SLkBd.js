import{_ as i,r as o,o as l,c as u,a as n,b as s,w as t,d as a,e as r}from"./app-ByPSiRek.js";const d={},k=n("h1",{id:"cache",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cache"},[n("span",null,"Cache")])],-1),m={class:"table-of-contents"},h=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction"},[n("span",null,"Introduction")])],-1),g=n("p",null,[a("Goravel provides an expandable cache module that can be operated using "),n("code",null,"facades.Cache()"),a(". Goravel comes with a "),n("code",null,"memory"),a(" driver, for other drivers, please check the corresponding independent extension packages:")],-1),v=n("thead",null,[n("tr",null,[n("th",null,"Driver"),n("th",null,"Link")])],-1),f=n("td",null,"Redis",-1),b={href:"https://github.com/goravel/redis",target:"_blank",rel:"noopener noreferrer"},y=r(`<h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>Make all custom configurations in <code>config/cache.go</code>.</p><h2 id="cache-usage" tabindex="-1"><a class="header-anchor" href="#cache-usage"><span>Cache Usage</span></a></h2><h3 id="inject-context" tabindex="-1"><a class="header-anchor" href="#inject-context"><span>Inject Context</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="accessing-multiple-cache-stores" tabindex="-1"><a class="header-anchor" href="#accessing-multiple-cache-stores"><span>Accessing Multiple Cache Stores</span></a></h3><p>You may access various cache stores via the <code>Store</code> method. The key passed to the <code>Store</code> method should correspond to one of the stores listed in the &quot;stores&quot; configuration array in your cache configuration file:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Store</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="retrieving-items-from-the-cache" tabindex="-1"><a class="header-anchor" href="#retrieving-items-from-the-cache"><span>Retrieving Items From The Cache</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetBool</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can pass a <code>func</code> as the default value. If the specified data does not exist in the cache, the result of <code>func</code> will be returned. The transitive closure method allows you to obtain default values from the database or other external services. Note the closure structure <code>func() any</code>.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> any <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;default&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checking-for-item-existence" tabindex="-1"><a class="header-anchor" href="#checking-for-item-existence"><span>Checking For Item Existence</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="incrementing-decrementing-values" tabindex="-1"><a class="header-anchor" href="#incrementing-decrementing-values"><span>Incrementing / Decrementing Values</span></a></h3><p>The <code>Increment</code> and <code>Decrement</code> methods may be used to adjust the value of integer items in the cache. Both methods accept an optional second argument indicating the amount by which to increment or decrement the item&#39;s value:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span>
facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span>
facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decrement</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span>
facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Decrement</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="retrieve-store" tabindex="-1"><a class="header-anchor" href="#retrieve-store"><span>Retrieve &amp; Store</span></a></h3><p>Sometimes you may want to get data from the cache, and when the requested cache item does not exist, the program can store a default value for you.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>value<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Remember</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>any<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the data you want does not exist in the cache, the closure passed to the <code>Remember</code> method will be executed, and then the result will be returned and placed in the cache.</p><p>You can use the <code>RememberForever</code> method to retrieve data from the cache or store it permanently:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>value<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RememberForever</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>any<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="retrieve-delete" tabindex="-1"><a class="header-anchor" href="#retrieve-delete"><span>Retrieve &amp; Delete</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pull</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="storing-items-in-the-cache" tabindex="-1"><a class="header-anchor" href="#storing-items-in-the-cache"><span>Storing Items In The Cache</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If the expiration time of the cache is set to <code>0</code>, the cache will be valid forever:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="store-if-not-present" tabindex="-1"><a class="header-anchor" href="#store-if-not-present"><span>Store If Not Present</span></a></h3><p>The <code>Add</code> method stores data only if it&#39;s not in the cache. It returns <code>true</code> if storage is successful and <code>false</code> if it&#39;s not.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="storing-items-forever" tabindex="-1"><a class="header-anchor" href="#storing-items-forever"><span>Storing Items Forever</span></a></h3><p>The <code>Forever</code> method can be used to store data persistently in the cache. Because these data will not expire, they must be manually deleted from the cache through the <code>Forget</code> method:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Forever</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="removing-items-from-the-cache" tabindex="-1"><a class="header-anchor" href="#removing-items-from-the-cache"><span>Removing Items From The Cache</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Forget</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can use the <code>Flush</code> method to clear all caches:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="atomic-locks" tabindex="-1"><a class="header-anchor" href="#atomic-locks"><span>Atomic Locks</span></a></h2><h3 id="managing-locks" tabindex="-1"><a class="header-anchor" href="#managing-locks"><span>Managing Locks</span></a></h3><p>Atomic locks allow for the manipulation of distributed locks without worrying about race conditions. You may create and manage locks using the <code>Lock</code> method:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>lock <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Lock acquired for 10 seconds...</span>

    lock<span class="token punctuation">.</span><span class="token function">Release</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>Get</code> method also accepts a closure. After the closure is executed, Goravel will automatically release the lock:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Lock acquired for 10 seconds and automatically released...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the lock is not available at the moment you request it, you may instruct Goravel to wait for a specified number of seconds. If the lock can not be acquired within the specified time limit, will return <code>false</code>:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>lock <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
<span class="token comment">// Lock acquired after waiting a maximum of 5 seconds...</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">Block</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">Release</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The example above may be simplified by passing a closure to the <code>Block</code> method. When a closure is passed to this method, Goravel will attempt to acquire the lock for the specified number of seconds and will automatically release the lock once the closure has been executed:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Block</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Lock acquired after waiting a maximum of 5 seconds...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you would like to release a lock without respecting its current owner, you may use the <code>ForceRelease</code> method:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>facades<span class="token punctuation">.</span><span class="token function">Cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token string">&quot;processing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ForceRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="adding-custom-cache-drivers" tabindex="-1"><a class="header-anchor" href="#adding-custom-cache-drivers"><span>Adding Custom Cache Drivers</span></a></h2><h3 id="configuration-1" tabindex="-1"><a class="header-anchor" href="#configuration-1"><span>Configuration</span></a></h3><p>If you want to define a completely custom driver, you can specify the <code>custom</code> driver type in the <code>config/cache.go</code> configuration file. Then include a <code>via</code> option to implement a <code>framework/contracts/cache/Driver</code> interface:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">//config/cache.go</span>
<span class="token string">&quot;stores&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
    <span class="token string">&quot;memory&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span>
        <span class="token string">&quot;driver&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;memory&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;custom&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token string">&quot;driver&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;via&quot;</span><span class="token punctuation">:</span>    <span class="token operator">&amp;</span>Logger<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="implement-custom-driver" tabindex="-1"><a class="header-anchor" href="#implement-custom-driver"><span>Implement Custom Driver</span></a></h3><p>Implement the <code>framework/contracts/cache/Driver</code> interface, files can be stored in the <code>app/extensions</code> folder (modifiable).</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// framework/contracts/cache/Driver</span>
<span class="token keyword">package</span> cache

<span class="token keyword">import</span> <span class="token string">&quot;time&quot;</span>

<span class="token keyword">type</span> Driver <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token comment">// Add Driver an item in the cache if the key does not exist.</span>
    <span class="token function">Add</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value any<span class="token punctuation">,</span> t time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token function">Decrement</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
    <span class="token comment">// Forever Driver an item in the cache indefinitely.</span>
    <span class="token function">Forever</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value any<span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token comment">// Forget Remove an item from the cache.</span>
    <span class="token function">Forget</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token comment">// Flush Remove all items from the cache.</span>
    <span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token comment">// Get Retrieve an item from the cache by key.</span>
    <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> def <span class="token operator">...</span>any<span class="token punctuation">)</span> any
    <span class="token function">GetBool</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> def <span class="token operator">...</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token function">GetInt</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> def <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
    <span class="token function">GetInt64</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> def <span class="token operator">...</span><span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">int64</span>
    <span class="token function">GetString</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> def <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
    <span class="token comment">// Has Check an item exists in the cache.</span>
    <span class="token function">Has</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token function">Increment</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
    <span class="token function">Lock</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> t <span class="token operator">...</span>time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> Lock
    <span class="token comment">// Put Driver an item in the cache for a given time.</span>
    <span class="token function">Put</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value any<span class="token punctuation">,</span> t time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token builtin">error</span>
    <span class="token comment">// Pull Retrieve an item from the cache and delete it.</span>
    <span class="token function">Pull</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> def <span class="token operator">...</span>any<span class="token punctuation">)</span> any
    <span class="token comment">// Remember Get an item from the cache, or execute the given Closure and store the result.</span>
    <span class="token function">Remember</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> ttl time<span class="token punctuation">.</span>Duration<span class="token punctuation">,</span> callback <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>any<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>any<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
    <span class="token comment">// RememberForever Get an item from the cache, or execute the given Closure and store the result forever.</span>
    <span class="token function">RememberForever</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> callback <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>any<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>any<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
    <span class="token function">WithContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> Driver
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58);function q(x,C){const e=o("router-link"),c=o("ExternalLinkIcon"),p=o("CommentService");return l(),u("div",null,[k,n("nav",m,[n("ul",null,[n("li",null,[s(e,{to:"#introduction"},{default:t(()=>[a("Introduction")]),_:1})]),n("li",null,[s(e,{to:"#configuration"},{default:t(()=>[a("Configuration")]),_:1})]),n("li",null,[s(e,{to:"#cache-usage"},{default:t(()=>[a("Cache Usage")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#inject-context"},{default:t(()=>[a("Inject Context")]),_:1})]),n("li",null,[s(e,{to:"#accessing-multiple-cache-stores"},{default:t(()=>[a("Accessing Multiple Cache Stores")]),_:1})]),n("li",null,[s(e,{to:"#retrieving-items-from-the-cache"},{default:t(()=>[a("Retrieving Items From The Cache")]),_:1})]),n("li",null,[s(e,{to:"#checking-for-item-existence"},{default:t(()=>[a("Checking For Item Existence")]),_:1})]),n("li",null,[s(e,{to:"#incrementing-decrementing-values"},{default:t(()=>[a("Incrementing / Decrementing Values")]),_:1})]),n("li",null,[s(e,{to:"#retrieve-store"},{default:t(()=>[a("Retrieve & Store")]),_:1})]),n("li",null,[s(e,{to:"#retrieve-delete"},{default:t(()=>[a("Retrieve & Delete")]),_:1})]),n("li",null,[s(e,{to:"#storing-items-in-the-cache"},{default:t(()=>[a("Storing Items In The Cache")]),_:1})]),n("li",null,[s(e,{to:"#store-if-not-present"},{default:t(()=>[a("Store If Not Present")]),_:1})]),n("li",null,[s(e,{to:"#storing-items-forever"},{default:t(()=>[a("Storing Items Forever")]),_:1})]),n("li",null,[s(e,{to:"#removing-items-from-the-cache"},{default:t(()=>[a("Removing Items From The Cache")]),_:1})])])]),n("li",null,[s(e,{to:"#atomic-locks"},{default:t(()=>[a("Atomic Locks")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#managing-locks"},{default:t(()=>[a("Managing Locks")]),_:1})])])]),n("li",null,[s(e,{to:"#adding-custom-cache-drivers"},{default:t(()=>[a("Adding Custom Cache Drivers")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#configuration-1"},{default:t(()=>[a("Configuration")]),_:1})]),n("li",null,[s(e,{to:"#implement-custom-driver"},{default:t(()=>[a("Implement Custom Driver")]),_:1})])])])])]),h,g,n("table",null,[v,n("tbody",null,[n("tr",null,[f,n("td",null,[n("a",b,[a("https://github.com/goravel/redis"),s(c)])])])])]),y,s(p)])}const w=i(d,[["render",q],["__file","cache.html.vue"]]),I=JSON.parse('{"path":"/digging-deeper/cache.html","title":"Cache","lang":"en-US","frontmatter":{"description":"Cache Introduction Goravel provides an expandable cache module that can be operated using facades.Cache(). Goravel comes with a memory driver, for other drivers, please check th...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/digging-deeper/cache.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/digging-deeper/cache.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/digging-deeper/cache.html"}],["meta",{"property":"og:description","content":"Cache Introduction Goravel provides an expandable cache module that can be operated using facades.Cache(). Goravel comes with a memory driver, for other drivers, please check th..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cache\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Cache Usage","slug":"cache-usage","link":"#cache-usage","children":[{"level":3,"title":"Inject Context","slug":"inject-context","link":"#inject-context","children":[]},{"level":3,"title":"Accessing Multiple Cache Stores","slug":"accessing-multiple-cache-stores","link":"#accessing-multiple-cache-stores","children":[]},{"level":3,"title":"Retrieving Items From The Cache","slug":"retrieving-items-from-the-cache","link":"#retrieving-items-from-the-cache","children":[]},{"level":3,"title":"Checking For Item Existence","slug":"checking-for-item-existence","link":"#checking-for-item-existence","children":[]},{"level":3,"title":"Incrementing / Decrementing Values","slug":"incrementing-decrementing-values","link":"#incrementing-decrementing-values","children":[]},{"level":3,"title":"Retrieve & Store","slug":"retrieve-store","link":"#retrieve-store","children":[]},{"level":3,"title":"Retrieve & Delete","slug":"retrieve-delete","link":"#retrieve-delete","children":[]},{"level":3,"title":"Storing Items In The Cache","slug":"storing-items-in-the-cache","link":"#storing-items-in-the-cache","children":[]},{"level":3,"title":"Store If Not Present","slug":"store-if-not-present","link":"#store-if-not-present","children":[]},{"level":3,"title":"Storing Items Forever","slug":"storing-items-forever","link":"#storing-items-forever","children":[]},{"level":3,"title":"Removing Items From The Cache","slug":"removing-items-from-the-cache","link":"#removing-items-from-the-cache","children":[]}]},{"level":2,"title":"Atomic Locks","slug":"atomic-locks","link":"#atomic-locks","children":[{"level":3,"title":"Managing Locks","slug":"managing-locks","link":"#managing-locks","children":[]}]},{"level":2,"title":"Adding Custom Cache Drivers","slug":"adding-custom-cache-drivers","link":"#adding-custom-cache-drivers","children":[{"level":3,"title":"Configuration","slug":"configuration-1","link":"#configuration-1","children":[]},{"level":3,"title":"Implement Custom Driver","slug":"implement-custom-driver","link":"#implement-custom-driver","children":[]}]}],"git":{},"filePathRelative":"digging-deeper/cache.md","autoDesc":true}');export{w as comp,I as data};
