import{_ as c,r as i,o as s,c as p,a as e,b as n,w as a,e as l,d as o}from"./app-R_yqPBBy.js";const u={},d=e("h1",{id:"encryption",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#encryption"},[e("span",null,"Encryption")])],-1),g={class:"table-of-contents"},h=l(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Goravel&#39;s encryption services provide a simple, convenient interface for encrypting and decrypting text via OpenSSL using AES-256 encryption. All of Goravel&#39;s encrypted values are signed using a message authentication code (GMAC) so that their underlying value can not be modified or tampered with once encrypted.</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>Before using Goravel&#39;s encrypter, you must set the <code>key</code> configuration option in your <code>config/app.go</code> configuration file. This option is driven by the <code>APP_KEY</code> environment variable. Use the <code>go run . artisan key:generate</code> command to generate this variable&#39;s value since the <code>key:generate</code> command will utilize Golang&#39;s secure random bytes generator to create a secure cryptographic key for your application.</p><h2 id="using-the-encrypter" tabindex="-1"><a class="header-anchor" href="#using-the-encrypter"><span>Using The Encrypter</span></a></h2><h3 id="encrypting-a-value" tabindex="-1"><a class="header-anchor" href="#encrypting-a-value"><span>Encrypting A Value</span></a></h3><p>To encrypt a value, you can use the <code>EncryptString</code> method in <code>facades.Crypt()</code>. This method encrypts values using the OpenSSL and AES-256-GCM cipher. Additionally, all encrypted values are signed with a message authentication code (GMAC) to prevent decryption by malicious users who try to tamper with the data.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>secret<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Crypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EncryptString</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="decrypting-a-value" tabindex="-1"><a class="header-anchor" href="#decrypting-a-value"><span>Decrypting A Value</span></a></h3><p>You can use the <code>DecryptString</code> method from <code>facades.Crypt()</code> to decrypt values. If the value can not be properly decrypted, such as when the message authentication code is invalid, an error will be returned.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>str<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Crypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DecryptString</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function y(v,m){const t=i("router-link"),r=i("CommentService");return s(),p("div",null,[d,e("nav",g,[e("ul",null,[e("li",null,[n(t,{to:"#introduction"},{default:a(()=>[o("Introduction")]),_:1})]),e("li",null,[n(t,{to:"#configuration"},{default:a(()=>[o("Configuration")]),_:1})]),e("li",null,[n(t,{to:"#using-the-encrypter"},{default:a(()=>[o("Using The Encrypter")]),_:1}),e("ul",null,[e("li",null,[n(t,{to:"#encrypting-a-value"},{default:a(()=>[o("Encrypting A Value")]),_:1})]),e("li",null,[n(t,{to:"#decrypting-a-value"},{default:a(()=>[o("Decrypting A Value")]),_:1})])])])])]),h,n(r)])}const k=c(u,[["render",y],["__file","encryption.html.vue"]]),_=JSON.parse(`{"path":"/security/encryption.html","title":"Encryption","lang":"en-US","frontmatter":{"description":"Encryption Introduction Goravel's encryption services provide a simple, convenient interface for encrypting and decrypting text via OpenSSL using AES-256 encryption. All of Gora...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/security/encryption.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/security/encryption.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/security/encryption.html"}],["meta",{"property":"og:description","content":"Encryption Introduction Goravel's encryption services provide a simple, convenient interface for encrypting and decrypting text via OpenSSL using AES-256 encryption. All of Gora..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Encryption\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Using The Encrypter","slug":"using-the-encrypter","link":"#using-the-encrypter","children":[{"level":3,"title":"Encrypting A Value","slug":"encrypting-a-value","link":"#encrypting-a-value","children":[]},{"level":3,"title":"Decrypting A Value","slug":"decrypting-a-value","link":"#decrypting-a-value","children":[]}]}],"git":{},"filePathRelative":"security/encryption.md","autoDesc":true}`);export{k as comp,_ as data};
