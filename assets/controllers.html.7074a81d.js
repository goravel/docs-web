import{_ as l,r as s,o as i,c as a,b as e,d as o,w as t,e as n,f as c}from"./app.ee1eb8f8.js";const d={},u=e("h1",{id:"controllers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#controllers","aria-hidden":"true"},"#"),n(" Controllers")],-1),h={class:"table-of-contents"},v=n("Introduction"),f=n("Define Controllers"),_=c(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Instead of defining all request processing logic in the form of a closure in a separate route, a controller can be used for integration. The controllers are stored in the <code>app/http/controllers</code> directory.</p><h2 id="define-controllers" tabindex="-1"><a class="header-anchor" href="#define-controllers" aria-hidden="true">#</a> Define Controllers</h2><p>The following is an example of a basic controller class:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package controllers

type UserController struct {
}

func (controller UserController) Login(c *gin.Context) {

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then the route can be defined like this:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.Route.GET(&quot;/users&quot;, controllers.UserController{}.Show)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7);function m(p,b){const r=s("router-link");return i(),a("div",null,[u,e("nav",h,[e("ul",null,[e("li",null,[o(r,{to:"#introduction"},{default:t(()=>[v]),_:1})]),e("li",null,[o(r,{to:"#define-controllers"},{default:t(()=>[f]),_:1})])])]),_])}const g=l(d,[["render",m],["__file","controllers.html.vue"]]);export{g as default};
