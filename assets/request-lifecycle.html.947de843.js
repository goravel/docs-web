import{_ as a,r as c,o as s,c as l,b as e,d as t,w as i,e as o,f as d}from"./app.8dbedbc7.js";const h={},u=e("h1",{id:"request-lifecycle",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#request-lifecycle","aria-hidden":"true"},"#"),o(" Request Lifecycle")],-1),_={class:"table-of-contents"},f=o("Introduction"),p=o("Lifecycle Overview"),v=d('<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Use any tool in your life, if you understandd its working principle, you will be handy, and the same is true for application development. This document will give you a clearer understanding of the working principle of Goravevl.</p><h2 id="lifecycle-overview" tabindex="-1"><a class="header-anchor" href="#lifecycle-overview" aria-hidden="true">#</a> Lifecycle Overview</h2><p>All request entries of the Goravel application are the <code>main.go</code> file, which use the <code>bootstrap.Boot()</code> to boot the frame to load.</p><p>Then create a Goravel instance <code>app := foundation.Application{}</code> in the <code>bootstrap/app.go</code> script.</p>',5),y=o("Then use "),m=e("code",null,"app.Boot()",-1),g=o(" to load the "),w=o("Service Proiders"),b=o(" registered in the bootloader framework, and use "),k=e("code",null,"config.Boot()",-1),x=o(" to load the configuration file under the config directory."),q=e("p",null,[o("Finally, use "),e("code",null,'facades.Route.Run(facades.Config.GetString("app.host"))'),o(" in the "),e("code",null,"main.go"),o(" file to start the HTTP server.")],-1);function B(L,T){const n=c("router-link"),r=c("RouterLink");return s(),l("div",null,[u,e("nav",_,[e("ul",null,[e("li",null,[t(n,{to:"#introduction"},{default:i(()=>[f]),_:1})]),e("li",null,[t(n,{to:"#lifecycle-overview"},{default:i(()=>[p]),_:1})])])]),v,e("p",null,[y,m,g,t(r,{to:"/v0/architecutre-concepts/serice-providers.html"},{default:i(()=>[w]),_:1}),b,k,x]),q])}const G=a(h,[["render",B],["__file","request-lifecycle.html.vue"]]);export{G as default};
