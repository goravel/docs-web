import{_ as i,r as l,o,c,a as n,b as a,w as e,e as d,d as t}from"./app-szi7K--b.js";const u={},r=n("h1",{id:"http-中间件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#http-中间件"},[n("span",null,"HTTP 中间件")])],-1),k={class:"table-of-contents"},v=d(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>中间件可以过滤进入应用程序的 HTTP 请求。</p><h2 id="定义中间件" tabindex="-1"><a class="header-anchor" href="#定义中间件"><span>定义中间件</span></a></h2><p>你可以在 <code>app/http/middleware</code> 目录中创建自己的中间件，结构如下。</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> middleware

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;github.com/goravel/framework/contracts/http&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">Auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> http<span class="token punctuation">.</span>Middleware <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx http<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令创建中间件" tabindex="-1"><a class="header-anchor" href="#命令创建中间件"><span>命令创建中间件</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>go run . artisan make:middleware Auth

// 支持嵌套文件夹
go run . artisan make:middleware user/Auth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注册中间件" tabindex="-1"><a class="header-anchor" href="#注册中间件"><span>注册中间件</span></a></h2><h3 id="全局中间件" tabindex="-1"><a class="header-anchor" href="#全局中间件"><span>全局中间件</span></a></h3><p>如果你希望在应用程序的每一个 HTTP 请求应用中间件，那么只需要在 <code>app/http/kernel.go</code> 文件中的 <code>Middleware</code> 注册中间件。</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// app/http/kernel.go</span>
<span class="token keyword">package</span> http

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;github.com/goravel/framework/contracts/http&quot;</span>

  <span class="token string">&quot;goravel/app/http/middleware&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Kernel <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>kernel <span class="token operator">*</span>Kernel<span class="token punctuation">)</span> <span class="token function">Middleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>http<span class="token punctuation">.</span>Middleware <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>http<span class="token punctuation">.</span>Middleware<span class="token punctuation">{</span>
    middleware<span class="token punctuation">.</span><span class="token function">Auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="为路由分配中间件" tabindex="-1"><a class="header-anchor" href="#为路由分配中间件"><span>为路由分配中间件</span></a></h3><p>你可以为某一些路由单独注册中间件：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/http/middleware&quot;</span>

facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Middleware</span><span class="token punctuation">(</span>middleware<span class="token punctuation">.</span><span class="token function">Auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>Show<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function m(h,g){const s=l("router-link"),p=l("CommentService");return o(),c("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#简介"},{default:e(()=>[t("简介")]),_:1})]),n("li",null,[a(s,{to:"#定义中间件"},{default:e(()=>[t("定义中间件")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#命令创建中间件"},{default:e(()=>[t("命令创建中间件")]),_:1})])])]),n("li",null,[a(s,{to:"#注册中间件"},{default:e(()=>[t("注册中间件")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#全局中间件"},{default:e(()=>[t("全局中间件")]),_:1})]),n("li",null,[a(s,{to:"#为路由分配中间件"},{default:e(()=>[t("为路由分配中间件")]),_:1})])])])])]),v,a(p)])}const w=i(u,[["render",m],["__file","middleware.html.vue"]]),f=JSON.parse('{"path":"/zh/the-basics/middleware.html","title":"HTTP 中间件","lang":"zh-CN","frontmatter":{"description":"HTTP 中间件 简介 中间件可以过滤进入应用程序的 HTTP 请求。 定义中间件 你可以在 app/http/middleware 目录中创建自己的中间件，结构如下。 命令创建中间件 注册中间件 全局中间件 如果你希望在应用程序的每一个 HTTP 请求应用中间件，那么只需要在 app/http/kernel.go 文件中的 Middleware 注册...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/the-basics/middleware.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/the-basics/middleware.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/the-basics/middleware.html"}],["meta",{"property":"og:description","content":"HTTP 中间件 简介 中间件可以过滤进入应用程序的 HTTP 请求。 定义中间件 你可以在 app/http/middleware 目录中创建自己的中间件，结构如下。 命令创建中间件 注册中间件 全局中间件 如果你希望在应用程序的每一个 HTTP 请求应用中间件，那么只需要在 app/http/kernel.go 文件中的 Middleware 注册..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP 中间件\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"定义中间件","slug":"定义中间件","link":"#定义中间件","children":[{"level":3,"title":"命令创建中间件","slug":"命令创建中间件","link":"#命令创建中间件","children":[]}]},{"level":2,"title":"注册中间件","slug":"注册中间件","link":"#注册中间件","children":[{"level":3,"title":"全局中间件","slug":"全局中间件","link":"#全局中间件","children":[]},{"level":3,"title":"为路由分配中间件","slug":"为路由分配中间件","link":"#为路由分配中间件","children":[]}]}],"git":{},"filePathRelative":"zh/the-basics/middleware.md","autoDesc":true}');export{w as comp,f as data};
