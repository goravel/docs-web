import{_ as o,r as c,o as p,c as i,b as n,d as e,w as t,e as s,f as l}from"./app.8e7f4439.js";const u={},r=n("h1",{id:"cache",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cache","aria-hidden":"true"},"#"),s(" Cache")],-1),d={class:"table-of-contents"},k=s("Introduction"),v=s("Configuration"),h=s("Available Cache Drivers"),m=s("Cache Usage"),g=s("Retrieving Items From The Cache"),f=s("Checking For Item Existence"),b=s("Retrieve & Store"),q=s("Retrieve & Delete"),y=s("Storing Items In The Cache"),_=s("Store If Not Present"),w=s("Storing Items Forever"),x=s("Removing Items From The Cache"),C=s("Adding Custom Cache Drivers"),I=s("Configuration"),F=s("Implement Driver"),S=l(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Goravel provides an expandable cache module, this module can be operated using <code>facades.Cache</code>.</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Make all custom configurations in <code>config/cache.go</code>. Different cache drivers are allowed to be configured. By default, <code>redis</code> is used. You can also customize the driver.</p><h2 id="available-cache-drivers" tabindex="-1"><a class="header-anchor" href="#available-cache-drivers" aria-hidden="true">#</a> Available Cache Drivers</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>redis</code></td><td>Redis drive</td></tr><tr><td><code>custom</code></td><td>Custom drive</td></tr></tbody></table><h2 id="cache-usage" tabindex="-1"><a class="header-anchor" href="#cache-usage" aria-hidden="true">#</a> Cache Usage</h2><h3 id="retrieving-items-from-the-cache" tabindex="-1"><a class="header-anchor" href="#retrieving-items-from-the-cache" aria-hidden="true">#</a> Retrieving Items From The Cache</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
value <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">GetBool</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
value <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
value <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can pass a <code>func</code> as the default value. If the specified data does not exist in the cache, the result of <code>func</code> will be returned. The transitive closure method allows you to obtain default values from the database or other external services. Note the closure structure <code>func() interface()</code>.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;default&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checking-for-item-existence" tabindex="-1"><a class="header-anchor" href="#checking-for-item-existence" aria-hidden="true">#</a> Checking For Item Existence</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="retrieve-store" tabindex="-1"><a class="header-anchor" href="#retrieve-store" aria-hidden="true">#</a> Retrieve &amp; Store</h3><p>Sometimes you may want to get data from the cache, and when the requested cache item does not exist, the program can store a default value for you.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>value<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Remember</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;goravel&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the data you want does not exist in the cache, the closure passed to the <code>Remember</code> method will be executed, and then the result will be returned and placed in the cache.</p><p>You can use the <code>RememberForever</code> method to retrieve data from the cache or store it permanently:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>value<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">RememberForever</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;default&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="retrieve-delete" tabindex="-1"><a class="header-anchor" href="#retrieve-delete" aria-hidden="true">#</a> Retrieve &amp; Delete</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>value <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Pull</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="storing-items-in-the-cache" tabindex="-1"><a class="header-anchor" href="#storing-items-in-the-cache" aria-hidden="true">#</a> Storing Items In The Cache</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>err <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If the expiration time of the cache is set to <code>0</code>, the cache will be valid forever:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>err <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="store-if-not-present" tabindex="-1"><a class="header-anchor" href="#store-if-not-present" aria-hidden="true">#</a> Store If Not Present</h3><p>The <code>Add</code> method will only store data that does not exist in the cache. If the storage is successful, it will return <code>true</code>, otherwise it will return <code>false</code>:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="storing-items-forever" tabindex="-1"><a class="header-anchor" href="#storing-items-forever" aria-hidden="true">#</a> Storing Items Forever</h3><p>The <code>Forever</code> method can be used to store data persistently in the cache. Because these data will not expire, they must be manually deleted from the cache through the <code>Forget</code> method:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Forever</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="removing-items-from-the-cache" tabindex="-1"><a class="header-anchor" href="#removing-items-from-the-cache" aria-hidden="true">#</a> Removing Items From The Cache</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Forget</span><span class="token punctuation">(</span><span class="token string">&quot;goravel&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can use the <code>Flush</code> method to clear all caches:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token builtin">bool</span> <span class="token operator">:=</span> facades<span class="token punctuation">.</span>Cache<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="adding-custom-cache-drivers" tabindex="-1"><a class="header-anchor" href="#adding-custom-cache-drivers" aria-hidden="true">#</a> Adding Custom Cache Drivers</h2><h3 id="configuration-1" tabindex="-1"><a class="header-anchor" href="#configuration-1" aria-hidden="true">#</a> Configuration</h3><p>If you want to define a completely custom driver, you can specify the <code>custom</code> driver type in the <code>config/cache.go</code> configuration file. Then include a <code>via</code> option to implement a <code>framework\\contracts\\cache\\Store</code> interface:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//config/cache.go</span>
<span class="token string">&quot;stores&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
    <span class="token string">&quot;redis&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token string">&quot;driver&quot;</span><span class="token punctuation">:</span>     <span class="token string">&quot;redis&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;connection&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;custom&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token string">&quot;driver&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;via&quot;</span><span class="token punctuation">:</span>    <span class="token operator">&amp;</span>Logger<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="implement-driver" tabindex="-1"><a class="header-anchor" href="#implement-driver" aria-hidden="true">#</a> Implement Driver</h3><p>Implement the <code>framework\\contracts\\cache\\Store</code> interface, files can be stored in the <code>app/extensions</code> folder (modifiable).</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//framework\\contracts\\cache\\Store</span>
<span class="token keyword">package</span> cache

<span class="token keyword">import</span> <span class="token string">&quot;time&quot;</span>

<span class="token keyword">type</span> Store <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token comment">//Get Retrieve an item from the cache by key.</span>
    <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> defaults <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token function">GetBool</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> defaults <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token function">GetInt</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> defaults <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
    <span class="token function">GetString</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> defaults <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">string</span>

    <span class="token comment">//Has Determine if an item exists in the cache.</span>
    <span class="token function">Has</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>

    <span class="token comment">//Put Store an item in the cache for a given number of seconds.</span>
    <span class="token function">Put</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> seconds time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token builtin">error</span>

    <span class="token comment">//Pull Retrieve an item from the cache and delete it.</span>
    <span class="token function">Pull</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> defaults <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">//Add Store an item in the cache if the key does not exist.</span>
    <span class="token function">Add</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> seconds time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token builtin">bool</span>

    <span class="token comment">//Remember Get an item from the cache, or execute the given Closure and store the result.</span>
    <span class="token function">Remember</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> ttl time<span class="token punctuation">.</span>Duration<span class="token punctuation">,</span> callback <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>

    <span class="token comment">//RememberForever Get an item from the cache, or execute the given Closure and store the result forever.</span>
    <span class="token function">RememberForever</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> callback <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>

    <span class="token comment">//Forever Store an item in the cache indefinitely.</span>
    <span class="token function">Forever</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>

    <span class="token comment">//Forget Remove an item from the cache.</span>
    <span class="token function">Forget</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>

    <span class="token comment">//Flush Remove all items from the cache.</span>
    <span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42);function R(D,G){const a=c("router-link");return p(),i("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[e(a,{to:"#introduction"},{default:t(()=>[k]),_:1})]),n("li",null,[e(a,{to:"#configuration"},{default:t(()=>[v]),_:1})]),n("li",null,[e(a,{to:"#available-cache-drivers"},{default:t(()=>[h]),_:1})]),n("li",null,[e(a,{to:"#cache-usage"},{default:t(()=>[m]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#retrieving-items-from-the-cache"},{default:t(()=>[g]),_:1})]),n("li",null,[e(a,{to:"#checking-for-item-existence"},{default:t(()=>[f]),_:1})]),n("li",null,[e(a,{to:"#retrieve-store"},{default:t(()=>[b]),_:1})]),n("li",null,[e(a,{to:"#retrieve-delete"},{default:t(()=>[q]),_:1})]),n("li",null,[e(a,{to:"#storing-items-in-the-cache"},{default:t(()=>[y]),_:1})]),n("li",null,[e(a,{to:"#store-if-not-present"},{default:t(()=>[_]),_:1})]),n("li",null,[e(a,{to:"#storing-items-forever"},{default:t(()=>[w]),_:1})]),n("li",null,[e(a,{to:"#removing-items-from-the-cache"},{default:t(()=>[x]),_:1})])])]),n("li",null,[e(a,{to:"#adding-custom-cache-drivers"},{default:t(()=>[C]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#configuration-1"},{default:t(()=>[I]),_:1})]),n("li",null,[e(a,{to:"#implement-driver"},{default:t(()=>[F]),_:1})])])])])]),S])}const P=o(u,[["render",R],["__file","cache.html.vue"]]);export{P as default};
