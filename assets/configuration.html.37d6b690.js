import{_ as a,r,o as c,c as d,b as e,d as t,w as i,e as n,f as s}from"./app.c57080ea.js";const u={},l=e("h1",{id:"configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),n(" Configuration")],-1),f={class:"table-of-contents"},h=n("Introduction"),v=n("Environment Configuration"),g=n("Retrieve Environment Configuration"),p=n("Access Configuration Calues"),m=s(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>All configuration files of the Goravel framework are stored in the <code>config</code> directory. You can view specific instructions and configure flexibly according to project needs.</p><h2 id="environment-configuration" tabindex="-1"><a class="header-anchor" href="#environment-configuration" aria-hidden="true">#</a> Environment Configuration</h2><p>Running applications in different environments usually requires different configurations. For example, you may want to turn on the Debug mode locally, but you don&#39;t need it in the production environment.</p><p>Therefore, the framework provides the <code>.env.example</code> file in the root directory. You need to copy this file and rename it to <code>.env</code> before you start development, and modify the configuration items in the <code>.env</code> file according to your project needs.</p><p>Note that the <code>.env</code> file should not be added to version control, because when multiple people collaborate, different developers may use different configurations, and different deployment environment configurations are different.</p><p>In addition, if an intruder gains access to your code repository, there will be a risk of exposing sensitive configuration. If you want to add a new configuration item, you can add it to the <code>.env.example</code> file to synchronize the configuration of all developers.</p><h2 id="retrieve-environment-configuration" tabindex="-1"><a class="header-anchor" href="#retrieve-environment-configuration" aria-hidden="true">#</a> Retrieve Environment Configuration</h2><p>Use the following method to obtain the configuration items in the <code>.env</code> file:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// The first parameter is the configuration key, and the second parameter is the default value
facades.Config.Env(&quot;APP_NAME&quot;, &quot;goravel&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="access-configuration-calues" tabindex="-1"><a class="header-anchor" href="#access-configuration-calues" aria-hidden="true">#</a> Access Configuration Calues</h2><p>You can easily use the global <code>facades.Config</code> function anywhere in the application to access the configuration values in the <code>config</code> directory. The access to the configuration value can use the &quot;.&quot; syntax. You can also specify a default value, if the configuration option does not exist, the default value is returned:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// Get the configuration of the string type
facades.Config.GetString(&quot;app.name&quot;, &quot;goravel&quot;)

// Get the configuration of the int type
facades.Config.GetInt(&quot;app.int&quot;, 1)

// Get the configuration of the bool type
facades.Config.GetBool(&quot;app.debug&quot;, true)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function _(b,y){const o=r("router-link");return c(),d("div",null,[l,e("nav",f,[e("ul",null,[e("li",null,[t(o,{to:"#introduction"},{default:i(()=>[h]),_:1})]),e("li",null,[t(o,{to:"#environment-configuration"},{default:i(()=>[v]),_:1})]),e("li",null,[t(o,{to:"#retrieve-environment-configuration"},{default:i(()=>[g]),_:1})]),e("li",null,[t(o,{to:"#access-configuration-calues"},{default:i(()=>[p]),_:1})])])]),m])}const C=a(u,[["render",_],["__file","configuration.html.vue"]]);export{C as default};
