import{_ as l,r as i,o as u,c as r,a as n,b as s,w as e,d as a,e as o}from"./app-BglAYrgt.js";const d={},g=n("h1",{id:"package-development",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#package-development"},[n("span",null,"Package Development")])],-1),k={class:"table-of-contents"},h=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction"},[n("span",null,"Introduction")])],-1),m=n("p",null,"Packages are the primary way of adding functionality to Goravel. These packages may contain routes, controllers, and configurations that are specifically designed to enhance a Goravel application. This guide focuses on developing Goravel-specific packages.",-1),v={href:"https://github.com/goravel/example-package",target:"_blank",rel:"noopener noreferrer"},b=o(`<h2 id="creating-a-package" tabindex="-1"><a class="header-anchor" href="#creating-a-package"><span>Creating A Package</span></a></h2><p>You can use easily create a package template using the Artisan command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span> artisan make:package sms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The created files are saved by default in the root <code>packages</code> folder, you can use <code>--root</code> option to customize:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span> artisan make:package <span class="token parameter variable">--root</span><span class="token operator">=</span>pkg sms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="service-providers" tabindex="-1"><a class="header-anchor" href="#service-providers"><span>Service Providers</span></a></h2>`,6),f=n("code",null,"service_provider.go",-1),_=n("h2",{id:"usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#usage"},[n("span",null,"Usage")])],-1),y=n("code",null,"ServiceProvider",-1),P=n("code",null,"config/app.go::providers",-1),x=n("code",null,"facades",-1),q={href:"https://github.com/goravel/example-package",target:"_blank",rel:"noopener noreferrer"},w=o(`<h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources"><span>Resources</span></a></h2><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><p>Typically, you will need to publish your package&#39;s configuration file to the application&#39;s <code>config</code> directory. This will allow users of your package to easily override your default configuration options. To allow your configuration files to be published, call the <code>Publishes</code> method from the <code>Boot</code> method of your service provider, the first parameter is the package name, and the second parameter is the mapping between the current package file path and the project path:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    <span class="token string">&quot;config/sms.go&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">ConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;sms.go&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes"><span>Routes</span></a></h3>`,5),C=n("code",null,"app.MakeRoute()",-1),A=n("code",null,"facades.Route()",-1),S=o(`<div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	route <span class="token operator">:=</span> app<span class="token punctuation">.</span><span class="token function">MakeRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;sms&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="migrations" tabindex="-1"><a class="header-anchor" href="#migrations"><span>Migrations</span></a></h3>`,2),R=n("code",null,"Publishes",-1),T=o(`<div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    <span class="token string">&quot;migrations&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">DatabasePath</span><span class="token punctuation">(</span><span class="token string">&quot;migrations&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2>`,2),G=n("code",null,"Artisan",-1),I=n("code",null,"Commands",-1),B=o(`<div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	app<span class="token punctuation">.</span><span class="token function">Commands</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span>Command<span class="token punctuation">{</span>
		commands<span class="token punctuation">.</span><span class="token function">NewSmsCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="public-assets" tabindex="-1"><a class="header-anchor" href="#public-assets"><span>Public Assets</span></a></h2><p>Your package may have assets such as JavaScript, CSS, and images. To publish these assets to the application&#39;s <code>public</code> directory, use the service provider&#39;s <code>Publishes</code> method:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    <span class="token string">&quot;public&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">PublicPath</span><span class="token punctuation">(</span><span class="token string">&quot;vendor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publishing-file-groups" tabindex="-1"><a class="header-anchor" href="#publishing-file-groups"><span>Publishing File Groups</span></a></h2><p>If you want to publish specific groups of package assets and resources separately, you can use tags when calling the <code>Publishes</code> method from the package&#39;s service provider. This allows you to give users the option to publish certain files, like configuration files, without having to publish all the package&#39;s assets. To illustrate, you can define two publish groups for the <code>sms</code> package (<code>sms-config</code> and <code>sms-migrations</code>) using tags in the <code>Boot</code> method of the package&#39;s service provider.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    <span class="token string">&quot;config/sms.go&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">ConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;sms.go&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;sms-config&quot;</span><span class="token punctuation">)</span>
  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
    <span class="token string">&quot;migrations&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">DatabasePath</span><span class="token punctuation">(</span><span class="token string">&quot;migrations&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;sms-migrations&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publish-resources" tabindex="-1"><a class="header-anchor" href="#publish-resources"><span>Publish Resources</span></a></h2><p>In the project, You can publish the resources registered in a package using <code>vendor:publish</code> Artisan command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span> artisan vendor:publish <span class="token parameter variable">--package</span><span class="token operator">=</span><span class="token punctuation">{</span>You package name<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The command can use the following options:</p><table><thead><tr><th>Option Name</th><th>Alias</th><th>Action</th></tr></thead><tbody><tr><td>--package</td><td>-p</td><td>Package name, can be a remote package: <code>github.com/goravel/example-package</code>, and also can be a local package: <code>./packages/example-package</code>, note that when using a local package name, it needs to start with <code>./</code>.</td></tr><tr><td>--tag</td><td>-t</td><td>Resource Group</td></tr><tr><td>--force</td><td>-f</td><td>Overwrite any existing files</td></tr><tr><td>--existing</td><td>-e</td><td>Publish and overwrite only the files that have already been published</td></tr></tbody></table>`,12);function D(N,M){const t=i("router-link"),c=i("ExternalLinkIcon"),p=i("RouteLink");return u(),r("div",null,[g,n("nav",k,[n("ul",null,[n("li",null,[s(t,{to:"#introduction"},{default:e(()=>[a("Introduction")]),_:1})]),n("li",null,[s(t,{to:"#creating-a-package"},{default:e(()=>[a("Creating A Package")]),_:1})]),n("li",null,[s(t,{to:"#service-providers"},{default:e(()=>[a("Service Providers")]),_:1})]),n("li",null,[s(t,{to:"#usage"},{default:e(()=>[a("Usage")]),_:1})]),n("li",null,[s(t,{to:"#resources"},{default:e(()=>[a("Resources")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#configuration"},{default:e(()=>[a("Configuration")]),_:1})]),n("li",null,[s(t,{to:"#routes"},{default:e(()=>[a("Routes")]),_:1})]),n("li",null,[s(t,{to:"#migrations"},{default:e(()=>[a("Migrations")]),_:1})])])]),n("li",null,[s(t,{to:"#commands"},{default:e(()=>[a("Commands")]),_:1})]),n("li",null,[s(t,{to:"#public-assets"},{default:e(()=>[a("Public Assets")]),_:1})]),n("li",null,[s(t,{to:"#publishing-file-groups"},{default:e(()=>[a("Publishing File Groups")]),_:1})]),n("li",null,[s(t,{to:"#publish-resources"},{default:e(()=>[a("Publish Resources")]),_:1})])])]),h,m,n("p",null,[a("Here is an example for building a third-party package: "),n("a",v,[a("goravel/example-package"),s(c)])]),b,n("p",null,[s(p,{to:"/architecutre-concepts/service-providers.html"},{default:e(()=>[a("Service providers")]),_:1}),a(" act as the bridge between your package and Goravel. They are typically located in the root of the package as a "),f,a(" file. Their main function is to bind items into Goravel's service container and guide Goravel in loading package resources.")]),_,n("p",null,[a("Register the "),y,a(" in the package to "),P,a(", then export "),x,a(" to the application. For detailed steps, refer to "),n("a",q,[a("goravel/example-package"),s(c)]),a(".")]),w,n("p",null,[a("If there are "),s(p,{to:"/the-basics/routing.html"},{default:e(()=>[a("routes")]),_:1}),a(" in your package, you can use "),C,a(" to resolve "),A,a(", then add the routes to the project:")]),S,n("p",null,[a("If there are "),s(p,{to:"/orm/migrations.html"},{default:e(()=>[a("migrations")]),_:1}),a(" in your package, you can publish them by the "),R,a(" method:")]),T,n("p",null,[a("You can register "),G,a(" command by the "),I,a(" method, you can run the commands using "),s(p,{to:"/digging-deeper/artisan-console.html"},{default:e(()=>[a("Artisan CLI")]),_:1}),a(" after registering them.")]),B])}const U=l(d,[["render",D],["__file","package-development.html.vue"]]),Y=JSON.parse('{"path":"/digging-deeper/package-development.html","title":"Package Development","lang":"en-US","frontmatter":{"description":"Package Development Introduction Packages are the primary way of adding functionality to Goravel. These packages may contain routes, controllers, and configurations that are spe...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/digging-deeper/package-development.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/digging-deeper/package-development.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/digging-deeper/package-development.html"}],["meta",{"property":"og:description","content":"Package Development Introduction Packages are the primary way of adding functionality to Goravel. These packages may contain routes, controllers, and configurations that are spe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Package Development\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Creating A Package","slug":"creating-a-package","link":"#creating-a-package","children":[]},{"level":2,"title":"Service Providers","slug":"service-providers","link":"#service-providers","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Resources","slug":"resources","link":"#resources","children":[{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Routes","slug":"routes","link":"#routes","children":[]},{"level":3,"title":"Migrations","slug":"migrations","link":"#migrations","children":[]}]},{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[]},{"level":2,"title":"Public Assets","slug":"public-assets","link":"#public-assets","children":[]},{"level":2,"title":"Publishing File Groups","slug":"publishing-file-groups","link":"#publishing-file-groups","children":[]},{"level":2,"title":"Publish Resources","slug":"publish-resources","link":"#publish-resources","children":[]}],"git":{},"filePathRelative":"digging-deeper/package-development.md","autoDesc":true}');export{U as comp,Y as data};
