import{_ as c,r as i,o as h,c as u,a as e,b as n,w as l,d as a,e as s}from"./app-DG3aHC9r.js";const v={},p=e("h1",{id:"安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装"},[e("span",null,"安装")])],-1),g={class:"table-of-contents"},m=s('<h2 id="服务器要求" tabindex="-1"><a class="header-anchor" href="#服务器要求"><span>服务器要求</span></a></h2><ul><li>Golang &gt;= 1.21</li></ul><h2 id="安装-goravel" tabindex="-1"><a class="header-anchor" href="#安装-goravel"><span>安装 Goravel</span></a></h2><h3 id="使用-goravel-安装器" tabindex="-1"><a class="header-anchor" href="#使用-goravel-安装器"><span>使用 Goravel 安装器</span></a></h3>',4),b={href:"https://github.com/goravel/installer",target:"_blank",rel:"noopener noreferrer"},_=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 进入想要安装项目的目录
goravel new blog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动安装" tabindex="-1"><a class="header-anchor" href="#手动安装"><span>手动安装</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 下载框架
<span class="token function">git</span> clone https://github.com/goravel/goravel.git <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> goravel/.git*

// 安装依赖
<span class="token builtin class-name">cd</span> goravel <span class="token operator">&amp;&amp;</span> go mod tidy

// 创建 .env 环境配置文件
<span class="token function">cp</span> .env.example .env

// 生成应用密钥
go run <span class="token builtin class-name">.</span> artisan key:generate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),k={href:"https://learnku.com/go/wikis/38122",target:"_blank",rel:"noopener noreferrer"},f=s(`<h2 id="启动-http-服务" tabindex="-1"><a class="header-anchor" href="#启动-http-服务"><span>启动 HTTP 服务</span></a></h2><h3 id="根据根目录下的-env-文件启动服务" tabindex="-1"><a class="header-anchor" href="#根据根目录下的-env-文件启动服务"><span>根据根目录下的 .env 文件启动服务</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="指定-env-文件启动服务" tabindex="-1"><a class="header-anchor" href="#指定-env-文件启动服务"><span>指定 .env 文件启动服务</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span> <span class="token parameter variable">--env</span><span class="token operator">=</span><span class="token punctuation">..</span>/.env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用环境变量启动服务" tabindex="-1"><a class="header-anchor" href="#使用环境变量启动服务"><span>使用环境变量启动服务</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">APP_ENV</span><span class="token operator">=</span>production <span class="token assign-left variable">APP_DEBUG</span><span class="token operator">=</span>true go run <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="热更新" tabindex="-1"><a class="header-anchor" href="#热更新"><span>热更新</span></a></h3>`,8),x={href:"https://github.com/cosmtrek/air",target:"_blank",rel:"noopener noreferrer"},G=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>air
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果是 Windows 系统，需要修改根目录下 <code>.air.toml</code> 文件，为下面两行增加 <code>.exe</code> 后缀：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[build]
  bin = &quot;./storage/temp/main.exe&quot;
  cmd = &quot;go build -o ./storage/temp/main.exe .&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>Goravel 框架所有的配置文件都放在 <code>config</code> 目录中。每个配置项都有注释，可以根据自身需求进行调整。</p><h3 id="生成密钥" tabindex="-1"><a class="header-anchor" href="#生成密钥"><span>生成密钥</span></a></h3><p>Goravel 安装到本地后，要生成应用程序的密钥。运行下面命令后会在 <code>.env</code> 文件的 <code>APP_KEY</code> 键上生成 32 位字符串，该密钥主要作用于数据加解密等功能。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span> artisan key:generate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="生成-jwt-token" tabindex="-1"><a class="header-anchor" href="#生成-jwt-token"><span>生成 JWT Token</span></a></h3>`,10),T=s(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token builtin class-name">.</span> artisan jwt:secret
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1);function y(P,w){const t=i("router-link"),r=i("ExternalLinkIcon"),o=i("RouteLink"),d=i("CommentService");return h(),u("div",null,[p,e("nav",g,[e("ul",null,[e("li",null,[n(t,{to:"#服务器要求"},{default:l(()=>[a("服务器要求")]),_:1})]),e("li",null,[n(t,{to:"#安装-goravel"},{default:l(()=>[a("安装 Goravel")]),_:1}),e("ul",null,[e("li",null,[n(t,{to:"#使用-goravel-安装器"},{default:l(()=>[a("使用 Goravel 安装器")]),_:1})]),e("li",null,[n(t,{to:"#手动安装"},{default:l(()=>[a("手动安装")]),_:1})])])]),e("li",null,[n(t,{to:"#启动-http-服务"},{default:l(()=>[a("启动 HTTP 服务")]),_:1}),e("ul",null,[e("li",null,[n(t,{to:"#根据根目录下的-env-文件启动服务"},{default:l(()=>[a("根据根目录下的 .env 文件启动服务")]),_:1})]),e("li",null,[n(t,{to:"#指定-env-文件启动服务"},{default:l(()=>[a("指定 .env 文件启动服务")]),_:1})]),e("li",null,[n(t,{to:"#使用环境变量启动服务"},{default:l(()=>[a("使用环境变量启动服务")]),_:1})]),e("li",null,[n(t,{to:"#热更新"},{default:l(()=>[a("热更新")]),_:1})])])]),e("li",null,[n(t,{to:"#配置"},{default:l(()=>[a("配置")]),_:1}),e("ul",null,[e("li",null,[n(t,{to:"#配置文件"},{default:l(()=>[a("配置文件")]),_:1})]),e("li",null,[n(t,{to:"#生成密钥"},{default:l(()=>[a("生成密钥")]),_:1})]),e("li",null,[n(t,{to:"#生成-jwt-token"},{default:l(()=>[a("生成 JWT Token")]),_:1})])])])])]),m,e("p",null,[a("根据"),e("a",b,[a("文档"),n(r)]),a("初始化安装器，然后使用下面命令初始化一个新的 Goravel 项目：")]),_,e("p",null,[a("如果安装依赖较慢，请使用国内代理，"),e("a",k,[a("详见文章"),n(r)]),a("。")]),f,e("p",null,[a("安装 "),e("a",x,[a("cosmtrek/air"),n(r)]),a("，框架内置配置文件，可直接使用：")]),G,e("p",null,[a("如果使用到了 "),n(o,{to:"/zh/security/authentication.html"},{default:l(()=>[a("用户认证")]),_:1}),a(" 功能，需要初始化 JWT Token。")]),T,n(d)])}const j=c(v,[["render",y],["__file","installation.html.vue"]]),z=JSON.parse('{"path":"/zh/getting-started/installation.html","title":"安装","lang":"zh-CN","frontmatter":{"description":"安装 服务器要求 Golang >= 1.21 安装 Goravel 使用 Goravel 安装器 根据文档初始化安装器，然后使用下面命令初始化一个新的 Goravel 项目： 手动安装 如果安装依赖较慢，请使用国内代理，详见文章。 启动 HTTP 服务 根据根目录下的 .env 文件启动服务 指定 .env 文件启动服务 使用环境变量启动服务 热更新...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/getting-started/installation.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/getting-started/installation.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/getting-started/installation.html"}],["meta",{"property":"og:description","content":"安装 服务器要求 Golang >= 1.21 安装 Goravel 使用 Goravel 安装器 根据文档初始化安装器，然后使用下面命令初始化一个新的 Goravel 项目： 手动安装 如果安装依赖较慢，请使用国内代理，详见文章。 启动 HTTP 服务 根据根目录下的 .env 文件启动服务 指定 .env 文件启动服务 使用环境变量启动服务 热更新..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"服务器要求","slug":"服务器要求","link":"#服务器要求","children":[]},{"level":2,"title":"安装 Goravel","slug":"安装-goravel","link":"#安装-goravel","children":[{"level":3,"title":"使用 Goravel 安装器","slug":"使用-goravel-安装器","link":"#使用-goravel-安装器","children":[]},{"level":3,"title":"手动安装","slug":"手动安装","link":"#手动安装","children":[]}]},{"level":2,"title":"启动 HTTP 服务","slug":"启动-http-服务","link":"#启动-http-服务","children":[{"level":3,"title":"根据根目录下的 .env 文件启动服务","slug":"根据根目录下的-env-文件启动服务","link":"#根据根目录下的-env-文件启动服务","children":[]},{"level":3,"title":"指定 .env 文件启动服务","slug":"指定-env-文件启动服务","link":"#指定-env-文件启动服务","children":[]},{"level":3,"title":"使用环境变量启动服务","slug":"使用环境变量启动服务","link":"#使用环境变量启动服务","children":[]},{"level":3,"title":"热更新","slug":"热更新","link":"#热更新","children":[]}]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":3,"title":"生成密钥","slug":"生成密钥","link":"#生成密钥","children":[]},{"level":3,"title":"生成 JWT Token","slug":"生成-jwt-token","link":"#生成-jwt-token","children":[]}]}],"git":{},"filePathRelative":"zh/getting-started/installation.md","autoDesc":true}');export{j as comp,z as data};
