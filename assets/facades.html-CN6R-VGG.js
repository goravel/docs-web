import{_ as i,c as u,b as t,e as a,f as s,a as r,r as p,o as c,d as e}from"./app-B7vbr0pN.js";const f={},g={class:"table-of-contents"};function m(k,n){const o=p("router-link"),l=p("RouteLink"),d=p("CommentService");return c(),u("div",null,[n[46]||(n[46]=t("h1",{id:"facades",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#facades"},[t("span",null,"Facades")])],-1)),t("nav",g,[t("ul",null,[t("li",null,[a(o,{to:"#简介"},{default:s(()=>n[0]||(n[0]=[e("简介")])),_:1})]),t("li",null,[a(o,{to:"#facades-工作原理"},{default:s(()=>n[1]||(n[1]=[e("facades 工作原理")])),_:1})]),t("li",null,[a(o,{to:"#facade-类参考"},{default:s(()=>n[2]||(n[2]=[e("facade 类参考")])),_:1})])])]),n[47]||(n[47]=r(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><code>facades</code> 为应用的核心功能提供一个「静态」接口，能够提供更加灵活、更加优雅、易于测试的语法。</p><p>Goravel 所有的 <code>facades</code> 都定义在 <code>github.com/goravel/framework/facades</code> 下。我们可以很轻松的使用 <code>facades</code>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"></span>
<span class="line">facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;app.host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="facades-工作原理" tabindex="-1"><a class="header-anchor" href="#facades-工作原理"><span>facades 工作原理</span></a></h2><p><code>facades</code> 一般会在各模块 <code>ServerProvider</code> 的 <code>Register</code> 或 <code>Boot</code> 阶段进行实例化。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>config <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app <span class="token operator">:=</span> Application<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">  facades<span class="token punctuation">.</span>Config <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果该 <code>facades</code> 使用了其他 <code>facades</code>，那么就在 <code>ServerProvider</code> 的 <code>Boot</code> 阶段进行实例化：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>database <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app <span class="token operator">:=</span> Application<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">  facades<span class="token punctuation">.</span>DB <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="facade-类参考" tabindex="-1"><a class="header-anchor" href="#facade-类参考"><span>facade 类参考</span></a></h2>`,10)),t("table",null,[n[45]||(n[45]=t("thead",null,[t("tr",null,[t("th",null,"Facade"),t("th",null,"文档")])],-1)),t("tbody",null,[t("tr",null,[n[4]||(n[4]=t("td",null,"App",-1)),t("td",null,[a(l,{to:"/zh/architecture-concepts/service-container.html"},{default:s(()=>n[3]||(n[3]=[e("容器")])),_:1})])]),t("tr",null,[n[6]||(n[6]=t("td",null,"Artisan",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/artisan-console.html"},{default:s(()=>n[5]||(n[5]=[e("命令行工具")])),_:1})])]),t("tr",null,[n[8]||(n[8]=t("td",null,"Auth",-1)),t("td",null,[a(l,{to:"/zh/security/authentication.html"},{default:s(()=>n[7]||(n[7]=[e("用户认证")])),_:1})])]),t("tr",null,[n[10]||(n[10]=t("td",null,"Cache",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/cache.html"},{default:s(()=>n[9]||(n[9]=[e("缓存系统")])),_:1})])]),t("tr",null,[n[12]||(n[12]=t("td",null,"Config",-1)),t("td",null,[a(l,{to:"/zh/getting-started/configuration.html"},{default:s(()=>n[11]||(n[11]=[e("配置信息")])),_:1})])]),t("tr",null,[n[14]||(n[14]=t("td",null,"Crypt",-1)),t("td",null,[a(l,{to:"/zh/security/encryption.html"},{default:s(()=>n[13]||(n[13]=[e("加密解密")])),_:1})])]),t("tr",null,[n[16]||(n[16]=t("td",null,"Event",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/event.html"},{default:s(()=>n[15]||(n[15]=[e("事件系统")])),_:1})])]),t("tr",null,[n[18]||(n[18]=t("td",null,"Gate",-1)),t("td",null,[a(l,{to:"/zh/security/authorization.html"},{default:s(()=>n[17]||(n[17]=[e("用户授权")])),_:1})])]),t("tr",null,[n[20]||(n[20]=t("td",null,"Grpc",-1)),t("td",null,[a(l,{to:"/zh/the-basics/grpc.html"},{default:s(()=>n[19]||(n[19]=[e("Grpc")])),_:1})])]),t("tr",null,[n[22]||(n[22]=t("td",null,"Hash",-1)),t("td",null,[a(l,{to:"/zh/security/hashing.html"},{default:s(()=>n[21]||(n[21]=[e("哈希")])),_:1})])]),t("tr",null,[n[24]||(n[24]=t("td",null,"Log",-1)),t("td",null,[a(l,{to:"/zh/the-basics/logging.html"},{default:s(()=>n[23]||(n[23]=[e("日志")])),_:1})])]),t("tr",null,[n[26]||(n[26]=t("td",null,"Mail",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/mail.html"},{default:s(()=>n[25]||(n[25]=[e("邮件")])),_:1})])]),t("tr",null,[n[28]||(n[28]=t("td",null,"Orm",-1)),t("td",null,[a(l,{to:"/zh/orm/getting-started.html"},{default:s(()=>n[27]||(n[27]=[e("ORM")])),_:1})])]),t("tr",null,[n[30]||(n[30]=t("td",null,"Queue",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/queues.html"},{default:s(()=>n[29]||(n[29]=[e("队列")])),_:1})])]),t("tr",null,[n[32]||(n[32]=t("td",null,"RateLimiter",-1)),t("td",null,[a(l,{to:"/zh/the-basics/routing.html"},{default:s(()=>n[31]||(n[31]=[e("限流器")])),_:1})])]),t("tr",null,[n[34]||(n[34]=t("td",null,"Route",-1)),t("td",null,[a(l,{to:"/zh/the-basics/routing.html"},{default:s(()=>n[33]||(n[33]=[e("路由")])),_:1})])]),t("tr",null,[n[36]||(n[36]=t("td",null,"Seeder",-1)),t("td",null,[a(l,{to:"/zh/database/seeding.html"},{default:s(()=>n[35]||(n[35]=[e("数据填充")])),_:1})])]),t("tr",null,[n[38]||(n[38]=t("td",null,"Schedule",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/task-scheduling.html"},{default:s(()=>n[37]||(n[37]=[e("任务调度")])),_:1})])]),t("tr",null,[n[40]||(n[40]=t("td",null,"Storage",-1)),t("td",null,[a(l,{to:"/zh/digging-deeper/filesystem.html"},{default:s(()=>n[39]||(n[39]=[e("文件系统")])),_:1})])]),t("tr",null,[n[42]||(n[42]=t("td",null,"Testing",-1)),t("td",null,[a(l,{to:"/zh/testing/getting-started.html"},{default:s(()=>n[41]||(n[41]=[e("测试")])),_:1})])]),t("tr",null,[n[44]||(n[44]=t("td",null,"Validation",-1)),t("td",null,[a(l,{to:"/zh/the-basics/validation.html"},{default:s(()=>n[43]||(n[43]=[e("表单验证")])),_:1})])])])]),a(d)])}const b=i(f,[["render",m],["__file","facades.html.vue"]]),h=JSON.parse('{"path":"/zh/architecture-concepts/facades.html","title":"Facades","lang":"zh-CN","frontmatter":{"description":"Facades 简介 facades 为应用的核心功能提供一个「静态」接口，能够提供更加灵活、更加优雅、易于测试的语法。 Goravel 所有的 facades 都定义在 github.com/goravel/framework/facades 下。我们可以很轻松的使用 facades： facades 工作原理 facades 一般会在各模块 Ser...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/architecture-concepts/facades.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/architecture-concepts/facades.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/architecture-concepts/facades.html"}],["meta",{"property":"og:description","content":"Facades 简介 facades 为应用的核心功能提供一个「静态」接口，能够提供更加灵活、更加优雅、易于测试的语法。 Goravel 所有的 facades 都定义在 github.com/goravel/framework/facades 下。我们可以很轻松的使用 facades： facades 工作原理 facades 一般会在各模块 Ser..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Facades\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"facades 工作原理","slug":"facades-工作原理","link":"#facades-工作原理","children":[]},{"level":2,"title":"facade 类参考","slug":"facade-类参考","link":"#facade-类参考","children":[]}],"git":{},"filePathRelative":"zh/architecture-concepts/facades.md","autoDesc":true}');export{b as comp,h as data};
