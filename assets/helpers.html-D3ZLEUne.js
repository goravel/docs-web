import{_ as c,c as i,b as a,e as s,f as e,a as u,r as p,o as r,d as o}from"./app-BTZMJqSL.js";const d={},m={class:"table-of-contents"};function k(b,n){const t=p("router-link"),l=p("CommentService");return r(),i("div",null,[n[81]||(n[81]=a("h1",{id:"辅助函数",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#辅助函数"},[a("span",null,"辅助函数")])],-1)),a("nav",m,[a("ul",null,[a("li",null,[s(t,{to:"#可用方法"},{default:e(()=>n[0]||(n[0]=[o("可用方法")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#路径"},{default:e(()=>n[1]||(n[1]=[o("路径")])),_:1})]),a("li",null,[s(t,{to:"#时间"},{default:e(()=>n[2]||(n[2]=[o("时间")])),_:1})]),a("li",null,[s(t,{to:"#调试"},{default:e(()=>n[3]||(n[3]=[o("调试")])),_:1})]),a("li",null,[s(t,{to:"#maps"},{default:e(()=>n[4]||(n[4]=[o("Maps")])),_:1})]),a("li",null,[s(t,{to:"#转换"},{default:e(()=>n[5]||(n[5]=[o("转换")])),_:1})]),a("li",null,[s(t,{to:"#集合"},{default:e(()=>n[6]||(n[6]=[o("集合")])),_:1})])])]),a("li",null,[s(t,{to:"#路径-1"},{default:e(()=>n[7]||(n[7]=[o("路径")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#path-app"},{default:e(()=>n[8]||(n[8]=[o("path.App()")])),_:1})]),a("li",null,[s(t,{to:"#path-base"},{default:e(()=>n[9]||(n[9]=[o("path.Base()")])),_:1})]),a("li",null,[s(t,{to:"#path-config"},{default:e(()=>n[10]||(n[10]=[o("path.Config()")])),_:1})]),a("li",null,[s(t,{to:"#path-database"},{default:e(()=>n[11]||(n[11]=[o("path.Database()")])),_:1})]),a("li",null,[s(t,{to:"#path-storage"},{default:e(()=>n[12]||(n[12]=[o("path.Storage()")])),_:1})]),a("li",null,[s(t,{to:"#path-public"},{default:e(()=>n[13]||(n[13]=[o("path.Public()")])),_:1})]),a("li",null,[s(t,{to:"#path-lang"},{default:e(()=>n[14]||(n[14]=[o("path.Lang()")])),_:1})]),a("li",null,[s(t,{to:"#path-resource"},{default:e(()=>n[15]||(n[15]=[o("path.Resource()")])),_:1})])])]),a("li",null,[s(t,{to:"#时间-1"},{default:e(()=>n[16]||(n[16]=[o("时间")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#carbon-now"},{default:e(()=>n[17]||(n[17]=[o("carbon.Now()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-settimezone"},{default:e(()=>n[18]||(n[18]=[o("carbon.SetTimezone()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-setlocale"},{default:e(()=>n[19]||(n[19]=[o("carbon.SetLocale()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-settestnow"},{default:e(()=>n[20]||(n[20]=[o("carbon.SetTestNow()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-cleantestnow"},{default:e(()=>n[21]||(n[21]=[o("carbon.CleanTestNow()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-istestnow"},{default:e(()=>n[22]||(n[22]=[o("carbon.IsTestNow()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-parse"},{default:e(()=>n[23]||(n[23]=[o("carbon.Parse()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-parsebylayout"},{default:e(()=>n[24]||(n[24]=[o("carbon.ParseByLayout()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-parsebyformat"},{default:e(()=>n[25]||(n[25]=[o("carbon.ParseByFormat()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimestamp"},{default:e(()=>n[26]||(n[26]=[o("carbon.FromTimestamp()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimestampmilli"},{default:e(()=>n[27]||(n[27]=[o("carbon.FromTimestampMilli()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimestampmicro"},{default:e(()=>n[28]||(n[28]=[o("carbon.FromTimestampMicro()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimestampnano"},{default:e(()=>n[29]||(n[29]=[o("carbon.FromTimestampNano()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatetime"},{default:e(()=>n[30]||(n[30]=[o("carbon.FromDateTime()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatetimemilli"},{default:e(()=>n[31]||(n[31]=[o("carbon.FromDateTimeMilli()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatetimemicro"},{default:e(()=>n[32]||(n[32]=[o("carbon.FromDateTimeMicro()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatetimenano"},{default:e(()=>n[33]||(n[33]=[o("carbon.FromDateTimeNano()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdate"},{default:e(()=>n[34]||(n[34]=[o("carbon.FromDate()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatemilli"},{default:e(()=>n[35]||(n[35]=[o("carbon.FromDateMilli()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatemicro"},{default:e(()=>n[36]||(n[36]=[o("carbon.FromDateMicro()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromdatenano"},{default:e(()=>n[37]||(n[37]=[o("carbon.FromDateNano()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtime"},{default:e(()=>n[38]||(n[38]=[o("carbon.FromTime()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimemilli"},{default:e(()=>n[39]||(n[39]=[o("carbon.FromTimeMilli()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimemicro"},{default:e(()=>n[40]||(n[40]=[o("carbon.FromTimeMicro()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromtimenano"},{default:e(()=>n[41]||(n[41]=[o("carbon.FromTimeNano()")])),_:1})]),a("li",null,[s(t,{to:"#carbon-fromstdtime"},{default:e(()=>n[42]||(n[42]=[o("carbon.FromStdTime()")])),_:1})])])]),a("li",null,[s(t,{to:"#debug"},{default:e(()=>n[43]||(n[43]=[o("Debug")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#debug-dump"},{default:e(()=>n[44]||(n[44]=[o("debug.Dump()")])),_:1})]),a("li",null,[s(t,{to:"#debug-fdump"},{default:e(()=>n[45]||(n[45]=[o("debug.FDump()")])),_:1})]),a("li",null,[s(t,{to:"#debug-sdump"},{default:e(()=>n[46]||(n[46]=[o("debug.SDump()")])),_:1})])])]),a("li",null,[s(t,{to:"#maps-1"},{default:e(()=>n[47]||(n[47]=[o("Maps")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#maps-add"},{default:e(()=>n[48]||(n[48]=[o("maps.Add()")])),_:1})]),a("li",null,[s(t,{to:"#maps-exists"},{default:e(()=>n[49]||(n[49]=[o("maps.Exists()")])),_:1})]),a("li",null,[s(t,{to:"#maps-forget"},{default:e(()=>n[50]||(n[50]=[o("maps.Forget()")])),_:1})]),a("li",null,[s(t,{to:"#maps-get"},{default:e(()=>n[51]||(n[51]=[o("maps.Get()")])),_:1})]),a("li",null,[s(t,{to:"#maps-has"},{default:e(()=>n[52]||(n[52]=[o("maps.Has()")])),_:1})]),a("li",null,[s(t,{to:"#maps-hasany"},{default:e(()=>n[53]||(n[53]=[o("maps.HasAny()")])),_:1})]),a("li",null,[s(t,{to:"#maps-only"},{default:e(()=>n[54]||(n[54]=[o("maps.Only()")])),_:1})]),a("li",null,[s(t,{to:"#maps-pull"},{default:e(()=>n[55]||(n[55]=[o("maps.Pull()")])),_:1})]),a("li",null,[s(t,{to:"#maps-set"},{default:e(()=>n[56]||(n[56]=[o("maps.Set()")])),_:1})]),a("li",null,[s(t,{to:"#maps-where"},{default:e(()=>n[57]||(n[57]=[o("maps.Where()")])),_:1})])])]),a("li",null,[s(t,{to:"#convert"},{default:e(()=>n[58]||(n[58]=[o("Convert")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#convert-tap"},{default:e(()=>n[59]||(n[59]=[o("convert.Tap()")])),_:1})]),a("li",null,[s(t,{to:"#convert-transform"},{default:e(()=>n[60]||(n[60]=[o("convert.Transform()")])),_:1})]),a("li",null,[s(t,{to:"#convert-with"},{default:e(()=>n[61]||(n[61]=[o("convert.With()")])),_:1})]),a("li",null,[s(t,{to:"#convert-default"},{default:e(()=>n[62]||(n[62]=[o("convert.Default()")])),_:1})]),a("li",null,[s(t,{to:"#convert-pointer"},{default:e(()=>n[63]||(n[63]=[o("convert.Pointer()")])),_:1})])])]),a("li",null,[s(t,{to:"#collect"},{default:e(()=>n[64]||(n[64]=[o("Collect")])),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#collect-count"},{default:e(()=>n[65]||(n[65]=[o("collect.Count()")])),_:1})]),a("li",null,[s(t,{to:"#collect-countby"},{default:e(()=>n[66]||(n[66]=[o("collect.CountBy()")])),_:1})]),a("li",null,[s(t,{to:"#collect-each"},{default:e(()=>n[67]||(n[67]=[o("collect.Each()")])),_:1})]),a("li",null,[s(t,{to:"#collect-filter"},{default:e(()=>n[68]||(n[68]=[o("collect.Filter()")])),_:1})]),a("li",null,[s(t,{to:"#collect-groupby"},{default:e(()=>n[69]||(n[69]=[o("collect.GroupBy()")])),_:1})]),a("li",null,[s(t,{to:"#collect-keys"},{default:e(()=>n[70]||(n[70]=[o("collect.Keys()")])),_:1})]),a("li",null,[s(t,{to:"#collect-map"},{default:e(()=>n[71]||(n[71]=[o("collect.Map()")])),_:1})]),a("li",null,[s(t,{to:"#collect-max"},{default:e(()=>n[72]||(n[72]=[o("collect.Max()")])),_:1})]),a("li",null,[s(t,{to:"#collect-merge"},{default:e(()=>n[73]||(n[73]=[o("collect.Merge()")])),_:1})]),a("li",null,[s(t,{to:"#collect-min"},{default:e(()=>n[74]||(n[74]=[o("collect.Min()")])),_:1})]),a("li",null,[s(t,{to:"#collect-reverse"},{default:e(()=>n[75]||(n[75]=[o("collect.Reverse()")])),_:1})]),a("li",null,[s(t,{to:"#collect-shuffle"},{default:e(()=>n[76]||(n[76]=[o("collect.Shuffle()")])),_:1})]),a("li",null,[s(t,{to:"#collect-split"},{default:e(()=>n[77]||(n[77]=[o("collect.Split()")])),_:1})]),a("li",null,[s(t,{to:"#collect-sum"},{default:e(()=>n[78]||(n[78]=[o("collect.Sum()")])),_:1})]),a("li",null,[s(t,{to:"#collect-unique"},{default:e(()=>n[79]||(n[79]=[o("collect.Unique()")])),_:1})]),a("li",null,[s(t,{to:"#collect-values"},{default:e(()=>n[80]||(n[80]=[o("collect.Values()")])),_:1})])])])])]),n[82]||(n[82]=u(`<h2 id="可用方法" tabindex="-1"><a class="header-anchor" href="#可用方法"><span>可用方法</span></a></h2><h3 id="路径" tabindex="-1"><a class="header-anchor" href="#路径"><span>路径</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#path-app">path.App()</a></td><td><a href="#path-base">path.Base()</a></td><td><a href="#path-config">path.Config()</a></td></tr><tr><td><a href="#path-database">path.Database()</a></td><td><a href="#path-storage">path.Storage()</a></td><td><a href="#path-public">path.Public()</a></td></tr><tr><td><a href="#path-resource">path.Resource()</a></td><td></td><td></td></tr></tbody></table><h3 id="时间" tabindex="-1"><a class="header-anchor" href="#时间"><span>时间</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#carbon-now">carbon.Now()</a></td><td><a href="#carbon-settimezone">carbon.SetTimezone()</a></td><td><a href="#carbon-setlocale">carbon.SetLocale()</a></td></tr><tr><td><a href="#carbon-settestnow">carbon.SetTestNow()</a></td><td><a href="#carbon-cleartestnow">carbon.ClearTestNow()</a></td><td><a href="#carbon-istestnow">carbon.IsTestNow()</a></td></tr><tr><td><a href="#carbon-parse">carbon.Parse()</a></td><td><a href="#carbon-parsebylayout">carbon.ParseByLayout()</a></td><td><a href="#carbon-parsebyformat">carbon.ParseByFormat()</a></td></tr><tr><td><a href="#carbon-fromtimestamp">carbon.FromTimestamp()</a></td><td><a href="#carbon-fromtimestampmilli">carbon.FromTimestampMilli()</a></td><td><a href="#carbon-fromtimestampmicro">carbon.FromTimestampMicro()</a></td></tr><tr><td><a href="#carbon-fromtimestampnano">carbon.FromTimestampNano()</a></td><td><a href="#carbon-fromdatetime">carbon.FromDateTime()</a></td><td><a href="#carbon-fromdatetimemilli">carbon.FromDateTimeMilli()</a></td></tr><tr><td><a href="#carbon-fromdatetimemicro">carbon.FromDateTimeMicro()</a></td><td><a href="#carbon-fromdatetimenano">carbon.FromDateTimeNano()</a></td><td><a href="#carbon-fromdate">carbon.FromDate()</a></td></tr><tr><td><a href="#carbon-fromdatemilli">carbon.FromDateMilli()</a></td><td><a href="#carbon-fromdatemicro">carbon.FromDateMicro()</a></td><td><a href="#carbon-fromdatenano">carbon.FromDateNano()</a></td></tr><tr><td><a href="#carbon-fromtime">carbon.FromTime()</a></td><td><a href="#carbon-fromtimemilli">carbon.FromTimeMilli()</a></td><td><a href="#carbon-fromtimemicro">carbon.FromTimeMicro()</a></td></tr><tr><td><a href="#carbon-fromtimenano">carbon.FromTimeNano()</a></td><td><a href="#carbon-fromstdtime">carbon.FromStdTime()</a></td><td></td></tr></tbody></table><h3 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#debug-dump">debug.Dump()</a></td><td><a href="#debug-sdump">debug.SDump()</a></td><td><a href="#debug-fdump">debug.FDump()</a></td></tr></tbody></table><h3 id="maps" tabindex="-1"><a class="header-anchor" href="#maps"><span>Maps</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#maps-add">maps.Add()</a></td><td><a href="#maps-exists">maps.Exists()</a></td><td><a href="#maps-forget">maps.Forget()</a></td></tr><tr><td><a href="#maps-get">maps.Get()</a></td><td><a href="#maps-has">maps.Has()</a></td><td><a href="#maps-hasany">maps.HasAny()</a></td></tr><tr><td><a href="#maps-only">maps.Only()</a></td><td><a href="#maps-pull">maps.Pull()</a></td><td><a href="#maps-set">maps.Set()</a></td></tr><tr><td><a href="#maps-where">maps.Where()</a></td><td></td><td></td></tr></tbody></table><h3 id="转换" tabindex="-1"><a class="header-anchor" href="#转换"><span>转换</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#convert-tap">convert.Tap()</a></td><td><a href="#convert-with">convert.With()</a></td><td><a href="#convert-transform">convert.Transform()</a></td></tr><tr><td><a href="#convert-default">convert.Default()</a></td><td><a href="#convert-pointer">convert.Pointer()</a></td><td></td></tr></tbody></table><h3 id="集合" tabindex="-1"><a class="header-anchor" href="#集合"><span>集合</span></a></h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#collect-count">collect.Count()</a></td><td><a href="#collect-countby">collect.CountBy()</a></td><td><a href="#collect-each">collect.Each()</a></td></tr><tr><td><a href="#collect-filter">collect.Filter()</a></td><td><a href="#collect-groupby">collect.GroupBy()</a></td><td><a href="#collect-keys">collect.Keys()</a></td></tr><tr><td><a href="#collect-map">collect.Map()</a></td><td><a href="#collect-max">collect.Max()</a></td><td><a href="#collect-merge">collect.Merge()</a></td></tr><tr><td><a href="#collect-min">collect.Min()</a></td><td><a href="#collect-reverse">collect.Reverse()</a></td><td><a href="#collect-shuffle">collect.Shuffle()</a></td></tr><tr><td><a href="#collect-split">collect.Split()</a></td><td><a href="#collect-sum">collect.Sum()</a></td><td><a href="#collect-unique">collect.Unique()</a></td></tr><tr><td><a href="#collect-values">collect.Values()</a></td><td></td><td></td></tr></tbody></table><h2 id="路径-1" tabindex="-1"><a class="header-anchor" href="#路径-1"><span>路径</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/path&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="path-app" tabindex="-1"><a class="header-anchor" href="#path-app"><span><code>path.App()</code></span></a></h3><p><code>path.App()</code> 函数返回 app 目录的绝对路径。你也可以用来生成应用目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">App</span><span class="token punctuation">(</span><span class="token string">&quot;http/controllers/controller.go&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-base" tabindex="-1"><a class="header-anchor" href="#path-base"><span><code>path.Base()</code></span></a></h3><p><code>path.Base()</code> 函数返回项目根目录的绝对路径。你也可以用来生成项目根目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Base</span><span class="token punctuation">(</span><span class="token string">&quot;vendor/bin&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-config" tabindex="-1"><a class="header-anchor" href="#path-config"><span><code>path.Config()</code></span></a></h3><p><code>path.Config()</code> 函数返回项目配置目录 (config) 的绝对路径。你也可以用来生成应用配置目录中的特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token string">&quot;app.go&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-database" tabindex="-1"><a class="header-anchor" href="#path-database"><span><code>path.Database()</code></span></a></h3><p><code>path.Database()</code> 函数返回 <code>database</code> 目录的绝对路径。你也可以用来生成数据库目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Database</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Database</span><span class="token punctuation">(</span><span class="token string">&quot;factories/user_factory.go&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-storage" tabindex="-1"><a class="header-anchor" href="#path-storage"><span><code>path.Storage()</code></span></a></h3><p><code>path.Storage()</code> 函数返回 <code>storage</code> 目录的绝对路径。你也可以用来生成位于资源路径中的特定路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Storage</span><span class="token punctuation">(</span><span class="token string">&quot;app/file.txt&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-public" tabindex="-1"><a class="header-anchor" href="#path-public"><span><code>path.Public()</code></span></a></h3><p><code>path.Public()</code> 函数返回 <code>public</code> 目录的绝对路径。你也可以用来生成 <code>public</code> 目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Public</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Public</span><span class="token punctuation">(</span><span class="token string">&quot;css/app.css&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-lang" tabindex="-1"><a class="header-anchor" href="#path-lang"><span><code>path.Lang()</code></span></a></h3><p><code>path.Lang()</code> 函数返回 <code>lang</code> 目录的绝对路径。你也可以用来生成 <code>lang</code> 目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Lang</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Lang</span><span class="token punctuation">(</span><span class="token string">&quot;en.json&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path-resource" tabindex="-1"><a class="header-anchor" href="#path-resource"><span><code>path.Resource()</code></span></a></h3><p><code>path.Resource()</code> 函数返回 <code>resource</code> 目录的绝对路径。你也可以用来生成 <code>resource</code> 目录下特定文件的路径：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Resource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">path <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Resource</span><span class="token punctuation">(</span><span class="token string">&quot;css/app.css&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间-1" tabindex="-1"><a class="header-anchor" href="#时间-1"><span>时间</span></a></h2><p>Goravel 的 <code>carbon</code> 是 <a href="https://github.com/dromara/carbon" target="_blank" rel="noopener noreferrer">dromara/carbon</a> 的一个扩展，详细用法请参考其官方文档。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/carbon&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-now" tabindex="-1"><a class="header-anchor" href="#carbon-now"><span><code>carbon.Now()</code></span></a></h3><p>获取当前时间：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-settimezone" tabindex="-1"><a class="header-anchor" href="#carbon-settimezone"><span><code>carbon.SetTimezone()</code></span></a></h3><p>设置时区：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">SetTimezone</span><span class="token punctuation">(</span>carbon<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-setlocale" tabindex="-1"><a class="header-anchor" href="#carbon-setlocale"><span><code>carbon.SetLocale()</code></span></a></h3><p>设置语言环境，访问 <a href="https://github.com/dromara/carbon/tree/master/lang" target="_blank" rel="noopener noreferrer">语言列表</a> 查看所有支持的语言：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">SetLocale</span><span class="token punctuation">(</span><span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-settestnow" tabindex="-1"><a class="header-anchor" href="#carbon-settestnow"><span><code>carbon.SetTestNow()</code></span></a></h3><p>将系统时间设置为一个测试值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">SetTestNow</span><span class="token punctuation">(</span>carbon<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-cleantestnow" tabindex="-1"><a class="header-anchor" href="#carbon-cleantestnow"><span><code>carbon.CleanTestNow()</code></span></a></h3><p>清除系统时间为正常值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">CleanTestNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-istestnow" tabindex="-1"><a class="header-anchor" href="#carbon-istestnow"><span><code>carbon.IsTestNow()</code></span></a></h3><p>判断系统时间是否为测试值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">IsTestNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-parse" tabindex="-1"><a class="header-anchor" href="#carbon-parse"><span><code>carbon.Parse()</code></span></a></h3><p>将字符串格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-08-05 13:14:15&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-parsebylayout" tabindex="-1"><a class="header-anchor" href="#carbon-parsebylayout"><span><code>carbon.ParseByLayout()</code></span></a></h3><p>通过指定布局模板解析 <code>Carbon</code> 对象:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">ParseByLayout</span><span class="token punctuation">(</span><span class="token string">&quot;2020-08-05 13:14:15&quot;</span><span class="token punctuation">,</span> carbon<span class="token punctuation">.</span>DateTimeLayout<span class="token punctuation">)</span></span>
<span class="line">carbon<span class="token punctuation">.</span><span class="token function">ParseByFormat</span><span class="token punctuation">(</span><span class="token string">&quot;2020|08|05 13|14|15&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;2006|01|02 15|04|05&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2006|1|2 3|4|5&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carbon-parsebyformat" tabindex="-1"><a class="header-anchor" href="#carbon-parsebyformat"><span><code>carbon.ParseByFormat()</code></span></a></h3><p>通过指定格式模板解析 <code>Carbon</code> 对象:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">ParseByFormat</span><span class="token punctuation">(</span><span class="token string">&quot;2020-08-05 13:14:15&quot;</span><span class="token punctuation">,</span> carbon<span class="token punctuation">.</span>DateTimeFormat<span class="token punctuation">)</span></span>
<span class="line">carbon<span class="token punctuation">.</span><span class="token function">ParseByFormat</span><span class="token punctuation">(</span><span class="token string">&quot;2020|08|05 13|14|15&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Y|m|d H|i|s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;y|m|d h|i|s&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carbon-fromtimestamp" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimestamp"><span><code>carbon.FromTimestamp()</code></span></a></h3><p>将秒级时间戳格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimestamp</span><span class="token punctuation">(</span><span class="token number">1649735755</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtimestampmilli" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimestampmilli"><span><code>carbon.FromTimestampMilli()</code></span></a></h3><p>将毫秒级时间戳格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimestampMilli</span><span class="token punctuation">(</span><span class="token number">1649735755999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtimestampmicro" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimestampmicro"><span><code>carbon.FromTimestampMicro()</code></span></a></h3><p>将微秒级时间戳格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimestampMicro</span><span class="token punctuation">(</span><span class="token number">1649735755999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtimestampnano" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimestampnano"><span><code>carbon.FromTimestampNano()</code></span></a></h3><p>将纳秒级时间戳格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimestampNano</span><span class="token punctuation">(</span><span class="token number">1649735755999999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatetime" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatetime"><span><code>carbon.FromDateTime()</code></span></a></h3><p>将年、月、日、时、分、秒、格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateTime</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatetimemilli" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatetimemilli"><span><code>carbon.FromDateTimeMilli()</code></span></a></h3><p>将年、月、日、时、分、秒、毫秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateTimeMilli</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatetimemicro" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatetimemicro"><span><code>carbon.FromDateTimeMicro()</code></span></a></h3><p>将年、月、日、时、分、秒、微妙格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateTimeMicro</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatetimenano" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatetimenano"><span><code>carbon.FromDateTimeNano()</code></span></a></h3><p>将年、月、日、时、分、秒、纳妙格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateTimeNano</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">999999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdate" tabindex="-1"><a class="header-anchor" href="#carbon-fromdate"><span><code>carbon.FromDate()</code></span></a></h3><p>将年、月、日格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDate</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatemilli" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatemilli"><span><code>carbon.FromDateMilli()</code></span></a></h3><p>将年、月、日、毫秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateMilli</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatemicro" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatemicro"><span><code>carbon.FromDateMicro()</code></span></a></h3><p>将年、月、日、微秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateMicro</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromdatenano" tabindex="-1"><a class="header-anchor" href="#carbon-fromdatenano"><span><code>carbon.FromDateNano()</code></span></a></h3><p>将年、月、日、纳秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromDateNano</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">999999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtime" tabindex="-1"><a class="header-anchor" href="#carbon-fromtime"><span><code>carbon.FromTime()</code></span></a></h3><p>将时、分、秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTime</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtimemilli" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimemilli"><span><code>carbon.FromTimeMilli()</code></span></a></h3><p>将时、分、秒、毫秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimeMilli</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtimemicro" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimemicro"><span><code>carbon.FromTimeMicro()</code></span></a></h3><p>将时、分、秒、微秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimeMicro</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromtimenano" tabindex="-1"><a class="header-anchor" href="#carbon-fromtimenano"><span><code>carbon.FromTimeNano()</code></span></a></h3><p>将时、分、秒、纳秒格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromTimeNano</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">999999999</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="carbon-fromstdtime" tabindex="-1"><a class="header-anchor" href="#carbon-fromstdtime"><span><code>carbon.FromStdTime()</code></span></a></h3><p>将 <code>time.Time</code> 格式化为 <code>Carbon</code> 对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">carbon<span class="token punctuation">.</span><span class="token function">FromStdTime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/debug&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="debug-dump" tabindex="-1"><a class="header-anchor" href="#debug-dump"><span><code>debug.Dump()</code></span></a></h3><p><code>debug.Dump()</code> 可以打印任意对象：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">debug<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>myVar1<span class="token punctuation">,</span> myVar2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="debug-fdump" tabindex="-1"><a class="header-anchor" href="#debug-fdump"><span><code>debug.FDump()</code></span></a></h3><p><code>debug.FDump()</code> 可以打印任意对象输出到一个 <code>io.Writer</code>：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">debug<span class="token punctuation">.</span><span class="token function">FDump</span><span class="token punctuation">(</span>someWriter<span class="token punctuation">,</span> myVar1<span class="token punctuation">,</span> myVar2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="debug-sdump" tabindex="-1"><a class="header-anchor" href="#debug-sdump"><span><code>debug.SDump()</code></span></a></h3><p><code>debug.SDump()</code> 可以将打印输出至字符串：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">debug<span class="token punctuation">.</span><span class="token function">SDump</span><span class="token punctuation">(</span>myVar1<span class="token punctuation">,</span> myVar2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="maps-1" tabindex="-1"><a class="header-anchor" href="#maps-1"><span>Maps</span></a></h2><h3 id="maps-add" tabindex="-1"><a class="header-anchor" href="#maps-add"><span><code>maps.Add()</code></span></a></h3><p><code>maps.Add()</code> 方法用于向给定的 map 中添加不存在的键值对：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Krishan&quot;</span><span class="token punctuation">}</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]any{&quot;name&quot;: &quot;Krishan&quot;, &quot;age&quot;: 22}</span></span>
<span class="line"></span>
<span class="line">mp2 <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mp2<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bowen&quot;</span><span class="token punctuation">)</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>mp2<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Krishan&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]string{&quot;name&quot;: &quot;Bowen&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-exists" tabindex="-1"><a class="header-anchor" href="#maps-exists"><span><code>maps.Exists()</code></span></a></h3><p><code>maps.Exists()</code> 函数用于判断给定的键是否存在于提供的 map 中：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Krishan&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-forget" tabindex="-1"><a class="header-anchor" href="#maps-forget"><span><code>maps.Forget()</code></span></a></h3><p><code>maps.Forget()</code> 函数用于从提供的 map 中移除给定的键：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Krishan&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Forget</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]string{}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-get" tabindex="-1"><a class="header-anchor" href="#maps-get"><span><code>maps.Get()</code></span></a></h3><p><code>maps.Get()</code> 函数从提供的 map 中检索给定键的值。如果键不存在，则返回默认值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bowen&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Krishan&quot;</span><span class="token punctuation">)</span> <span class="token comment">// Bowen</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span> <span class="token comment">// 22</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-has" tabindex="-1"><a class="header-anchor" href="#maps-has"><span><code>maps.Has()</code></span></a></h3><p><code>maps.Has()</code> 函数用于判断给定的键是否存在于提供的 map 中：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-hasany" tabindex="-1"><a class="header-anchor" href="#maps-hasany"><span><code>maps.HasAny()</code></span></a></h3><p><code>maps.HasAny()</code> 函数用于判断给定的任意键是否存在于提供的 map 中：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">HasAny</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">HasAny</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-only" tabindex="-1"><a class="header-anchor" href="#maps-only"><span><code>maps.Only()</code></span></a></h3><p><code>maps.Only()</code> 函数从提供的 map 中检索给定的键：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Only</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]any{&quot;name&quot;: &quot;Goravel&quot;}</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Only</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]any{&quot;name&quot;: &quot;Goravel&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-pull" tabindex="-1"><a class="header-anchor" href="#maps-pull"><span><code>maps.Pull()</code></span></a></h3><p><code>maps.Pull()</code> 函数从提供的 map 中检索并移除给定的键：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Pull</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]any{&quot;language&quot;: &quot;Go&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>maps.Pull()</code> 可以设置默认值在第三个参数，如果键不存在，则返回默认值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Pull</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]any{&quot;name&quot;: &quot;Goravel&quot;, &quot;language&quot;: &quot;Go&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-set" tabindex="-1"><a class="header-anchor" href="#maps-set"><span><code>maps.Set()</code></span></a></h3><p><code>maps.Set()</code> 函数用于在提供的 map 中设置给定的键和值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]any{&quot;name&quot;: &quot;Goravel&quot;, &quot;language&quot;: &quot;Go&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maps-where" tabindex="-1"><a class="header-anchor" href="#maps-where"><span><code>maps.Where()</code></span></a></h3><p><code>maps.Where()</code> 函数使用给定的回调函数过滤提供的 map：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span></span>
<span class="line">maps<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> value <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> key <span class="token operator">==</span> <span class="token string">&quot;name&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]string{&quot;name&quot;: &quot;Goravel&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="convert" tabindex="-1"><a class="header-anchor" href="#convert"><span>Convert</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/convert&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="convert-tap" tabindex="-1"><a class="header-anchor" href="#convert-tap"><span><code>convert.Tap()</code></span></a></h3><p><code>convert.Tap()</code> 函数将给定的值传递给提供的回调函数，并返回该值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">convert<span class="token punctuation">.</span><span class="token function">Tap</span><span class="token punctuation">(</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>value <span class="token operator">+</span> <span class="token string">&quot; Framework&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// Goravel</span></span>
<span class="line"></span>
<span class="line">mp <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">}</span></span>
<span class="line">convert<span class="token punctuation">.</span><span class="token function">Tap</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mp<span class="token punctuation">[</span><span class="token string">&quot;language&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Go&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]string{&quot;name&quot;: &quot;Goravel&quot;, &quot;language&quot;: &quot;Go&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="convert-transform" tabindex="-1"><a class="header-anchor" href="#convert-transform"><span><code>convert.Transform()</code></span></a></h3><p><code>convert.Transform()</code> 函数使用提供的回调函数转换给定的值，并返回结果：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">convert<span class="token punctuation">.</span><span class="token function">Transform</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> strconv<span class="token punctuation">.</span>Itoa<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// &quot;1&quot;</span></span>
<span class="line"></span>
<span class="line">convert<span class="token punctuation">.</span><span class="token function">Transform</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>foo <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token operator">&amp;</span>foo<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> s<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// &amp;foo{Name: &quot;foo&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="convert-with" tabindex="-1"><a class="header-anchor" href="#convert-with"><span><code>convert.With()</code></span></a></h3><p><code>convert.With()</code> 函数使用提供的值执行给定的回调函数，并返回回调函数的结果：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">convert<span class="token punctuation">.</span><span class="token function">With</span><span class="token punctuation">(</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token string">&quot; Framework&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// Goravel Framework</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="convert-default" tabindex="-1"><a class="header-anchor" href="#convert-default"><span><code>convert.Default()</code></span></a></h3><p><code>convert.Default()</code> 方法返回第一个非零值。如果所有值都为零，则返回零值。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">convert<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span> <span class="token comment">// foo</span></span>
<span class="line"></span>
<span class="line">convert<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span> <span class="token comment">// bar</span></span>
<span class="line"></span>
<span class="line">convert<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="convert-pointer" tabindex="-1"><a class="header-anchor" href="#convert-pointer"><span><code>convert.Pointer()</code></span></a></h3><p><code>convert.Pointer()</code> 函数返回给定值的指针。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">convert<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span> <span class="token comment">// *string(&quot;foo&quot;)</span></span>
<span class="line"></span>
<span class="line">convert<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// *int(1)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="collect" tabindex="-1"><a class="header-anchor" href="#collect"><span>Collect</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/support/collect&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="collect-count" tabindex="-1"><a class="header-anchor" href="#collect-count"><span><code>collect.Count()</code></span></a></h3><p><code>collect.Count()</code> 函数返回给定集合中的项目数：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="collect-countby" tabindex="-1"><a class="header-anchor" href="#collect-countby"><span><code>collect.CountBy()</code></span></a></h3><p><code>collect.CountBy()</code> 函数统计返回值为 true 的出现次数：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">CountBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-each" tabindex="-1"><a class="header-anchor" href="#collect-each"><span><code>collect.Each()</code></span></a></h3><p><code>collect.Each()</code> 函数迭代给定集合中的项目，并将每个项目传递给给定的回调函数：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token builtin">string</span><span class="token punctuation">,</span> index <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 1 Goravel</span></span>
<span class="line"><span class="token comment">// 2 Framework</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-filter" tabindex="-1"><a class="header-anchor" href="#collect-filter"><span><code>collect.Filter()</code></span></a></h3><p><code>collect.Filter()</code> 函数使用给定的回调函数过滤集合中的项目：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []string{&quot;Goravel&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-groupby" tabindex="-1"><a class="header-anchor" href="#collect-groupby"><span><code>collect.GroupBy()</code></span></a></h3><p><code>collect.GroupBy()</code> 函数根据给定回调函数的结果对集合中的项目进行分组：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// use example of complex map slice (use different example)</span></span>
<span class="line">collect<span class="token punctuation">.</span><span class="token function">GroupBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Rohan&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bowen&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Krishan&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> value<span class="token punctuation">[</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string][]map[string]string{</span></span>
<span class="line"><span class="token comment">//     &quot;1&quot;: []map[string]string{{&quot;class&quot;: &quot;1&quot;, &quot;Name&quot;: &quot;Rohan&quot;}},</span></span>
<span class="line"><span class="token comment">//     &quot;2&quot;: []map[string]string{{&quot;class&quot;: &quot;2&quot;, &quot;Name&quot;: &quot;Bowen&quot;}, {&quot;class&quot;: &quot;2&quot;, &quot;Name&quot;: &quot;Krishan&quot;}},</span></span>
<span class="line"><span class="token comment">// }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-keys" tabindex="-1"><a class="header-anchor" href="#collect-keys"><span><code>collect.Keys()</code></span></a></h3><p><code>collect.Keys()</code> 函数返回集合中所有项目的键：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Keys</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []string{&quot;name&quot;, &quot;language&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-map" tabindex="-1"><a class="header-anchor" href="#collect-map"><span><code>collect.Map()</code></span></a></h3><p><code>collect.Map()</code> 函数使用给定的迭代器将一种类型的集合转换为另一种类型：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>value <span class="token builtin">string</span><span class="token punctuation">,</span>  <span class="token boolean">_</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> strings<span class="token punctuation">.</span><span class="token function">ToUpper</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []string{&quot;GORAVEL&quot;, &quot;FRAMEWORK&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-max" tabindex="-1"><a class="header-anchor" href="#collect-max"><span><code>collect.Max()</code></span></a></h3><p><code>collect.Max()</code> 函数返回给定集合的最大值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Max</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="collect-merge" tabindex="-1"><a class="header-anchor" href="#collect-merge"><span><code>collect.Merge()</code></span></a></h3><p><code>collect.Merge()</code> 函数将给定的 map 合并为一个 map：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Merge</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]string{&quot;name&quot;: &quot;Goravel&quot;, &quot;language&quot;: &quot;Go&quot;}</span></span>
<span class="line"></span>
<span class="line">collect<span class="token punctuation">.</span><span class="token function">Merge</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// map[string]string{&quot;name&quot;: &quot;Framework&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-min" tabindex="-1"><a class="header-anchor" href="#collect-min"><span><code>collect.Min()</code></span></a></h3><p><code>collect.Min()</code> 函数返回给定集合的最小值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Min</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="collect-reverse" tabindex="-1"><a class="header-anchor" href="#collect-reverse"><span><code>collect.Reverse()</code></span></a></h3><p><code>collect.Reverse()</code> 函数反转集合中的项目：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Reverse</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []string{&quot;Framework&quot;, &quot;Goravel&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-shuffle" tabindex="-1"><a class="header-anchor" href="#collect-shuffle"><span><code>collect.Shuffle()</code></span></a></h3><p><code>collect.Shuffle()</code> 函数随机打乱集合中的项目：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Shuffle</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []int{3, 1, 5, 2, 4}(example)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-split" tabindex="-1"><a class="header-anchor" href="#collect-split"><span><code>collect.Split()</code></span></a></h3><p><code>collect.Split()</code> 函数将集合分成给定长度的组。如果集合无法均匀分割，则最后一个块将包含剩余的项目：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// [][]int{{1, 2}, {3, 4}, {5}}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-sum" tabindex="-1"><a class="header-anchor" href="#collect-sum"><span><code>collect.Sum()</code></span></a></h3><p><code>collect.Sum()</code> 函数返回集合中所有项目的总和：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 15</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="collect-unique" tabindex="-1"><a class="header-anchor" href="#collect-unique"><span><code>collect.Unique()</code></span></a></h3><p><code>collect.Unique()</code> 函数返回无重复的集合，如果有重复值，则只保留第一次出现的值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Framework&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []string{&quot;Goravel&quot;, &quot;Framework&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collect-values" tabindex="-1"><a class="header-anchor" href="#collect-values"><span><code>collect.Values()</code></span></a></h3><p><code>collect.Values()</code> 函数返回给定集合的所有值：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">collect<span class="token punctuation">.</span><span class="token function">Values</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Go&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// []string{&quot;Goravel&quot;, &quot;Go&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,231)),s(l)])}const h=c(d,[["render",k],["__file","helpers.html.vue"]]),v=JSON.parse('{"path":"/zh/digging-deeper/helpers.html","title":"辅助函数","lang":"zh-CN","frontmatter":{"description":"辅助函数 可用方法 路径 时间 调试 Maps 转换 集合 路径 path.App() path.App() 函数返回 app 目录的绝对路径。你也可以用来生成应用目录下特定文件的路径： path.Base() path.Base() 函数返回项目根目录的绝对路径。你也可以用来生成项目根目录下特定文件的路径： path.Config() path.Co...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/digging-deeper/helpers.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/digging-deeper/helpers.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/digging-deeper/helpers.html"}],["meta",{"property":"og:description","content":"辅助函数 可用方法 路径 时间 调试 Maps 转换 集合 路径 path.App() path.App() 函数返回 app 目录的绝对路径。你也可以用来生成应用目录下特定文件的路径： path.Base() path.Base() 函数返回项目根目录的绝对路径。你也可以用来生成项目根目录下特定文件的路径： path.Config() path.Co..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"辅助函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"可用方法","slug":"可用方法","link":"#可用方法","children":[{"level":3,"title":"路径","slug":"路径","link":"#路径","children":[]},{"level":3,"title":"时间","slug":"时间","link":"#时间","children":[]},{"level":3,"title":"调试","slug":"调试","link":"#调试","children":[]},{"level":3,"title":"Maps","slug":"maps","link":"#maps","children":[]},{"level":3,"title":"转换","slug":"转换","link":"#转换","children":[]},{"level":3,"title":"集合","slug":"集合","link":"#集合","children":[]}]},{"level":2,"title":"路径","slug":"路径-1","link":"#路径-1","children":[{"level":3,"title":"path.App()","slug":"path-app","link":"#path-app","children":[]},{"level":3,"title":"path.Base()","slug":"path-base","link":"#path-base","children":[]},{"level":3,"title":"path.Config()","slug":"path-config","link":"#path-config","children":[]},{"level":3,"title":"path.Database()","slug":"path-database","link":"#path-database","children":[]},{"level":3,"title":"path.Storage()","slug":"path-storage","link":"#path-storage","children":[]},{"level":3,"title":"path.Public()","slug":"path-public","link":"#path-public","children":[]},{"level":3,"title":"path.Lang()","slug":"path-lang","link":"#path-lang","children":[]},{"level":3,"title":"path.Resource()","slug":"path-resource","link":"#path-resource","children":[]}]},{"level":2,"title":"时间","slug":"时间-1","link":"#时间-1","children":[{"level":3,"title":"carbon.Now()","slug":"carbon-now","link":"#carbon-now","children":[]},{"level":3,"title":"carbon.SetTimezone()","slug":"carbon-settimezone","link":"#carbon-settimezone","children":[]},{"level":3,"title":"carbon.SetLocale()","slug":"carbon-setlocale","link":"#carbon-setlocale","children":[]},{"level":3,"title":"carbon.SetTestNow()","slug":"carbon-settestnow","link":"#carbon-settestnow","children":[]},{"level":3,"title":"carbon.CleanTestNow()","slug":"carbon-cleantestnow","link":"#carbon-cleantestnow","children":[]},{"level":3,"title":"carbon.IsTestNow()","slug":"carbon-istestnow","link":"#carbon-istestnow","children":[]},{"level":3,"title":"carbon.Parse()","slug":"carbon-parse","link":"#carbon-parse","children":[]},{"level":3,"title":"carbon.ParseByLayout()","slug":"carbon-parsebylayout","link":"#carbon-parsebylayout","children":[]},{"level":3,"title":"carbon.ParseByFormat()","slug":"carbon-parsebyformat","link":"#carbon-parsebyformat","children":[]},{"level":3,"title":"carbon.FromTimestamp()","slug":"carbon-fromtimestamp","link":"#carbon-fromtimestamp","children":[]},{"level":3,"title":"carbon.FromTimestampMilli()","slug":"carbon-fromtimestampmilli","link":"#carbon-fromtimestampmilli","children":[]},{"level":3,"title":"carbon.FromTimestampMicro()","slug":"carbon-fromtimestampmicro","link":"#carbon-fromtimestampmicro","children":[]},{"level":3,"title":"carbon.FromTimestampNano()","slug":"carbon-fromtimestampnano","link":"#carbon-fromtimestampnano","children":[]},{"level":3,"title":"carbon.FromDateTime()","slug":"carbon-fromdatetime","link":"#carbon-fromdatetime","children":[]},{"level":3,"title":"carbon.FromDateTimeMilli()","slug":"carbon-fromdatetimemilli","link":"#carbon-fromdatetimemilli","children":[]},{"level":3,"title":"carbon.FromDateTimeMicro()","slug":"carbon-fromdatetimemicro","link":"#carbon-fromdatetimemicro","children":[]},{"level":3,"title":"carbon.FromDateTimeNano()","slug":"carbon-fromdatetimenano","link":"#carbon-fromdatetimenano","children":[]},{"level":3,"title":"carbon.FromDate()","slug":"carbon-fromdate","link":"#carbon-fromdate","children":[]},{"level":3,"title":"carbon.FromDateMilli()","slug":"carbon-fromdatemilli","link":"#carbon-fromdatemilli","children":[]},{"level":3,"title":"carbon.FromDateMicro()","slug":"carbon-fromdatemicro","link":"#carbon-fromdatemicro","children":[]},{"level":3,"title":"carbon.FromDateNano()","slug":"carbon-fromdatenano","link":"#carbon-fromdatenano","children":[]},{"level":3,"title":"carbon.FromTime()","slug":"carbon-fromtime","link":"#carbon-fromtime","children":[]},{"level":3,"title":"carbon.FromTimeMilli()","slug":"carbon-fromtimemilli","link":"#carbon-fromtimemilli","children":[]},{"level":3,"title":"carbon.FromTimeMicro()","slug":"carbon-fromtimemicro","link":"#carbon-fromtimemicro","children":[]},{"level":3,"title":"carbon.FromTimeNano()","slug":"carbon-fromtimenano","link":"#carbon-fromtimenano","children":[]},{"level":3,"title":"carbon.FromStdTime()","slug":"carbon-fromstdtime","link":"#carbon-fromstdtime","children":[]}]},{"level":2,"title":"Debug","slug":"debug","link":"#debug","children":[{"level":3,"title":"debug.Dump()","slug":"debug-dump","link":"#debug-dump","children":[]},{"level":3,"title":"debug.FDump()","slug":"debug-fdump","link":"#debug-fdump","children":[]},{"level":3,"title":"debug.SDump()","slug":"debug-sdump","link":"#debug-sdump","children":[]}]},{"level":2,"title":"Maps","slug":"maps-1","link":"#maps-1","children":[{"level":3,"title":"maps.Add()","slug":"maps-add","link":"#maps-add","children":[]},{"level":3,"title":"maps.Exists()","slug":"maps-exists","link":"#maps-exists","children":[]},{"level":3,"title":"maps.Forget()","slug":"maps-forget","link":"#maps-forget","children":[]},{"level":3,"title":"maps.Get()","slug":"maps-get","link":"#maps-get","children":[]},{"level":3,"title":"maps.Has()","slug":"maps-has","link":"#maps-has","children":[]},{"level":3,"title":"maps.HasAny()","slug":"maps-hasany","link":"#maps-hasany","children":[]},{"level":3,"title":"maps.Only()","slug":"maps-only","link":"#maps-only","children":[]},{"level":3,"title":"maps.Pull()","slug":"maps-pull","link":"#maps-pull","children":[]},{"level":3,"title":"maps.Set()","slug":"maps-set","link":"#maps-set","children":[]},{"level":3,"title":"maps.Where()","slug":"maps-where","link":"#maps-where","children":[]}]},{"level":2,"title":"Convert","slug":"convert","link":"#convert","children":[{"level":3,"title":"convert.Tap()","slug":"convert-tap","link":"#convert-tap","children":[]},{"level":3,"title":"convert.Transform()","slug":"convert-transform","link":"#convert-transform","children":[]},{"level":3,"title":"convert.With()","slug":"convert-with","link":"#convert-with","children":[]},{"level":3,"title":"convert.Default()","slug":"convert-default","link":"#convert-default","children":[]},{"level":3,"title":"convert.Pointer()","slug":"convert-pointer","link":"#convert-pointer","children":[]}]},{"level":2,"title":"Collect","slug":"collect","link":"#collect","children":[{"level":3,"title":"collect.Count()","slug":"collect-count","link":"#collect-count","children":[]},{"level":3,"title":"collect.CountBy()","slug":"collect-countby","link":"#collect-countby","children":[]},{"level":3,"title":"collect.Each()","slug":"collect-each","link":"#collect-each","children":[]},{"level":3,"title":"collect.Filter()","slug":"collect-filter","link":"#collect-filter","children":[]},{"level":3,"title":"collect.GroupBy()","slug":"collect-groupby","link":"#collect-groupby","children":[]},{"level":3,"title":"collect.Keys()","slug":"collect-keys","link":"#collect-keys","children":[]},{"level":3,"title":"collect.Map()","slug":"collect-map","link":"#collect-map","children":[]},{"level":3,"title":"collect.Max()","slug":"collect-max","link":"#collect-max","children":[]},{"level":3,"title":"collect.Merge()","slug":"collect-merge","link":"#collect-merge","children":[]},{"level":3,"title":"collect.Min()","slug":"collect-min","link":"#collect-min","children":[]},{"level":3,"title":"collect.Reverse()","slug":"collect-reverse","link":"#collect-reverse","children":[]},{"level":3,"title":"collect.Shuffle()","slug":"collect-shuffle","link":"#collect-shuffle","children":[]},{"level":3,"title":"collect.Split()","slug":"collect-split","link":"#collect-split","children":[]},{"level":3,"title":"collect.Sum()","slug":"collect-sum","link":"#collect-sum","children":[]},{"level":3,"title":"collect.Unique()","slug":"collect-unique","link":"#collect-unique","children":[]},{"level":3,"title":"collect.Values()","slug":"collect-values","link":"#collect-values","children":[]}]}],"git":{},"filePathRelative":"zh/digging-deeper/helpers.md","autoDesc":true}');export{h as comp,v as data};
