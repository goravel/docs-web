import{_ as o,c,b as s,e as a,f as e,a as u,r as l,o as d,d as p}from"./app-CHUAQy59.js";const r={},k={class:"table-of-contents"};function m(v,n){const t=l("router-link"),i=l("CommentService");return d(),c("div",null,[n[29]||(n[29]=s("h1",{id:"数据库迁移",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#数据库迁移"},[s("span",null,"数据库迁移")])],-1)),s("nav",k,[s("ul",null,[s("li",null,[a(t,{to:"#简介"},{default:e(()=>n[0]||(n[0]=[p("简介")])),_:1})]),s("li",null,[a(t,{to:"#配置"},{default:e(()=>n[1]||(n[1]=[p("配置")])),_:1})]),s("li",null,[a(t,{to:"#生成迁移"},{default:e(()=>n[2]||(n[2]=[p("生成迁移")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#快捷生成"},{default:e(()=>n[3]||(n[3]=[p("快捷生成")])),_:1})])])]),s("li",null,[a(t,{to:"#迁移结构"},{default:e(()=>n[4]||(n[4]=[p("迁移结构")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#go-语言迁移"},{default:e(()=>n[5]||(n[5]=[p("Go 语言迁移")])),_:1})])])]),s("li",null,[a(t,{to:"#注册迁移"},{default:e(()=>n[6]||(n[6]=[p("注册迁移")])),_:1})]),s("li",null,[a(t,{to:"#执行迁移"},{default:e(()=>n[7]||(n[7]=[p("执行迁移")])),_:1})]),s("li",null,[a(t,{to:"#回滚迁移"},{default:e(()=>n[8]||(n[8]=[p("回滚迁移")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#使用单个命令同时进行回滚和迁移操作"},{default:e(()=>n[9]||(n[9]=[p("使用单个命令同时进行回滚和迁移操作")])),_:1})]),s("li",null,[a(t,{to:"#删除所有表然后执行迁移"},{default:e(()=>n[10]||(n[10]=[p("删除所有表然后执行迁移")])),_:1})])])]),s("li",null,[a(t,{to:"#tables"},{default:e(()=>n[11]||(n[11]=[p("Tables")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#创建表"},{default:e(()=>n[12]||(n[12]=[p("创建表")])),_:1})]),s("li",null,[a(t,{to:"#检查表-列是否存在"},{default:e(()=>n[13]||(n[13]=[p("检查表 / 列是否存在")])),_:1})]),s("li",null,[a(t,{to:"#数据库连接"},{default:e(()=>n[14]||(n[14]=[p("数据库连接")])),_:1})]),s("li",null,[a(t,{to:"#更新表"},{default:e(()=>n[15]||(n[15]=[p("更新表")])),_:1})]),s("li",null,[a(t,{to:"#重命名字段"},{default:e(()=>n[16]||(n[16]=[p("重命名字段")])),_:1})]),s("li",null,[a(t,{to:"#添加表注释"},{default:e(()=>n[17]||(n[17]=[p("添加表注释")])),_:1})]),s("li",null,[a(t,{to:"#重命名-删除表"},{default:e(()=>n[18]||(n[18]=[p("重命名 / 删除表")])),_:1})])])]),s("li",null,[a(t,{to:"#字段"},{default:e(()=>n[19]||(n[19]=[p("字段")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#可用的字段类型"},{default:e(()=>n[20]||(n[20]=[p("可用的字段类型")])),_:1})]),s("li",null,[a(t,{to:"#列修饰符"},{default:e(()=>n[21]||(n[21]=[p("列修饰符")])),_:1})]),s("li",null,[a(t,{to:"#删除列"},{default:e(()=>n[22]||(n[22]=[p("删除列")])),_:1})])])]),s("li",null,[a(t,{to:"#索引"},{default:e(()=>n[23]||(n[23]=[p("索引")])),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#创建索引"},{default:e(()=>n[24]||(n[24]=[p("创建索引")])),_:1})]),s("li",null,[a(t,{to:"#重命名索引"},{default:e(()=>n[25]||(n[25]=[p("重命名索引")])),_:1})]),s("li",null,[a(t,{to:"#删除索引"},{default:e(()=>n[26]||(n[26]=[p("删除索引")])),_:1})]),s("li",null,[a(t,{to:"#外键约束"},{default:e(()=>n[27]||(n[27]=[p("外键约束")])),_:1})]),s("li",null,[a(t,{to:"#删除外键"},{default:e(()=>n[28]||(n[28]=[p("删除外键")])),_:1})])])])])]),n[30]||(n[30]=u(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>当多人协作开发应用程序时，如果同步数据库结构没有一个统一的规范，以保证所有人的本地数据都是一致的，那将是灾难。数据库迁移就是为了解决这个问题，将数据库的结构进行版本控制，以保证所有开发人员的数据库结构的一致性。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p>数据库迁移文件存放在 <code>database/migrations</code> 目录下，你可以在 <code>config/database.go</code> 文件中配置数据库连接信息。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token string">&quot;migrations&quot;</span><span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// You can cumstomize the table name of migrations</span></span>
<span class="line">  <span class="token string">&quot;table&quot;</span><span class="token punctuation">:</span>  <span class="token string">&quot;migrations&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成迁移" tabindex="-1"><a class="header-anchor" href="#生成迁移"><span>生成迁移</span></a></h2><p>使用 <code>make:migration</code> 命令来创建迁移：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan make:migration create_users_table</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令会在 <code>database/migrations</code> 目录下生成迁移文件，所有迁移文件都以一个时间戳为开头，Goravel 将以此作为迁移文件的执行顺序。</p><h3 id="快捷生成" tabindex="-1"><a class="header-anchor" href="#快捷生成"><span>快捷生成</span></a></h3><p>使用 <code>create_users_table</code> 将会自动生成包含 <code>users</code> 基础结构的表，实现原理是根据正则进行匹配：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">^create_(\\w+)_table$</span>
<span class="line">^create_(\\w+)$</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>add_avatar_to_users_table</code> 将会自动生成向 <code>users</code> 表增加字段的结构，实现原理是根据正则进行匹配：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">_(to|from|in)_(\\w+)_table$</span>
<span class="line">_(to|from|in)_(\\w+)$</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>未匹配到上述情况时，框架会生成一个空的迁移文件。</p><h2 id="迁移结构" tabindex="-1"><a class="header-anchor" href="#迁移结构"><span>迁移结构</span></a></h2><h3 id="go-语言迁移" tabindex="-1"><a class="header-anchor" href="#go-语言迁移"><span>Go 语言迁移</span></a></h3><p>迁移类包含两个方法：<code>Up</code> 和 <code>Down</code>。<code>Up</code> 方法用于向数据库中添加新表、列或索引，而 <code>Down</code> 方法用于撤销 <code>Up</code> 方法执行的操作。在这两种方法中，可以使用 <code>facades.Schema()</code> 来创建和操作数据库表，起可用方法<a href="#tables">详见文档</a>。以下迁移会创建一个 <code>users</code> 表：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> migrations</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/goravel/framework/contracts/database/schema&quot;</span></span>
<span class="line">	<span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> M20241207095921CreateUsersTable <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Signature The unique signature for the migration.</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Signature</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token string">&quot;20241207095921_create_users_table&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Up Run the migrations.</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Up</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token operator">!</span>facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasTable</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			table<span class="token punctuation">.</span><span class="token function">Timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Down Reverse the migrations.</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DropIfExists</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置迁移连接" tabindex="-1"><a class="header-anchor" href="#设置迁移连接"><span>设置迁移连接</span></a></h4><p>如果迁移将与应用程序默认数据库连接以外的数据库连接进行交互，你可以使用迁移的 <code>Connection</code> 方法：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>M20241207095921CreateUsersTable<span class="token punctuation">)</span> <span class="token function">Connection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token string">&quot;connection-name&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注册迁移" tabindex="-1"><a class="header-anchor" href="#注册迁移"><span>注册迁移</span></a></h2><p>迁移文件生成后需要在 <code>database/kernel.go</code> 文件中注册，如果是通过 <code>make:migration</code> 命令生成的迁移文件，则不需要手动注册，框架会自动注册。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// database/kernel.go</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>kernel Kernel<span class="token punctuation">)</span> <span class="token function">Migrations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Migration <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Migration<span class="token punctuation">{</span></span>
<span class="line">		<span class="token operator">&amp;</span>migrations<span class="token punctuation">.</span>M20241207095921CreateUsersTable<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行迁移" tabindex="-1"><a class="header-anchor" href="#执行迁移"><span>执行迁移</span></a></h2><p>执行 Artisan 命令 <code>migrate</code>，来运行所有未执行过的迁移：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你想查看目前的迁移状态，可以使用 <code>migrate:status</code> Artisan 命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="回滚迁移" tabindex="-1"><a class="header-anchor" href="#回滚迁移"><span>回滚迁移</span></a></h2><p>如果要回滚最后一次迁移操作，可以使用 Artisan 命令 <code>rollback</code>。该命令会回滚最后「一批」的迁移，这可能包含多个迁移文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:rollback</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过向 <code>rollback</code> 命令加上 <code>step</code> 参数，可以回滚指定数量的迁移。例如，以下命令将回滚最后五个迁移：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:rollback <span class="token parameter variable">--step</span><span class="token operator">=</span><span class="token number">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>命令 <code>migrate:reset</code> 会回滚应用已运行过的所有迁移：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:reset</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="使用单个命令同时进行回滚和迁移操作" tabindex="-1"><a class="header-anchor" href="#使用单个命令同时进行回滚和迁移操作"><span>使用单个命令同时进行回滚和迁移操作</span></a></h3><p>命令 <code>migrate:refresh</code> 首先会回滚已运行过的所有迁移，随后会执行 <code>migrate</code>。这一命令可以高效地重建你的整个数据库：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:refresh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过在命令 <code>refresh</code> 中使用 <code>step</code> 参数，你可以回滚并重新执行指定数量的迁移操作。例如，下列命令会回滚并重新执行最后五个迁移操作：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:refresh <span class="token parameter variable">--step</span><span class="token operator">=</span><span class="token number">5</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="删除所有表然后执行迁移" tabindex="-1"><a class="header-anchor" href="#删除所有表然后执行迁移"><span>删除所有表然后执行迁移</span></a></h3><p>命令 <code>migrate:fresh</code> 会删去数据库中的所有表，随后执行命令 <code>migrate</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan migrate:fresh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="tables" tabindex="-1"><a class="header-anchor" href="#tables"><span>Tables</span></a></h2><h3 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表"><span>创建表</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查表-列是否存在" tabindex="-1"><a class="header-anchor" href="#检查表-列是否存在"><span>检查表 / 列是否存在</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasTable</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasColumn</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasColumns</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasIndex</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email_unique&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据库连接" tabindex="-1"><a class="header-anchor" href="#数据库连接"><span>数据库连接</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Connection</span><span class="token punctuation">(</span><span class="token string">&quot;sqlite&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新表" tabindex="-1"><a class="header-anchor" href="#更新表"><span>更新表</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重命名字段" tabindex="-1"><a class="header-anchor" href="#重命名字段"><span>重命名字段</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">RenameColumn</span><span class="token punctuation">(</span><span class="token string">&quot;old_name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;new_name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加表注释" tabindex="-1"><a class="header-anchor" href="#添加表注释"><span>添加表注释</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;user table&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重命名-删除表" tabindex="-1"><a class="header-anchor" href="#重命名-删除表"><span>重命名 / 删除表</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Rename</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;new_users&quot;</span><span class="token punctuation">)</span></span>
<span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Drop</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">DropIfExists</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字段" tabindex="-1"><a class="header-anchor" href="#字段"><span>字段</span></a></h2><h3 id="可用的字段类型" tabindex="-1"><a class="header-anchor" href="#可用的字段类型"><span>可用的字段类型</span></a></h3><h4 id="布尔类型" tabindex="-1"><a class="header-anchor" href="#布尔类型"><span>布尔类型</span></a></h4><p>Boolean</p><h4 id="字符串-文本类型" tabindex="-1"><a class="header-anchor" href="#字符串-文本类型"><span>字符串 &amp; 文本类型</span></a></h4><p>Char, Json, LongText, MediumText, String, Text, LongText, TinyText, Uuid, Ulid</p><h4 id="数字类型" tabindex="-1"><a class="header-anchor" href="#数字类型"><span>数字类型</span></a></h4><p>BigIncrements, BigInteger, Decimal, Double, Float, <a href="#id">ID</a>, Increments, Integer, IntegerIncrements, MediumIncrements, MediumInteger, SmallIncrements, SmallInteger, TinyIncrements, TinyInteger, UnsignedBigInteger, UnsignedInteger, UnsignedMediumInteger, UnsignedSmallInteger, UnsignedTinyInteger</p><h4 id="日期-时间类型" tabindex="-1"><a class="header-anchor" href="#日期-时间类型"><span>日期 &amp; 时间类型</span></a></h4><p>Date, DateTime, DateTimeTz, <a href="#softdeletes">SoftDeletes</a>, SoftDeletesTz, Time, TimeTz, Timestamp, TimestampTz, Timestamps, TimestampsTz</p><h4 id="其他类型" tabindex="-1"><a class="header-anchor" href="#其他类型"><span>其他类型</span></a></h4><p><a href="#enum">Enum</a>, Morphs, NullableMorphs, NumericMorphs, UuidMorphs, UlidMorphs</p><h4 id="enum" tabindex="-1"><a class="header-anchor" href="#enum"><span>Enum</span></a></h4><p>创建一个 <code>Enum</code> 字段，该字段在 <code>Mysql</code> 中可以根据 <code>[]any</code> 中的类型进行储存，但在 <code>Postgres</code>, <code>Sqlite</code> 和 <code>Sqlserver</code> 数据库中都是 <code>String</code> 类型。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">Enum</span><span class="token punctuation">(</span><span class="token string">&quot;difficulty&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token string">&quot;easy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hard&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">table<span class="token punctuation">.</span><span class="token function">Enum</span><span class="token punctuation">(</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>any<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>ID</span></a></h4><p><code>ID</code> 方法是 <code>BigIncrements</code> 方法的别名。默认情况下，该方法将创建一个 <code>id</code> 列；但是，如果你想要为该列分配一个不同的名称，可以传递一个列名称：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">table<span class="token punctuation">.</span><span class="token function">ID</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="softdeletes" tabindex="-1"><a class="header-anchor" href="#softdeletes"><span>SoftDeletes</span></a></h4><p><code>SoftDeletes</code> 方法添加了一个可以为空的 <code>deleted_at</code> <code>TIMESTAMP</code> 列。此列旨在存储 Orm 「软删除」功能所需的 <code>deleted_at</code> 时间戳：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">SoftDeletes</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="自定义字段" tabindex="-1"><a class="header-anchor" href="#自定义字段"><span>自定义字段</span></a></h4><p>如果你正在使用框架尚不支持的字段类型，可以通过 <code>Column</code> 方法自定义字段类型：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">table<span class="token punctuation">.</span><span class="token function">Column</span><span class="token punctuation">(</span><span class="token string">&quot;geometry&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;geometry&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="列修饰符" tabindex="-1"><a class="header-anchor" href="#列修饰符"><span>列修饰符</span></a></h3><p>除了上面列出的列类型之外，当给数据库表添加一个列时，你还可以给列添加「修饰符」。例如，要使列可以「为空」，你可以使用 <code>Nullable</code> 方法：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Nullable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下表格包含所有可用的列修饰符：</p><table><thead><tr><th>修饰符</th><th>描述</th></tr></thead><tbody><tr><td><code>.Always()</code></td><td>该列的值始终由数据库系统自动生成，用户不能直接插入或修改（仅限 PostgreSQL）</td></tr><tr><td><code>.AutoIncrement()</code></td><td>设置整数列为自动增长的（主键）</td></tr><tr><td><code>.After(&quot;column&quot;)</code></td><td>将列设置为指定列之后（适用于 MySQL）</td></tr><tr><td><code>.Comment(&quot;my comment&quot;)</code></td><td>向列添加注释（MySQL / PostgreSQL）</td></tr><tr><td><code>.Change()</code></td><td>修改列（MySQL / PostgreSQL / Sqlserver）</td></tr><tr><td><code>.Default(value)</code></td><td>为列指定「默认」值</td></tr><tr><td><code>.First()</code></td><td>将列设置为表的第一个字段（适用于 MySQL）</td></tr><tr><td><code>.GeneratedAs()</code></td><td>设置列的值由数据库系统自动生成（仅限 PostgreSQL）</td></tr><tr><td><code>.Nullable()</code></td><td>允许插入 NULL 值到列中</td></tr><tr><td><code>.Unsigned()</code></td><td>设置整数列为 UNSIGNED（仅限 MySQL）</td></tr><tr><td><code>.UseCurrent()</code></td><td>设置时间戳列使用 CURRENT_TIMESTAMP 作为默认值</td></tr><tr><td><code>.UseCurrentOnUpdate()</code></td><td>设置记录更新时，时间戳列使用 CURRENT_TIMESTAMP（仅限 MySQL）</td></tr></tbody></table><h3 id="删除列" tabindex="-1"><a class="header-anchor" href="#删除列"><span>删除列</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropColumn</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropColumn</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h2><h3 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引"><span>创建索引</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 添加主键</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Primary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// 添加复合主键</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Primary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 添加唯一索引</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 添加普通索引</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 添加全文索引</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">FullText</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">FullText</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重命名索引" tabindex="-1"><a class="header-anchor" href="#重命名索引"><span>重命名索引</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">RenameIndex</span><span class="token punctuation">(</span><span class="token string">&quot;users_name_index&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;users_name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引"><span>删除索引</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropPrimary</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropUnique</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropUniqueByName</span><span class="token punctuation">(</span><span class="token string">&quot;name_unique&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropIndex</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropIndexByName</span><span class="token punctuation">(</span><span class="token string">&quot;name_index&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropFullText</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropFullTextByName</span><span class="token punctuation">(</span><span class="token string">&quot;name_fulltext&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束"><span>外键约束</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;posts&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">UnsignedBigInteger</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">Foreign</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">References</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">On</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除外键" tabindex="-1"><a class="header-anchor" href="#删除外键"><span>删除外键</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>table schema<span class="token punctuation">.</span>Blueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropForeign</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  table<span class="token punctuation">.</span><span class="token function">DropForeignByName</span><span class="token punctuation">(</span><span class="token string">&quot;user_id_foreign&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,102)),a(i)])}const b=o(r,[["render",m],["__file","migrations.html.vue"]]),h=JSON.parse('{"path":"/zh/database/migrations.html","title":"数据库迁移","lang":"zh-CN","frontmatter":{"description":"数据库迁移 简介 当多人协作开发应用程序时，如果同步数据库结构没有一个统一的规范，以保证所有人的本地数据都是一致的，那将是灾难。数据库迁移就是为了解决这个问题，将数据库的结构进行版本控制，以保证所有开发人员的数据库结构的一致性。 配置 数据库迁移文件存放在 database/migrations 目录下，你可以在 config/database.go ...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/database/migrations.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/database/migrations.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/database/migrations.html"}],["meta",{"property":"og:description","content":"数据库迁移 简介 当多人协作开发应用程序时，如果同步数据库结构没有一个统一的规范，以保证所有人的本地数据都是一致的，那将是灾难。数据库迁移就是为了解决这个问题，将数据库的结构进行版本控制，以保证所有开发人员的数据库结构的一致性。 配置 数据库迁移文件存放在 database/migrations 目录下，你可以在 config/database.go ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库迁移\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"生成迁移","slug":"生成迁移","link":"#生成迁移","children":[{"level":3,"title":"快捷生成","slug":"快捷生成","link":"#快捷生成","children":[]}]},{"level":2,"title":"迁移结构","slug":"迁移结构","link":"#迁移结构","children":[{"level":3,"title":"Go 语言迁移","slug":"go-语言迁移","link":"#go-语言迁移","children":[]}]},{"level":2,"title":"注册迁移","slug":"注册迁移","link":"#注册迁移","children":[]},{"level":2,"title":"执行迁移","slug":"执行迁移","link":"#执行迁移","children":[]},{"level":2,"title":"回滚迁移","slug":"回滚迁移","link":"#回滚迁移","children":[{"level":3,"title":"使用单个命令同时进行回滚和迁移操作","slug":"使用单个命令同时进行回滚和迁移操作","link":"#使用单个命令同时进行回滚和迁移操作","children":[]},{"level":3,"title":"删除所有表然后执行迁移","slug":"删除所有表然后执行迁移","link":"#删除所有表然后执行迁移","children":[]}]},{"level":2,"title":"Tables","slug":"tables","link":"#tables","children":[{"level":3,"title":"创建表","slug":"创建表","link":"#创建表","children":[]},{"level":3,"title":"检查表 / 列是否存在","slug":"检查表-列是否存在","link":"#检查表-列是否存在","children":[]},{"level":3,"title":"数据库连接","slug":"数据库连接","link":"#数据库连接","children":[]},{"level":3,"title":"更新表","slug":"更新表","link":"#更新表","children":[]},{"level":3,"title":"重命名字段","slug":"重命名字段","link":"#重命名字段","children":[]},{"level":3,"title":"添加表注释","slug":"添加表注释","link":"#添加表注释","children":[]},{"level":3,"title":"重命名 / 删除表","slug":"重命名-删除表","link":"#重命名-删除表","children":[]}]},{"level":2,"title":"字段","slug":"字段","link":"#字段","children":[{"level":3,"title":"可用的字段类型","slug":"可用的字段类型","link":"#可用的字段类型","children":[]},{"level":3,"title":"列修饰符","slug":"列修饰符","link":"#列修饰符","children":[]},{"level":3,"title":"删除列","slug":"删除列","link":"#删除列","children":[]}]},{"level":2,"title":"索引","slug":"索引","link":"#索引","children":[{"level":3,"title":"创建索引","slug":"创建索引","link":"#创建索引","children":[]},{"level":3,"title":"重命名索引","slug":"重命名索引","link":"#重命名索引","children":[]},{"level":3,"title":"删除索引","slug":"删除索引","link":"#删除索引","children":[]},{"level":3,"title":"外键约束","slug":"外键约束","link":"#外键约束","children":[]},{"level":3,"title":"删除外键","slug":"删除外键","link":"#删除外键","children":[]}]}],"git":{},"filePathRelative":"zh/database/migrations.md","autoDesc":true}');export{b as comp,h as data};
