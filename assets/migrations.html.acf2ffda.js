import{_ as o,r as i,o as c,c as l,b as a,d as s,w as t,e,f as r}from"./app.0475545f.js";const p={},d=a("h1",{id:"migrations",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#migrations","aria-hidden":"true"},"#"),e(" Migrations")],-1),u={class:"table-of-contents"},k=e("Introduction"),m=e("Create Migrations"),h=e("Quickly Create"),g=r(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>When multiple people collaborate to develop applications, if there is no unified specification for the synchronization database structure to ensure that everyone&#39;s local data is consistent, it will be a disaster. Database migration is to solve this problem. The database structure is version controlled to ensure the consistency of the database structure of all developers.</p><h2 id="create-migrations" tabindex="-1"><a class="header-anchor" href="#create-migrations" aria-hidden="true">#</a> Create Migrations</h2><p>Use the <code>make:migration</code> command to create the migration:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">go</span> run <span class="token punctuation">.</span> artisan <span class="token builtin">make</span><span class="token punctuation">:</span>migration create_users_table
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This command will generate migration files in the <code>database/migrations</code> directory. All migration files start with a timestamp. Goravel will use the timestamp as the execution order of the migration files. All migration files are <code>.sql</code> files, and you can customize the table structure using SQL statements.</p><p>The migration command will generate two migration files at the same time: <code>***.up.sql</code> and <code>***.down.sql</code>, respectively corresponding to execution and rollback.</p><h2 id="quickly-create" tabindex="-1"><a class="header-anchor" href="#quickly-create" aria-hidden="true">#</a> Quickly Create</h2><p>Using <code>create_users_table</code> will automatically generate a table containing the infrastructure of <code>users</code>:</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span>
  id <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  created_at <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  updated_at <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">KEY</span> idx_users_created_at <span class="token punctuation">(</span>created_at<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">KEY</span> idx_users_updated_at <span class="token punctuation">(</span>updated_at<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> DummyDatabaseCharset<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The realization principle is to match according to the regularity:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>^create_(\\w+)_table$
^create_(\\w+)$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Using <code>add_avatar_to_users_table</code> will automatically generate a structure for adding fields to the <code>users</code> table:</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> users <span class="token keyword">ADD</span> <span class="token keyword">column</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The realization principle is to match according to the regularity:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>_(to|from|in)_(\\w+)_table$
_(to|from|in)_(\\w+)$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>When the above conditions are not matched, the framework will generate an empty migration file.</p>`,17);function v(b,_){const n=i("router-link");return c(),l("div",null,[d,a("nav",u,[a("ul",null,[a("li",null,[s(n,{to:"#introduction"},{default:t(()=>[k]),_:1})]),a("li",null,[s(n,{to:"#create-migrations"},{default:t(()=>[m]),_:1})]),a("li",null,[s(n,{to:"#quickly-create"},{default:t(()=>[h]),_:1})])])]),g])}const y=o(p,[["render",v],["__file","migrations.html.vue"]]);export{y as default};
