import{_ as l,c,b as s,e as a,f as t,a as u,r as o,o as r,d as i}from"./app-B8-8HIlW.js";const d={},k={class:"table-of-contents"};function g(h,n){const e=o("router-link"),p=o("CommentService");return r(),c("div",null,[n[21]||(n[21]=s("h1",{id:"session",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#session"},[s("span",null,"Session")])],-1)),s("nav",k,[s("ul",null,[s("li",null,[a(e,{to:"#introduction"},{default:t(()=>n[0]||(n[0]=[i("Introduction")])),_:1})]),s("li",null,[a(e,{to:"#configuration"},{default:t(()=>n[1]||(n[1]=[i("Configuration")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#register-middleware"},{default:t(()=>n[2]||(n[2]=[i("Register Middleware")])),_:1})])])]),s("li",null,[a(e,{to:"#interacting-with-the-session"},{default:t(()=>n[3]||(n[3]=[i("Interacting With The Session")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#retrieving-data"},{default:t(()=>n[4]||(n[4]=[i("Retrieving Data")])),_:1})]),s("li",null,[a(e,{to:"#retrieving-all-data"},{default:t(()=>n[5]||(n[5]=[i("Retrieving All Data")])),_:1})]),s("li",null,[a(e,{to:"#retrieving-a-subset-of-data"},{default:t(()=>n[6]||(n[6]=[i("Retrieving a Subset of Data")])),_:1})]),s("li",null,[a(e,{to:"#determining-if-an-item-exists-in-the-session"},{default:t(()=>n[7]||(n[7]=[i("Determining If An Item Exists In The Session")])),_:1})]),s("li",null,[a(e,{to:"#storing-data"},{default:t(()=>n[8]||(n[8]=[i("Storing Data")])),_:1})]),s("li",null,[a(e,{to:"#retrieving-deleting-data"},{default:t(()=>n[9]||(n[9]=[i("Retrieving & Deleting Data")])),_:1})]),s("li",null,[a(e,{to:"#deleting-data"},{default:t(()=>n[10]||(n[10]=[i("Deleting Data")])),_:1})]),s("li",null,[a(e,{to:"#regenerating-the-session-id"},{default:t(()=>n[11]||(n[11]=[i("Regenerating The Session ID")])),_:1})]),s("li",null,[a(e,{to:"#flash-data"},{default:t(()=>n[12]||(n[12]=[i("Flash Data")])),_:1})])])]),s("li",null,[a(e,{to:"#interacting-with-session-manager"},{default:t(()=>n[13]||(n[13]=[i("Interacting With Session Manager")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#building-a-custom-session"},{default:t(()=>n[14]||(n[14]=[i("Building A Custom Session")])),_:1})]),s("li",null,[a(e,{to:"#add-custom-session-drivers"},{default:t(()=>n[15]||(n[15]=[i("Add Custom Session Drivers")])),_:1})]),s("li",null,[a(e,{to:"#retrieving-driver-instance"},{default:t(()=>n[16]||(n[16]=[i("Retrieving driver instance")])),_:1})]),s("li",null,[a(e,{to:"#starting-a-new-session"},{default:t(()=>n[17]||(n[17]=[i("Starting A New Session")])),_:1})]),s("li",null,[a(e,{to:"#saving-the-session-data"},{default:t(()=>n[18]||(n[18]=[i("Saving The Session Data")])),_:1})]),s("li",null,[a(e,{to:"#attaching-the-session-to-the-request"},{default:t(()=>n[19]||(n[19]=[i("Attaching the Session to the Request")])),_:1})]),s("li",null,[a(e,{to:"#checking-if-request-has-session"},{default:t(()=>n[20]||(n[20]=[i("Checking if request has session")])),_:1})])])])])]),n[22]||(n[22]=u(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Session enables you to store user information across multiple requests, providing a stateful experience within the inherently stateless HTTP protocol. This user information is stored persistently on the server side. Goravel offers a unified interface for interacting with various persistent storage drivers.</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>The <code>session</code> configuration file is located at <code>config/session.go</code>. The default driver is <code>file</code>, which stores sessions in the <code>storage/framework/sessions</code> directory. Goravel allows you to create a custom <code>session</code> driver by implementing the <code>contracts/session/driver</code> interface.</p><h3 id="register-middleware" tabindex="-1"><a class="header-anchor" href="#register-middleware"><span>Register Middleware</span></a></h3><p>By default, Goravel does not start a session automatically. However, it provides middleware to start a session. You can register the session middleware in the <code>app/http/kernel.go</code> file to apply it to all routes, or you can add it to specific routes:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/contracts/http&quot;</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/session/middleware&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>kernel Kernel<span class="token punctuation">)</span> <span class="token function">Middleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>http<span class="token punctuation">.</span>Middleware <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>http<span class="token punctuation">.</span>Middleware<span class="token punctuation">{</span></span>
<span class="line">    middleware<span class="token punctuation">.</span><span class="token function">StartSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interacting-with-the-session" tabindex="-1"><a class="header-anchor" href="#interacting-with-the-session"><span>Interacting With The Session</span></a></h2><h3 id="retrieving-data" tabindex="-1"><a class="header-anchor" href="#retrieving-data"><span>Retrieving Data</span></a></h3><p>You can use the <code>Get</code> method to retrieve data from the session. If the value does not exist, <code>nil</code> will be returned.</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">value <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You may also pass a default value as the second argument to the <code>Get</code> method. This value will be returned if the specified key does not exist in the session:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">value <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="retrieving-all-data" tabindex="-1"><a class="header-anchor" href="#retrieving-all-data"><span>Retrieving All Data</span></a></h3><p>If you would like to retrieve all data from the session, you may use the <code>All</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">data <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">All</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="retrieving-a-subset-of-data" tabindex="-1"><a class="header-anchor" href="#retrieving-a-subset-of-data"><span>Retrieving a Subset of Data</span></a></h3><p>If you would like to retrieve a subset of the session data, you may use the <code>Only</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">data <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Only</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="determining-if-an-item-exists-in-the-session" tabindex="-1"><a class="header-anchor" href="#determining-if-an-item-exists-in-the-session"><span>Determining If An Item Exists In The Session</span></a></h3><p>To determine if an item is present in the session, you may use the <code>Has</code> method. The <code>Has</code> method returns <code>true</code> if the item is present and is not <code>nil</code>:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Has</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To determine if an item is present and even if it is <code>nil</code>, you may use the <code>Exists</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To determine if an item is not present in the session, you may use the <code>Missing</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Missing</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="storing-data" tabindex="-1"><a class="header-anchor" href="#storing-data"><span>Storing Data</span></a></h3><p>You can use the <code>Put</code> method to store data in the session:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="retrieving-deleting-data" tabindex="-1"><a class="header-anchor" href="#retrieving-deleting-data"><span>Retrieving &amp; Deleting Data</span></a></h3><p>If you would like to retrieve an item from the session and then delete it, you may use the <code>Pull</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">value <span class="token operator">:=</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pull</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="deleting-data" tabindex="-1"><a class="header-anchor" href="#deleting-data"><span>Deleting Data</span></a></h3><p>The <code>Forget</code> method can be used to remove a piece of data from the session. If you would like to remove all data from the session, you can use the <code>Flush</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Forget</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regenerating-the-session-id" tabindex="-1"><a class="header-anchor" href="#regenerating-the-session-id"><span>Regenerating The Session ID</span></a></h3><p>Regenerating the session ID is often done in order to prevent malicious users from exploiting a session fixation attack on your application. You may regenerate the session ID using the <code>Regenerate</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Regenerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you would like to regenerate the session ID and forget all data that was in the session, you may use the <code>Invalidate</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then, you need to save the new session to the cookie:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Cookie</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">{</span></span>
<span class="line">  Name<span class="token punctuation">:</span>     ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  Value<span class="token punctuation">:</span>    ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  MaxAge<span class="token punctuation">:</span>   facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;session.lifetime&quot;</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">,</span></span>
<span class="line">  Path<span class="token punctuation">:</span>     facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;session.path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  Domain<span class="token punctuation">:</span>   facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;session.domain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  Secure<span class="token punctuation">:</span>   facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetBool</span><span class="token punctuation">(</span><span class="token string">&quot;session.secure&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  HttpOnly<span class="token punctuation">:</span> facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetBool</span><span class="token punctuation">(</span><span class="token string">&quot;session.http_only&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  SameSite<span class="token punctuation">:</span> facades<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;session.same_site&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flash-data" tabindex="-1"><a class="header-anchor" href="#flash-data"><span>Flash Data</span></a></h3><p>Flash data is session data that will only be available during the subsequent HTTP request, and then will be deleted. Flash data is useful for storing temporary messages such as status messages. You may use the <code>Flash</code> method to store flash data in the session:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Flash</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Task was successful!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you would like to keep your flash data around for an additional request, you may use the <code>Reflash</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Reflash</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you would like to keep specific flash data around for an additional request, you may use the <code>Keep</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Keep</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you would like to keep specific data around for immediate use, you may use the <code>Now</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Task was successful!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="interacting-with-session-manager" tabindex="-1"><a class="header-anchor" href="#interacting-with-session-manager"><span>Interacting With Session Manager</span></a></h2><h3 id="building-a-custom-session" tabindex="-1"><a class="header-anchor" href="#building-a-custom-session"><span>Building A Custom Session</span></a></h3><p>Use the <code>Session</code> facade to build a custom session. The <code>Session</code> facade provides the <code>BuildSession</code> method, which takes a driver instance and an optional session ID if you want to specify a custom session ID:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"></span>
<span class="line">session <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BuildSession</span><span class="token punctuation">(</span>driver<span class="token punctuation">,</span> <span class="token string">&quot;sessionID&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add-custom-session-drivers" tabindex="-1"><a class="header-anchor" href="#add-custom-session-drivers"><span>Add Custom Session Drivers</span></a></h3><h4 id="implementing-the-driver" tabindex="-1"><a class="header-anchor" href="#implementing-the-driver"><span>Implementing The Driver</span></a></h4><p>To implement a custom session driver, driver must implement the <code>contracts/session/driver</code> interface.</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// Driver is the interface for Session handlers.</span></span>
<span class="line"><span class="token keyword">type</span> Driver <span class="token keyword">interface</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Close closes the session handler.</span></span>
<span class="line">  <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token comment">// Destroy destroys the session with the given ID.</span></span>
<span class="line">  <span class="token function">Destroy</span><span class="token punctuation">(</span>id <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token comment">// Gc performs garbage collection on the session handler with the given maximum lifetime.</span></span>
<span class="line">  <span class="token function">Gc</span><span class="token punctuation">(</span>maxLifetime <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token comment">// Open opens a session with the given path and name.</span></span>
<span class="line">  <span class="token function">Open</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">,</span> name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line">  <span class="token comment">// Read reads the session data associated with the given ID.</span></span>
<span class="line">  <span class="token function">Read</span><span class="token punctuation">(</span>id <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// Write writes the session data associated with the given ID.</span></span>
<span class="line">  <span class="token function">Write</span><span class="token punctuation">(</span>id <span class="token builtin">string</span><span class="token punctuation">,</span> data <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="registering-the-driver" tabindex="-1"><a class="header-anchor" href="#registering-the-driver"><span>Registering The Driver</span></a></h4><p>After implementing the driver, you need to register it in Goravel. You can do this using <code>Extend</code> method of the <code>facades.Session</code>. You should call the <code>Extend</code> method in the <code>boot</code> method of <code>app/providers/app_service_provider.go</code>:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/goravel/framework/contracts/session&quot;</span></span>
<span class="line"></span>
<span class="line">facades<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Extend</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> session<span class="token punctuation">.</span>Driver <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token operator">&amp;</span>RedisDriver<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once the driver is registered, you can use it by setting the <code>driver</code> option in the session configuration file to <code>redis</code> or by setting the <code>SESSION_DRIVER</code> environment variable to <code>redis</code>.</p><h3 id="retrieving-driver-instance" tabindex="-1"><a class="header-anchor" href="#retrieving-driver-instance"><span>Retrieving driver instance</span></a></h3><p>Use the <code>Driver</code> method to retrieve the driver instance from the session manager. It accepts an optional driver name, if not provided, it returns the default driver instance:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">driver<span class="token punctuation">,</span> err <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="starting-a-new-session" tabindex="-1"><a class="header-anchor" href="#starting-a-new-session"><span>Starting A New Session</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">session <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BuildSession</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="saving-the-session-data" tabindex="-1"><a class="header-anchor" href="#saving-the-session-data"><span>Saving The Session Data</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">session <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BuildSession</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="attaching-the-session-to-the-request" tabindex="-1"><a class="header-anchor" href="#attaching-the-session-to-the-request"><span>Attaching the Session to the Request</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">session <span class="token operator">:=</span> facades<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">BuildSession</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span></span>
<span class="line">session<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetSession</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checking-if-request-has-session" tabindex="-1"><a class="header-anchor" href="#checking-if-request-has-session"><span>Checking if request has session</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">if</span> ctx<span class="token punctuation">.</span><span class="token function">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">HasSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,74)),a(p)])}const m=l(d,[["render",g],["__file","session.html.vue"]]),f=JSON.parse('{"path":"/the-basics/session.html","title":"Session","lang":"en-US","frontmatter":{"description":"Session Introduction Session enables you to store user information across multiple requests, providing a stateful experience within the inherently stateless HTTP protocol. This ...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/the-basics/session.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/the-basics/session.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/the-basics/session.html"}],["meta",{"property":"og:description","content":"Session Introduction Session enables you to store user information across multiple requests, providing a stateful experience within the inherently stateless HTTP protocol. This ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Session\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"Register Middleware","slug":"register-middleware","link":"#register-middleware","children":[]}]},{"level":2,"title":"Interacting With The Session","slug":"interacting-with-the-session","link":"#interacting-with-the-session","children":[{"level":3,"title":"Retrieving Data","slug":"retrieving-data","link":"#retrieving-data","children":[]},{"level":3,"title":"Retrieving All Data","slug":"retrieving-all-data","link":"#retrieving-all-data","children":[]},{"level":3,"title":"Retrieving a Subset of Data","slug":"retrieving-a-subset-of-data","link":"#retrieving-a-subset-of-data","children":[]},{"level":3,"title":"Determining If An Item Exists In The Session","slug":"determining-if-an-item-exists-in-the-session","link":"#determining-if-an-item-exists-in-the-session","children":[]},{"level":3,"title":"Storing Data","slug":"storing-data","link":"#storing-data","children":[]},{"level":3,"title":"Retrieving & Deleting Data","slug":"retrieving-deleting-data","link":"#retrieving-deleting-data","children":[]},{"level":3,"title":"Deleting Data","slug":"deleting-data","link":"#deleting-data","children":[]},{"level":3,"title":"Regenerating The Session ID","slug":"regenerating-the-session-id","link":"#regenerating-the-session-id","children":[]},{"level":3,"title":"Flash Data","slug":"flash-data","link":"#flash-data","children":[]}]},{"level":2,"title":"Interacting With Session Manager","slug":"interacting-with-session-manager","link":"#interacting-with-session-manager","children":[{"level":3,"title":"Building A Custom Session","slug":"building-a-custom-session","link":"#building-a-custom-session","children":[]},{"level":3,"title":"Add Custom Session Drivers","slug":"add-custom-session-drivers","link":"#add-custom-session-drivers","children":[]},{"level":3,"title":"Retrieving driver instance","slug":"retrieving-driver-instance","link":"#retrieving-driver-instance","children":[]},{"level":3,"title":"Starting A New Session","slug":"starting-a-new-session","link":"#starting-a-new-session","children":[]},{"level":3,"title":"Saving The Session Data","slug":"saving-the-session-data","link":"#saving-the-session-data","children":[]},{"level":3,"title":"Attaching the Session to the Request","slug":"attaching-the-session-to-the-request","link":"#attaching-the-session-to-the-request","children":[]},{"level":3,"title":"Checking if request has session","slug":"checking-if-request-has-session","link":"#checking-if-request-has-session","children":[]}]}],"git":{},"filePathRelative":"the-basics/session.md","autoDesc":true}');export{m as comp,f as data};
