import{_ as c,c as p,b as s,e as a,f as t,a as i,r as l,o as u,d as o}from"./app-BUIa-xtN.js";const d={},h={class:"table-of-contents"};function m(k,n){const e=l("router-link"),r=l("CommentService");return u(),p("div",null,[n[4]||(n[4]=s("h1",{id:"controllers",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#controllers"},[s("span",null,"Controllers")])],-1)),s("nav",h,[s("ul",null,[s("li",null,[a(e,{to:"#introduction"},{default:t(()=>n[0]||(n[0]=[o("Introduction")])),_:1})]),s("li",null,[a(e,{to:"#define-controllers"},{default:t(()=>n[1]||(n[1]=[o("Define Controllers")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#create-controller"},{default:t(()=>n[2]||(n[2]=[o("Create Controller")])),_:1})])])]),s("li",null,[a(e,{to:"#resource-controllers"},{default:t(()=>n[3]||(n[3]=[o("Resource Controllers")])),_:1})])])]),n[5]||(n[5]=i(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Instead of defining all request processing logic in the form of a closure in a separate route, a controller can be used for integration. The controllers are stored in the <code>app/http/controllers</code> directory.</p><h2 id="define-controllers" tabindex="-1"><a class="header-anchor" href="#define-controllers"><span>Define Controllers</span></a></h2><p>The following is an example of a basic controller:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> controllers</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/contracts/http&quot;</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> UserController <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Dependent services</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">NewUserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>UserController <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token operator">&amp;</span>UserController<span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Inject services</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>UserController<span class="token punctuation">)</span> <span class="token function">Show</span><span class="token punctuation">(</span>ctx http<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> http<span class="token punctuation">.</span>Response <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> ctx<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Json</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Json<span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Goravel&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The route define:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> routes</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;github.com/goravel/framework/facades&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token string">&quot;goravel/app/http/controllers&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">Api</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  userController <span class="token operator">:=</span> controllers<span class="token punctuation">.</span><span class="token function">NewUserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">,</span> userController<span class="token punctuation">.</span>Show<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-controller" tabindex="-1"><a class="header-anchor" href="#create-controller"><span>Create Controller</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan make:controller UserController</span>
<span class="line">go run <span class="token builtin class-name">.</span> artisan make:controller user/UserController</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resource-controllers" tabindex="-1"><a class="header-anchor" href="#resource-controllers"><span>Resource Controllers</span></a></h2><p>If you think of each Eloquent model in your application as a &quot;resource&quot;, it is typical to perform the same sets of actions against each resource in your application. For example, imagine your application contains a <code>Photo</code> model and a <code>Movie</code> model. It is likely that users can create, read, update, or delete these resources.</p><p>Because of this common use case, Goravel resource routing assigns the typical create, read, update, and delete (&quot;CRUD&quot;) routes to a controller with a single line of code. To get started, we can use the <code>make:controller</code> Artisan command&#39;s <code>--resource</code> option to quickly create a controller to handle these actions:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan make:controller <span class="token parameter variable">--resource</span> PhotoController</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This command will generate a controller at <code>app/http/controllers/photo_controller.go</code>. The controller will contain a method for each of the available resource operations. Next, you may register a resource route that points to the controller:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">facades<span class="token punctuation">.</span><span class="token function">Route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Resource</span><span class="token punctuation">(</span><span class="token string">&quot;photos&quot;</span><span class="token punctuation">,</span> controllers<span class="token punctuation">.</span><span class="token function">NewPhotoController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th>Verb</th><th>URI</th><th>Action</th></tr></thead><tbody><tr><td>GET</td><td><code>/photos</code></td><td>Index</td></tr><tr><td>POST</td><td><code>/photos</code></td><td>Store</td></tr><tr><td>GET</td><td><code>/photos/{photo}</code></td><td>Show</td></tr><tr><td>PUT/PATCH</td><td><code>/photos/{photo}</code></td><td>Update</td></tr><tr><td>DELETE</td><td><code>/photos/{photo}</code></td><td>Destroy</td></tr></tbody></table>`,16)),a(r)])}const g=c(d,[["render",m],["__file","controllers.html.vue"]]),b=JSON.parse('{"path":"/the-basics/controllers.html","title":"Controllers","lang":"en-US","frontmatter":{"description":"Controllers Introduction Instead of defining all request processing logic in the form of a closure in a separate route, a controller can be used for integration. The controllers...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/the-basics/controllers.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/the-basics/controllers.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/the-basics/controllers.html"}],["meta",{"property":"og:description","content":"Controllers Introduction Instead of defining all request processing logic in the form of a closure in a separate route, a controller can be used for integration. The controllers..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Controllers\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Define Controllers","slug":"define-controllers","link":"#define-controllers","children":[{"level":3,"title":"Create Controller","slug":"create-controller","link":"#create-controller","children":[]}]},{"level":2,"title":"Resource Controllers","slug":"resource-controllers","link":"#resource-controllers","children":[]}],"git":{},"filePathRelative":"the-basics/controllers.md","autoDesc":true}');export{g as comp,b as data};
