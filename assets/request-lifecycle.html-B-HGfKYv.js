import{_ as p,r as o,o as s,c as i,a as e,b as c,w as a,d as t,e as d}from"./app-BlqL-mNw.js";const h={},u=e("h1",{id:"请求周期",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#请求周期"},[e("span",null,"请求周期")])],-1),m={class:"table-of-contents"},_=d('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Goravel 应用的所有请求入口都是 <code>main.go</code> 文件，该文件中使用 <code>bootstrap.Boot()</code> 引导框架加载。</p><p>然后在 <code>bootstrap/app.go</code> 脚本中创建 Goravel 实例 <code>app := foundation.Application{}</code>。</p>',3),f=e("code",null,"app.Boot()",-1),g=e("code",null,"config.Boot()",-1),v=e("p",null,[t("最后，在 "),e("code",null,"main.go"),t(" 文件中使用 "),e("code",null,'facades.Route().Run(facades.Config().GetString("app.host"))'),t(" 启动 HTTP 服务器。")],-1);function y(b,B){const n=o("router-link"),r=o("RouteLink"),l=o("CommentService");return s(),i("div",null,[u,e("nav",m,[e("ul",null,[e("li",null,[c(n,{to:"#简介"},{default:a(()=>[t("简介")]),_:1})])])]),_,e("p",null,[t("之后使用 "),f,t(" 引导加载框架中注册的 "),c(r,{to:"/zh/architecutre-concepts/service-providers.html"},{default:a(()=>[t("服务提供者")]),_:1}),t("，使用 "),g,t(" 加载 config 目录下的配置文件。")]),v,c(l)])}const x=p(h,[["render",y],["__file","request-lifecycle.html.vue"]]),G=JSON.parse('{"path":"/zh/architecutre-concepts/request-lifecycle.html","title":"请求周期","lang":"zh-CN","frontmatter":{"description":"请求周期 简介 Goravel 应用的所有请求入口都是 main.go 文件，该文件中使用 bootstrap.Boot() 引导框架加载。 然后在 bootstrap/app.go 脚本中创建 Goravel 实例 app := foundation.Application{}。 之后使用 app.Boot() 引导加载框架中注册的 ，使用 conf...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://goravel.dev/architecutre-concepts/request-lifecycle.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/zh/architecutre-concepts/request-lifecycle.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/architecutre-concepts/request-lifecycle.html"}],["meta",{"property":"og:description","content":"请求周期 简介 Goravel 应用的所有请求入口都是 main.go 文件，该文件中使用 bootstrap.Boot() 引导框架加载。 然后在 bootstrap/app.go 脚本中创建 Goravel 实例 app := foundation.Application{}。 之后使用 app.Boot() 引导加载框架中注册的 ，使用 conf..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"请求周期\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]}],"git":{},"filePathRelative":"zh/architecutre-concepts/request-lifecycle.md","autoDesc":true}');export{x as comp,G as data};
