import{_ as u,c as r,b as a,e,f as t,a as p,d as s,r as l,o as d}from"./app-CroKD7Pz.js";const g={},k={class:"table-of-contents"};function m(v,n){const o=l("router-link"),i=l("RouteLink"),c=l("CommentService");return d(),r("div",null,[n[35]||(n[35]=a("h1",{id:"package-development",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#package-development"},[a("span",null,"Package Development")])],-1)),a("nav",k,[a("ul",null,[a("li",null,[e(o,{to:"#introduction"},{default:t(()=>n[0]||(n[0]=[s("Introduction")])),_:1})]),a("li",null,[e(o,{to:"#creating-a-package"},{default:t(()=>n[1]||(n[1]=[s("Creating A Package")])),_:1})]),a("li",null,[e(o,{to:"#service-providers"},{default:t(()=>n[2]||(n[2]=[s("Service Providers")])),_:1})]),a("li",null,[e(o,{to:"#usage"},{default:t(()=>n[3]||(n[3]=[s("Usage")])),_:1})]),a("li",null,[e(o,{to:"#resources"},{default:t(()=>n[4]||(n[4]=[s("Resources")])),_:1}),a("ul",null,[a("li",null,[e(o,{to:"#configuration"},{default:t(()=>n[5]||(n[5]=[s("Configuration")])),_:1})]),a("li",null,[e(o,{to:"#routes"},{default:t(()=>n[6]||(n[6]=[s("Routes")])),_:1})]),a("li",null,[e(o,{to:"#migrations"},{default:t(()=>n[7]||(n[7]=[s("Migrations")])),_:1})])])]),a("li",null,[e(o,{to:"#commands"},{default:t(()=>n[8]||(n[8]=[s("Commands")])),_:1})]),a("li",null,[e(o,{to:"#public-assets"},{default:t(()=>n[9]||(n[9]=[s("Public Assets")])),_:1})]),a("li",null,[e(o,{to:"#publishing-file-groups"},{default:t(()=>n[10]||(n[10]=[s("Publishing File Groups")])),_:1})]),a("li",null,[e(o,{to:"#publish-resources"},{default:t(()=>n[11]||(n[11]=[s("Publish Resources")])),_:1})])])]),n[36]||(n[36]=p(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Packages are the primary way of adding functionality to Goravel. These packages may contain routes, controllers, and configurations that are specifically designed to enhance a Goravel application. This guide focuses on developing Goravel-specific packages.</p><p>Here is an example for building a third-party package: <a href="https://github.com/goravel/example-package" target="_blank" rel="noopener noreferrer">goravel/example-package</a></p><h2 id="creating-a-package" tabindex="-1"><a class="header-anchor" href="#creating-a-package"><span>Creating A Package</span></a></h2><p>You can use easily create a package template using the Artisan command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan make:package sms</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The created files are saved by default in the root <code>packages</code> folder, you can use <code>--root</code> option to customize:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan make:package <span class="token parameter variable">--root</span><span class="token operator">=</span>pkg sms</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="service-providers" tabindex="-1"><a class="header-anchor" href="#service-providers"><span>Service Providers</span></a></h2>`,9)),a("p",null,[e(i,{to:"/architecutre-concepts/service-providers.html"},{default:t(()=>n[12]||(n[12]=[s("Service providers")])),_:1}),n[13]||(n[13]=s(" act as the bridge between your package and Goravel. They are typically located in the root of the package as a ")),n[14]||(n[14]=a("code",null,"service_provider.go",-1)),n[15]||(n[15]=s(" file. Their main function is to bind items into Goravel's service container and guide Goravel in loading package resources."))]),n[37]||(n[37]=p(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>Register the <code>ServiceProvider</code> in the package to <code>config/app.go::providers</code>, then export <code>facades</code> to the application. For detailed steps, refer to <a href="https://github.com/goravel/example-package" target="_blank" rel="noopener noreferrer">goravel/example-package</a>.</p><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources"><span>Resources</span></a></h2><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h3><p>Typically, you will need to publish your package&#39;s configuration file to the application&#39;s <code>config</code> directory. This will allow users of your package to easily override your default configuration options. To allow your configuration files to be published, call the <code>Publishes</code> method from the <code>Boot</code> method of your service provider, the first parameter is the package name, and the second parameter is the mapping between the current package file path and the project path:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;config/sms.go&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">ConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;sms.go&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes"><span>Routes</span></a></h3>`,7)),a("p",null,[n[17]||(n[17]=s("If there are ")),e(i,{to:"/the-basics/routing.html"},{default:t(()=>n[16]||(n[16]=[s("routes")])),_:1}),n[18]||(n[18]=s(" in your package, you can use ")),n[19]||(n[19]=a("code",null,"app.MakeRoute()",-1)),n[20]||(n[20]=s(" to resolve ")),n[21]||(n[21]=a("code",null,"facades.Route()",-1)),n[22]||(n[22]=s(", then add the routes to the project:"))]),n[38]||(n[38]=p(`<div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	route <span class="token operator">:=</span> app<span class="token punctuation">.</span><span class="token function">MakeRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	route<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;sms&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="migrations" tabindex="-1"><a class="header-anchor" href="#migrations"><span>Migrations</span></a></h3>`,2)),a("p",null,[n[24]||(n[24]=s("If there are ")),e(i,{to:"/orm/migrations.html"},{default:t(()=>n[23]||(n[23]=[s("migrations")])),_:1}),n[25]||(n[25]=s(" in your package, you can publish them by the ")),n[26]||(n[26]=a("code",null,"Publishes",-1)),n[27]||(n[27]=s(" method:"))]),n[39]||(n[39]=p(`<div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;migrations&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">DatabasePath</span><span class="token punctuation">(</span><span class="token string">&quot;migrations&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2>`,2)),a("p",null,[n[29]||(n[29]=s("You can register ")),n[30]||(n[30]=a("code",null,"Artisan",-1)),n[31]||(n[31]=s(" command by the ")),n[32]||(n[32]=a("code",null,"Commands",-1)),n[33]||(n[33]=s(" method, you can run the commands using ")),e(i,{to:"/digging-deeper/artisan-console.html"},{default:t(()=>n[28]||(n[28]=[s("Artisan CLI")])),_:1}),n[34]||(n[34]=s(" after registering them."))]),n[40]||(n[40]=p(`<div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	app<span class="token punctuation">.</span><span class="token function">Commands</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span>Command<span class="token punctuation">{</span></span>
<span class="line">		commands<span class="token punctuation">.</span><span class="token function">NewSmsCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="public-assets" tabindex="-1"><a class="header-anchor" href="#public-assets"><span>Public Assets</span></a></h2><p>Your package may have assets such as JavaScript, CSS, and images. To publish these assets to the application&#39;s <code>public</code> directory, use the service provider&#39;s <code>Publishes</code> method:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;public&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">PublicPath</span><span class="token punctuation">(</span><span class="token string">&quot;vendor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publishing-file-groups" tabindex="-1"><a class="header-anchor" href="#publishing-file-groups"><span>Publishing File Groups</span></a></h2><p>If you want to publish specific groups of package assets and resources separately, you can use tags when calling the <code>Publishes</code> method from the package&#39;s service provider. This allows you to give users the option to publish certain files, like configuration files, without having to publish all the package&#39;s assets. To illustrate, you can define two publish groups for the <code>sms</code> package (<code>sms-config</code> and <code>sms-migrations</code>) using tags in the <code>Boot</code> method of the package&#39;s service provider.</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>receiver <span class="token operator">*</span>ServiceProvider<span class="token punctuation">)</span> <span class="token function">Boot</span><span class="token punctuation">(</span>app foundation<span class="token punctuation">.</span>Application<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;config/sms.go&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">ConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;sms.go&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;sms-config&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">Publishes</span><span class="token punctuation">(</span><span class="token string">&quot;github.com/goravel/example-package&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;migrations&quot;</span><span class="token punctuation">:</span> app<span class="token punctuation">.</span><span class="token function">DatabasePath</span><span class="token punctuation">(</span><span class="token string">&quot;migrations&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;sms-migrations&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publish-resources" tabindex="-1"><a class="header-anchor" href="#publish-resources"><span>Publish Resources</span></a></h2><p>In the project, You can publish the resources registered in a package using <code>vendor:publish</code> Artisan command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">go run <span class="token builtin class-name">.</span> artisan vendor:publish <span class="token parameter variable">--package</span><span class="token operator">=</span><span class="token punctuation">{</span>You package name<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The command can use the following options:</p><table><thead><tr><th>Option Name</th><th>Alias</th><th>Action</th></tr></thead><tbody><tr><td>--package</td><td>-p</td><td>Package name, can be a remote package: <code>github.com/goravel/example-package</code>, and also can be a local package: <code>./packages/example-package</code>, note that when using a local package name, it needs to start with <code>./</code>.</td></tr><tr><td>--tag</td><td>-t</td><td>Resource Group</td></tr><tr><td>--force</td><td>-f</td><td>Overwrite any existing files</td></tr><tr><td>--existing</td><td>-e</td><td>Publish and overwrite only the files that have already been published</td></tr></tbody></table>`,12)),e(c)])}const b=u(g,[["render",m],["__file","package-development.html.vue"]]),f=JSON.parse('{"path":"/digging-deeper/package-development.html","title":"Package Development","lang":"en-US","frontmatter":{"description":"Package Development Introduction Packages are the primary way of adding functionality to Goravel. These packages may contain routes, controllers, and configurations that are spe...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goravel.dev/zh/digging-deeper/package-development.html"}],["meta",{"property":"og:url","content":"https://goravel.dev/digging-deeper/package-development.html"}],["meta",{"property":"og:site_name","content":"Goravel"}],["meta",{"property":"og:title","content":"/digging-deeper/package-development.html"}],["meta",{"property":"og:description","content":"Package Development Introduction Packages are the primary way of adding functionality to Goravel. These packages may contain routes, controllers, and configurations that are spe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Package Development\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Creating A Package","slug":"creating-a-package","link":"#creating-a-package","children":[]},{"level":2,"title":"Service Providers","slug":"service-providers","link":"#service-providers","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Resources","slug":"resources","link":"#resources","children":[{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":3,"title":"Routes","slug":"routes","link":"#routes","children":[]},{"level":3,"title":"Migrations","slug":"migrations","link":"#migrations","children":[]}]},{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[]},{"level":2,"title":"Public Assets","slug":"public-assets","link":"#public-assets","children":[]},{"level":2,"title":"Publishing File Groups","slug":"publishing-file-groups","link":"#publishing-file-groups","children":[]},{"level":2,"title":"Publish Resources","slug":"publish-resources","link":"#publish-resources","children":[]}],"git":{},"filePathRelative":"digging-deeper/package-development.md","autoDesc":true}');export{b as comp,f as data};
