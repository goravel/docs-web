import{_ as r,r as s,o as d,c as u,b as e,d as n,w as o,e as t,f as l}from"./app.801e74b4.js";const c={},h=e("h1",{id:"routing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#routing","aria-hidden":"true"},"#"),t(" Routing")],-1),g={class:"table-of-contents"},m=t("Introduction"),v=t("Default Routing File"),_=t("Start HTTP Server"),f=t("Basic Routing"),b=t("Available Routing Methods"),p=t("Routing Parameters"),q=t("Routing Queries"),x=t("More"),R=e("h2",{id:"introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),t(" Introduction")],-1),T=t("Goravel routing module can use "),S=e("code",null,"facades.Route",-1),P=t(" to operate, "),k=e("code",null,"facades.Route",-1),E=t(" is an example of well-known HTTP framework "),H={href:"https://github.com/gin-gonic/gin",target:"_blank",rel:"noopener noreferrer"},w=t("gin-gonic/gin"),G=t(", the usage is exactly the same as "),y=e("code",null,"gin-gonic/gin",-1),O=t("."),C=l(`<h2 id="default-routing-file" tabindex="-1"><a class="header-anchor" href="#default-routing-file" aria-hidden="true">#</a> Default Routing File</h2><p>All routing files are defined in the <code>/routes</code> directory. The framework defaults to a sample route <code>/routes/web.go</code>, in which the <code>func Web</code> method is registered in the <code>app/providers/route_service_provider.go</code> file to achieve routing binding.</p><p>You can also perform more fine-grained management based on this method. You can add routing files under the <code>routes</code> directory, and then register in the <code>app/providers/route_service_provider.go</code> file.</p><h2 id="start-http-server" tabindex="-1"><a class="header-anchor" href="#start-http-server" aria-hidden="true">#</a> Start HTTP Server</h2><p>Start the HTTP server in <code>main.go</code> in the root directory.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.Route.Run(&quot;127.0.0.1:3000&quot;)
// OR
facades.Route.Run(facades.Config.GetString(&quot;app.host&quot;))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="basic-routing" tabindex="-1"><a class="header-anchor" href="#basic-routing" aria-hidden="true">#</a> Basic Routing</h2><p>You can define a very simple route in the form of a closure:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.Route.GET(&quot;/&quot;, func(c *gin.Context) {
    c.JSON(200, gin.H{
        &quot;message&quot;: &quot;pong&quot;,
    })
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="available-routing-methods" tabindex="-1"><a class="header-anchor" href="#available-routing-methods" aria-hidden="true">#</a> Available Routing Methods</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.Route.GET(&quot;/someGet&quot;, getting)
facades.Route.POST(&quot;/somePost&quot;, posting)
facades.Route.PUT(&quot;/somePut&quot;, putting)
facades.Route.DELETE(&quot;/someDelete&quot;, deleting)
facades.Route.PATCH(&quot;/somePatch&quot;, patching)
facades.Route.HEAD(&quot;/someHead&quot;, head)
facades.Route.OPTIONS(&quot;/someOptions&quot;, options)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routing-parameters" tabindex="-1"><a class="header-anchor" href="#routing-parameters" aria-hidden="true">#</a> Routing Parameters</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>facades.Route.GET(&quot;/user/:name&quot;, func(c *gin.Context) {
    name := c.Param(&quot;name&quot;)
    c.String(http.StatusOK, &quot;Hello %s&quot;, name)
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routing-queries" tabindex="-1"><a class="header-anchor" href="#routing-queries" aria-hidden="true">#</a> Routing Queries</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>router.GET(&quot;/welcome&quot;, func(c *gin.Context) {
    firstname := c.DefaultQuery(&quot;firstname&quot;, &quot;Guest&quot;)
    lastname := c.Query(&quot;lastname&quot;) // shortcut for c.Request.URL.Query().Get(&quot;lastname&quot;)

    c.String(http.StatusOK, &quot;Hello %s %s&quot;, firstname, lastname)
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="more" tabindex="-1"><a class="header-anchor" href="#more" aria-hidden="true">#</a> More</h3>`,16),D=t("See "),N={href:"https://github.com/gin-gonic/gin",target:"_blank",rel:"noopener noreferrer"},A=t("gin-gonic/gin");function B(I,Q){const i=s("router-link"),a=s("ExternalLinkIcon");return d(),u("div",null,[h,e("nav",g,[e("ul",null,[e("li",null,[n(i,{to:"#introduction"},{default:o(()=>[m]),_:1})]),e("li",null,[n(i,{to:"#default-routing-file"},{default:o(()=>[v]),_:1})]),e("li",null,[n(i,{to:"#start-http-server"},{default:o(()=>[_]),_:1})]),e("li",null,[n(i,{to:"#basic-routing"},{default:o(()=>[f]),_:1}),e("ul",null,[e("li",null,[n(i,{to:"#available-routing-methods"},{default:o(()=>[b]),_:1})]),e("li",null,[n(i,{to:"#routing-parameters"},{default:o(()=>[p]),_:1})]),e("li",null,[n(i,{to:"#routing-queries"},{default:o(()=>[q]),_:1})]),e("li",null,[n(i,{to:"#more"},{default:o(()=>[x]),_:1})])])])])]),R,e("p",null,[T,S,P,k,E,e("a",H,[w,n(a)]),G,y,O]),C,e("p",null,[D,e("a",N,[A,n(a)])])])}const M=r(c,[["render",B],["__file","routing.html.vue"]]);export{M as default};
